{"version":3,"sources":["../../src/values/PrimitiveValue.js"],"names":["PrimitiveValue","ConcreteValue","constructor","realm","intrinsicName","throwIfNotConcretePrimitive","toDisplayString"],"mappings":";;;;;;;AAYA;;AACA;;;;AAbA;;;;;;;;;AASA;AAMe,MAAMA,cAAN,SAA6BC,oBAA7B,CAA2C;AACxDC,EAAAA,WAAW,CAACC,KAAD,EAAeC,aAAf,EAAuC;AAChD,4BAAUD,KAAV,EAAiB,gBAAjB;AACA,UAAMA,KAAN,EAAaC,aAAb;AACD;;AAEDC,EAAAA,2BAA2B,GAAmB;AAC5C,WAAO,IAAP;AACD;;AAEDC,EAAAA,eAAe,GAAW;AACxB,4BAAU,KAAV,EAAiB,kCAAjB;AACD;;AAZuD","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow strict-local */\n\nimport type { Realm } from \"../realm.js\";\nimport { ConcreteValue } from \"./index.js\";\nimport invariant from \"../invariant.js\";\n\nexport default class PrimitiveValue extends ConcreteValue {\n  constructor(realm: Realm, intrinsicName?: string) {\n    invariant(realm, \"realm required\");\n    super(realm, intrinsicName);\n  }\n\n  throwIfNotConcretePrimitive(): PrimitiveValue {\n    return this;\n  }\n\n  toDisplayString(): string {\n    invariant(false, \"abstract method; please override\");\n  }\n}\n"],"file":"PrimitiveValue.js"}