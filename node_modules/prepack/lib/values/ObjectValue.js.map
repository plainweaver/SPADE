{"version":3,"sources":["../../src/values/ObjectValue.js"],"names":["ObjectValue","ConcreteValue","constructor","realm","proto","intrinsicName","refuseSerialization","recordNewObject","useAbstractInterpretation","setupBindings","getTrackedPropertyNames","$Prototype","intrinsics","null","$Extensible","true","_isPartial","false","_isLeaked","_isSimple","_simplicityIsTransitive","_isFinal","properties","Map","symbols","$IsClassPrototype","trackedPropertyNames","propertyNames","propName","propBindingName","trackedPropertyBindingNames","get","undefined","setupTrackedPropertyAccessors","set","Object","defineProperty","prototype","configurable","binding","descriptor","InternalSlotDescriptor","value","v","mightNotBeLeakedObject","desc","object","key","internalSlot","$Realm","recordModifiedProperty","isValid","equals","x","getHash","hashValue","objectCount","temporalAlias","_temporalAlias","hasStringOrSymbolProperties","prop","values","mightBeFalse","mightNotBeObject","throwIfNotObject","makePartial","makeSimple","option","BooleanValue","StringValue","makeFinal","makeNotFinal","isPartialObject","mightBeTrue","mightBeFinalObject","mightNotBeFinalObject","mightNotBeTrue","leak","mightBeLeakedObject","isSimpleObject","ObjectPrototype","size","propertyBinding","writable","NullValue","isTransitivelySimple","getExtensible","throwIfNotConcreteBoolean","setExtensible","getKind","$SymbolData","$StringData","$NumberData","$BooleanData","$DateValue","$RegExpMatcher","$SetData","$MapData","$DataView","$ArrayBufferData","$WeakMapData","$WeakSetData","react","enabled","$TypedArrayName","defineNativeMethod","name","length","callback","SymbolValue","fnValue","NativeFunctionValue","defineNativeProperty","Value","$DefineOwnProperty","PropertyDescriptor","enumerable","defineNativeGetter","funcName","$Description","throwIfNotConcreteString","func","defineNativeConstant","getSnapshot","options","template","keys","Properties","GetOwnPropertyKeysArray","copyKeys","reactProps","has","add","operationDescriptor","result","AbstractValue","createTemporalFromBuildFunction","skipInvariant","isPure","AbstractObjectValue","ValuesDomain","removeProperties","unknownProperty","from","to","nextKey","$GetOwnProperty","throwIfNotConcrete","ThrowIfMightHaveBeenDeleted","propValue","Set","_serialize","stack","obj","serializedDesc","serialize","usesOrdinaryObjectInternalPrototypeMethods","$GetPrototypeOf","$SetPrototypeOf","V","OrdinarySetPrototypeOf","$IsExtensible","$PreventExtensions","P","OrdinaryGetOwnProperty","Desc","OrdinaryDefineOwnProperty","$HasProperty","reportIntrospectionError","FatalError","$Get","Receiver","_SafeGetDataPropertyValue","savedInvariantLevel","invariantLevel","$GetPartial","$Set","OrdinarySet","$SetPartial","OrdinarySetPartial","$Delete","OrdinaryDelete","$OwnPropertyKeys","getOwnPropertyKeysEvenIfPartial","refuseSerializationOnPropertyBinding","pb","isIntrinsicDerivedObject","isScopedTemplate"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { Realm, ExecutionContext } from \"../realm.js\";\nimport { ValuesDomain } from \"../domains/index.js\";\nimport { FatalError } from \"../errors.js\";\nimport type {\n  DataBlock,\n  IterationKind,\n  ObjectKind,\n  PromiseReaction,\n  PropertyBinding,\n  PropertyKeyValue,\n  TypedArrayKind,\n} from \"../types.js\";\nimport {\n  AbstractObjectValue,\n  AbstractValue,\n  BooleanValue,\n  ConcreteValue,\n  NativeFunctionValue,\n  NullValue,\n  NumberValue,\n  StringValue,\n  SymbolValue,\n  UndefinedValue,\n  Value,\n} from \"./index.js\";\nimport { isReactElement } from \"../react/utils.js\";\nimport { ECMAScriptSourceFunctionValue, type NativeFunctionCallback } from \"./index.js\";\nimport {\n  Get,\n  IsDataDescriptor,\n  OrdinaryOwnPropertyKeys,\n  OrdinaryGet,\n  OrdinaryGetPartial,\n  OrdinaryHasProperty,\n  OrdinaryIsExtensible,\n  OrdinaryPreventExtensions,\n} from \"../methods/index.js\";\nimport { Properties } from \"../singletons.js\";\nimport invariant from \"../invariant.js\";\nimport type { typeAnnotation } from \"@babel/types\";\nimport { createOperationDescriptor } from \"../utils/generator.js\";\nimport { Descriptor, PropertyDescriptor, type DescriptorInitializer, InternalSlotDescriptor } from \"../descriptors.js\";\n\nexport default class ObjectValue extends ConcreteValue {\n  constructor(\n    realm: Realm,\n    proto?: ObjectValue | NullValue,\n    intrinsicName?: string,\n    refuseSerialization: boolean = false\n  ) {\n    super(realm, intrinsicName);\n    realm.recordNewObject(this);\n    if (realm.useAbstractInterpretation) this.setupBindings(this.getTrackedPropertyNames());\n    this.$Prototype = proto || realm.intrinsics.null;\n    this.$Extensible = realm.intrinsics.true;\n    this._isPartial = realm.intrinsics.false;\n    this._isLeaked = realm.intrinsics.false;\n    this._isSimple = realm.intrinsics.false;\n    this._simplicityIsTransitive = realm.intrinsics.false;\n    this._isFinal = realm.intrinsics.false;\n    this.properties = new Map();\n    this.symbols = new Map();\n    this.refuseSerialization = refuseSerialization;\n\n    // this.$IsClassPrototype should be the last thing that gets initialized,\n    // as other code checks whether this.$IsClassPrototype === undefined\n    // as a proxy for whether initialization is still ongoing.\n    this.$IsClassPrototype = false;\n  }\n\n  static trackedPropertyNames = [\n    \"_isPartial\",\n    \"_isLeaked\",\n    \"_isSimple\",\n    \"_isFinal\",\n    \"_simplicityIsTransitive\",\n    \"_temporalAlias\",\n    \"$ArrayIteratorNextIndex\",\n    \"$DateValue\",\n    \"$Extensible\",\n    \"$IteratedList\",\n    \"$IteratedObject\",\n    \"$IteratedSet\",\n    \"$IteratedString\",\n    \"$Map\",\n    \"$MapData\",\n    \"$MapNextIndex\",\n    \"$Prototype\",\n    \"$SetData\",\n    \"$SetNextIndex\",\n    \"$StringIteratorNextIndex\",\n    \"$WeakMapData\",\n    \"$WeakSetData\",\n  ];\n  static trackedPropertyBindingNames = new Map();\n\n  getTrackedPropertyNames(): Array<string> {\n    return ObjectValue.trackedPropertyNames;\n  }\n\n  setupBindings(propertyNames: Array<string>): void {\n    for (let propName of propertyNames) {\n      let propBindingName = ObjectValue.trackedPropertyBindingNames.get(propName);\n      invariant(propBindingName !== undefined);\n      (this: any)[propBindingName] = undefined;\n    }\n  }\n\n  static setupTrackedPropertyAccessors(propertyNames: Array<string>): void {\n    for (let propName of propertyNames) {\n      let propBindingName = ObjectValue.trackedPropertyBindingNames.get(propName);\n      if (propBindingName === undefined)\n        ObjectValue.trackedPropertyBindingNames.set(propName, (propBindingName = propName + \"_binding\"));\n      Object.defineProperty(ObjectValue.prototype, propName, {\n        configurable: true,\n        get: function() {\n          let binding = this[propBindingName];\n          invariant(binding === undefined || binding.descriptor instanceof InternalSlotDescriptor);\n          return binding === undefined ? undefined : binding.descriptor.value;\n        },\n        set: function(v) {\n          // Let's make sure that the object is not leaked.\n          // To that end, we'd like to call this.isLeakedObject().\n          // However, while the object is still being initialized,\n          // properties may be set, but this.isLeakedObject() may not be called yet.\n          // To check if we are still initializing, guard the call by looking at\n          // whether this.$IsClassPrototype has been initialized as a proxy for\n          // object initialization in general.\n          invariant(\n            // We're still initializing so we can set a property.\n            this.$IsClassPrototype === undefined ||\n              // It's not leaked so we can set a property.\n              this.mightNotBeLeakedObject() ||\n              // Object.assign() implementation needs to temporarily\n              // make potentially leaked objects non-partial and back.\n              // We don't gain anything from checking whether it's leaked\n              // before calling makePartial() so we'll whitelist this property.\n              propBindingName === \"_isPartial_binding\",\n            \"cannot mutate a leaked object\"\n          );\n          let binding = this[propBindingName];\n          if (binding === undefined) {\n            let desc = new InternalSlotDescriptor(undefined);\n            this[propBindingName] = binding = {\n              descriptor: desc,\n              object: this,\n              key: propName,\n              internalSlot: true,\n            };\n          }\n          this.$Realm.recordModifiedProperty(binding);\n          binding.descriptor.value = v;\n        },\n      });\n    }\n  }\n\n  $Prototype: ObjectValue | AbstractObjectValue | NullValue;\n  $Extensible: BooleanValue | AbstractValue;\n\n  $ParameterMap: void | ObjectValue; // undefined when the property is \"missing\"\n  $SymbolData: void | SymbolValue | AbstractValue;\n  $StringData: void | StringValue | AbstractValue;\n  $NumberData: void | NumberValue | AbstractValue;\n  $BooleanData: void | BooleanValue | AbstractValue;\n\n  // error\n  $ErrorData: void | {\n    // undefined when the property is \"missing\"\n    contextStack: Array<ExecutionContext>,\n    locationData: void | {\n      filename: string,\n      sourceCode: string,\n      loc: { line: number, column: number },\n      stackDecorated: boolean,\n    },\n  };\n\n  // function\n  $Call: void | ((thisArgument: Value, argumentsList: Array<Value>) => Value);\n  $Construct: void | ((argumentsList: Array<Value>, newTarget: ObjectValue) => ObjectValue | AbstractObjectValue);\n\n  // promise\n  $PromiseState: void | \"pending\" | \"fulfilled\" | \"rejected\";\n  $PromiseResult: void | Value;\n  $PromiseFulfillReactions: void | Array<PromiseReaction>;\n  $PromiseRejectReactions: void | Array<PromiseReaction>;\n  $PromiseIsHandled: void | boolean;\n\n  // iterator\n  $IteratedList: void | Array<Value>;\n  $ListIteratorNextIndex: void | number;\n  $IteratorNext: void | NativeFunctionValue;\n\n  // set\n  $SetIterationKind: void | IterationKind;\n  $SetNextIndex: void | number;\n  $IteratedSet: void | ObjectValue | UndefinedValue;\n  $SetData: void | Array<void | Value>;\n\n  // react\n  $SuperTypeParameters: void | typeAnnotation;\n\n  // map\n  $MapIterationKind: void | IterationKind;\n  $MapNextIndex: void | NumberValue;\n  $MapData: void | Array<{ $Key: void | Value, $Value: void | Value }>;\n  $Map: void | ObjectValue | UndefinedValue;\n\n  // weak map\n  $WeakMapData: void | Array<{ $Key: void | Value, $Value: void | Value }>;\n\n  // weak set\n  $WeakSetData: void | Array<void | Value>;\n\n  // date\n  $DateValue: void | NumberValue | AbstractValue; // of type number\n\n  // array\n  $ArrayIterationKind: void | IterationKind;\n  $ArrayIteratorNextIndex: void | NumberValue;\n  $IteratedObject: void | UndefinedValue | ObjectValue;\n\n  // regex\n  $OriginalSource: void | string;\n  $OriginalFlags: void | string;\n  $RegExpMatcher: void | ((S: string, lastIndex: number) => ?{ endIndex: number, captures: Array<any> });\n\n  // string\n  $StringIteratorNextIndex: void | number;\n  $IteratedString: void | StringValue;\n\n  // data view\n  $DataView: void | true;\n  $ViewedArrayBuffer: void | ObjectValue;\n  $ByteLength: void | number;\n  $ByteOffset: void | number;\n\n  // array buffer\n  $ArrayBufferData: void | null | DataBlock;\n  $ArrayBufferByteLength: void | number;\n\n  // generator\n  $GeneratorState: void | \"suspendedStart\" | \"executing\";\n  $GeneratorContext: void | ExecutionContext;\n\n  // typed array\n  $TypedArrayName: void | TypedArrayKind;\n  $ViewedArrayBuffer: void | ObjectValue;\n  $ArrayLength: void | number;\n\n  // backpointer to the constructor if this object was created its prototype object\n  originalConstructor: void | ECMAScriptSourceFunctionValue;\n\n  // partial objects\n  _isPartial: AbstractValue | BooleanValue;\n\n  // tainted objects\n  _isLeaked: AbstractValue | BooleanValue;\n\n  // If true, the object has no property getters or setters and it is safe\n  // to return AbstractValue for unknown properties.\n  _isSimple: AbstractValue | BooleanValue;\n\n  // If true, it is not safe to perform any more mutations that would change\n  // the object's serialized form.\n  _isFinal: AbstractValue | BooleanValue;\n\n  // Specifies whether the object is a template that needs to be created in a scope\n  // If set, this happened during object initialization and the value is never changed again, so not tracked.\n  isScopedTemplate: void | true;\n\n  // If true, then unknown properties should return transitively simple abstract object values\n  _simplicityIsTransitive: AbstractValue | BooleanValue;\n\n  // The abstract object for which this object is the template.\n  // Use this instead of the object itself when deriving temporal values for object properties.\n  _templateFor: void | AbstractObjectValue;\n\n  properties: Map<string, PropertyBinding>;\n  symbols: Map<SymbolValue, PropertyBinding>;\n  unknownProperty: void | PropertyBinding;\n  _temporalAlias: void | AbstractObjectValue;\n\n  // An object value with an intrinsic name can either exist from the beginning of time,\n  // or it can be associated with a particular point in time by being used as a template\n  // when deriving an abstract value via a generator.\n  intrinsicNameGenerated: void | true;\n  hashValue: void | number;\n\n  // ReactElement\n  $BailOutReason: void | string;\n\n  // ES2015 classes\n  $IsClassPrototype: boolean;\n\n  // We track some internal state as properties on the global object, these should\n  // never be serialized.\n  refuseSerialization: boolean;\n\n  // Checks whether effects are properly applied.\n  isValid(): boolean {\n    return this._isPartial !== undefined;\n  }\n\n  equals(x: Value): boolean {\n    return this === x;\n  }\n\n  getHash(): number {\n    if (!this.hashValue) {\n      this.hashValue = ++this.$Realm.objectCount;\n    }\n    return this.hashValue;\n  }\n\n  get temporalAlias(): void | AbstractObjectValue {\n    return this._temporalAlias;\n  }\n\n  set temporalAlias(value: AbstractObjectValue) {\n    this._temporalAlias = value;\n  }\n\n  hasStringOrSymbolProperties(): boolean {\n    for (let prop of this.properties.values()) {\n      if (prop.descriptor === undefined) continue;\n      return true;\n    }\n    for (let prop of this.symbols.values()) {\n      if (prop.descriptor === undefined) continue;\n      return true;\n    }\n    return false;\n  }\n\n  mightBeFalse(): boolean {\n    return false;\n  }\n\n  mightNotBeObject(): boolean {\n    return false;\n  }\n\n  throwIfNotObject(): ObjectValue {\n    return this;\n  }\n\n  makePartial(): void {\n    this._isPartial = this.$Realm.intrinsics.true;\n  }\n\n  makeSimple(option?: string | Value): void {\n    this._isSimple = this.$Realm.intrinsics.true;\n    this._simplicityIsTransitive = new BooleanValue(\n      this.$Realm,\n      option === \"transitive\" || (option instanceof StringValue && option.value === \"transitive\")\n    );\n  }\n\n  makeFinal(): void {\n    this._isFinal = this.$Realm.intrinsics.true;\n  }\n\n  makeNotFinal(): void {\n    this._isFinal = this.$Realm.intrinsics.false;\n  }\n\n  isPartialObject(): boolean {\n    return this._isPartial.mightBeTrue();\n  }\n\n  // When this object was created in an evaluateForEffects context and the effects have not been applied, the\n  // value is not valid (and we shouldn't try to access any properties on it). isPartial should always be set\n  // except when reverted by effects.\n  isValid(): boolean {\n    return this._isPartial !== undefined;\n  }\n\n  mightBeFinalObject(): boolean {\n    return this._isFinal.mightBeTrue();\n  }\n\n  mightNotBeFinalObject(): boolean {\n    return this._isFinal.mightNotBeTrue();\n  }\n\n  leak(): void {\n    this._isLeaked = this.$Realm.intrinsics.true;\n  }\n\n  mightBeLeakedObject(): boolean {\n    return this._isLeaked.mightBeTrue();\n  }\n\n  mightNotBeLeakedObject(): boolean {\n    return this._isLeaked.mightNotBeTrue();\n  }\n\n  isSimpleObject(): boolean {\n    if (this === this.$Realm.intrinsics.ObjectPrototype) return true;\n    if (!this._isSimple.mightNotBeTrue()) return true;\n    if (this.isPartialObject()) return false;\n    if (this.symbols.size > 0) return false;\n    for (let propertyBinding of this.properties.values()) {\n      let desc = propertyBinding.descriptor;\n      if (desc === undefined) continue; // deleted\n      if (!IsDataDescriptor(this.$Realm, desc)) return false;\n      if (!desc.writable) return false;\n    }\n    if (this.$Prototype instanceof NullValue) return true;\n    invariant(this.$Prototype);\n    return this.$Prototype.isSimpleObject();\n  }\n\n  isTransitivelySimple(): boolean {\n    return !this._simplicityIsTransitive.mightNotBeTrue();\n  }\n\n  getExtensible(): boolean {\n    return this.$Extensible.throwIfNotConcreteBoolean().value;\n  }\n\n  setExtensible(v: boolean) {\n    this.$Extensible = v ? this.$Realm.intrinsics.true : this.$Realm.intrinsics.false;\n  }\n\n  getKind(): ObjectKind {\n    // we can deduce the natural prototype by checking whether the following internal slots are present\n    if (this.$SymbolData !== undefined) return \"Symbol\";\n    if (this.$StringData !== undefined) return \"String\";\n    if (this.$NumberData !== undefined) return \"Number\";\n    if (this.$BooleanData !== undefined) return \"Boolean\";\n    if (this.$DateValue !== undefined) return \"Date\";\n    if (this.$RegExpMatcher !== undefined) return \"RegExp\";\n    if (this.$SetData !== undefined) return \"Set\";\n    if (this.$MapData !== undefined) return \"Map\";\n    if (this.$DataView !== undefined) return \"DataView\";\n    if (this.$ArrayBufferData !== undefined) return \"ArrayBuffer\";\n    if (this.$WeakMapData !== undefined) return \"WeakMap\";\n    if (this.$WeakSetData !== undefined) return \"WeakSet\";\n    if (isReactElement(this) && this.$Realm.react.enabled) return \"ReactElement\";\n    if (this.$TypedArrayName !== undefined) return this.$TypedArrayName;\n    // TODO #26 #712: Promises. All kinds of iterators. Generators.\n    return \"Object\";\n  }\n\n  defineNativeMethod(\n    name: SymbolValue | string,\n    length: number,\n    callback: NativeFunctionCallback,\n    desc?: DescriptorInitializer\n  ): Value {\n    let intrinsicName;\n    if (typeof name === \"string\") {\n      if (this.intrinsicName) intrinsicName = `${this.intrinsicName}.${name}`;\n    } else if (name instanceof SymbolValue) {\n      if (this.intrinsicName && name.intrinsicName) intrinsicName = `${this.intrinsicName}[${name.intrinsicName}]`;\n    } else {\n      invariant(false);\n    }\n    let fnValue = new NativeFunctionValue(this.$Realm, intrinsicName, name, length, callback, false);\n    this.defineNativeProperty(name, fnValue, desc);\n    return fnValue;\n  }\n\n  defineNativeProperty(name: SymbolValue | string, value?: Value | Array<Value>, desc?: DescriptorInitializer): void {\n    invariant(!value || value instanceof Value);\n    this.$DefineOwnProperty(\n      name,\n      new PropertyDescriptor({\n        value,\n        writable: true,\n        enumerable: false,\n        configurable: true,\n        ...desc,\n      })\n    );\n  }\n\n  defineNativeGetter(name: SymbolValue | string, callback: NativeFunctionCallback, desc?: DescriptorInitializer): void {\n    let intrinsicName, funcName;\n    if (typeof name === \"string\") {\n      funcName = `get ${name}`;\n      if (this.intrinsicName) intrinsicName = `${this.intrinsicName}.${name}`;\n    } else if (name instanceof SymbolValue) {\n      funcName =\n        name.$Description instanceof Value\n          ? `get [${name.$Description.throwIfNotConcreteString().value}]`\n          : `get [${\"?\"}]`;\n      if (this.intrinsicName && name.intrinsicName) intrinsicName = `${this.intrinsicName}[${name.intrinsicName}]`;\n    } else {\n      invariant(false);\n    }\n\n    let func = new NativeFunctionValue(this.$Realm, intrinsicName, funcName, 0, callback);\n    this.$DefineOwnProperty(\n      name,\n      new PropertyDescriptor({\n        get: func,\n        set: this.$Realm.intrinsics.undefined,\n        enumerable: false,\n        configurable: true,\n        ...desc,\n      })\n    );\n  }\n\n  defineNativeConstant(name: SymbolValue | string, value?: Value | Array<Value>, desc?: DescriptorInitializer): void {\n    invariant(!value || value instanceof Value);\n    this.$DefineOwnProperty(\n      name,\n      new PropertyDescriptor({\n        value,\n        writable: false,\n        enumerable: false,\n        configurable: false,\n        ...desc,\n      })\n    );\n  }\n\n  // Note that internal properties will not be copied to the snapshot, nor will they be removed.\n  getSnapshot(options?: { removeProperties: boolean }): AbstractObjectValue {\n    try {\n      if (this.temporalAlias !== undefined) return this.temporalAlias;\n      let realm = this.$Realm;\n      let template = new ObjectValue(this.$Realm, this.$Realm.intrinsics.ObjectPrototype);\n      let keys = Properties.GetOwnPropertyKeysArray(realm, this, false, true);\n      this.copyKeys(((keys: any): Array<PropertyKeyValue>), this, template);\n      // The snapshot is an immutable object snapshot\n      template.makeFinal();\n      // The original object might be a React props object, thus\n      // if it is, we need to ensure we mark it with the same rules\n      if (realm.react.enabled && realm.react.reactProps.has(this)) {\n        realm.react.reactProps.add(template);\n      }\n      let operationDescriptor = createOperationDescriptor(\"SINGLE_ARG\");\n      let result = AbstractValue.createTemporalFromBuildFunction(\n        this.$Realm,\n        ObjectValue,\n        [template],\n        operationDescriptor,\n        { skipInvariant: true, isPure: true }\n      );\n      invariant(result instanceof AbstractObjectValue);\n      result.values = new ValuesDomain(template);\n      return result;\n    } finally {\n      if (options && options.removeProperties) {\n        this.properties = new Map();\n        this.symbols = new Map();\n        this.unknownProperty = undefined;\n      }\n    }\n  }\n\n  copyKeys(keys: Array<PropertyKeyValue>, from: ObjectValue, to: ObjectValue): void {\n    // c. Repeat for each element nextKey of keys in List order,\n    for (let nextKey of keys) {\n      // i. Let desc be ? from.[[GetOwnProperty]](nextKey).\n      let desc = from.$GetOwnProperty(nextKey);\n\n      // ii. If desc is not undefined and desc.[[Enumerable]] is true, then\n      if (desc && desc.throwIfNotConcrete(this.$Realm).enumerable) {\n        Properties.ThrowIfMightHaveBeenDeleted(desc);\n\n        // 1. Let propValue be ? Get(from, nextKey).\n        let propValue = Get(this.$Realm, from, nextKey);\n\n        // 2. Perform ? Set(to, nextKey, propValue, true).\n        Properties.Set(this.$Realm, to, nextKey, propValue, true);\n      }\n    }\n  }\n\n  _serialize(set: Function, stack: Map<Value, any>): any {\n    let obj = set({});\n\n    for (let [key, propertyBinding] of this.properties) {\n      let desc = propertyBinding.descriptor;\n      if (desc === undefined) continue; // deleted\n      Properties.ThrowIfMightHaveBeenDeleted(desc);\n      desc = desc.throwIfNotConcrete(this.$Realm);\n      let serializedDesc: any = { enumerable: desc.enumerable, configurable: desc.configurable };\n      if (desc.value) {\n        serializedDesc.writable = desc.writable;\n        invariant(desc.value instanceof Value);\n        serializedDesc.value = desc.value.serialize(stack);\n      } else {\n        invariant(desc.get !== undefined);\n        serializedDesc.get = desc.get.serialize(stack);\n        invariant(desc.set !== undefined);\n        serializedDesc.set = desc.set.serialize(stack);\n      }\n      Object.defineProperty(obj, key, serializedDesc);\n    }\n    return obj;\n  }\n\n  // Whether [[{Get,Set}PrototypeOf]] delegate to Ordinary{Get,Set}PrototypeOf.\n  // E.g. ProxyValue overrides this to return false.\n  // See ECMA262 9.1.2.1 for an algorithm where this is relevant\n  usesOrdinaryObjectInternalPrototypeMethods(): boolean {\n    return true;\n  }\n\n  // ECMA262 9.1.1\n  $GetPrototypeOf(): ObjectValue | AbstractObjectValue | NullValue {\n    return this.$Prototype;\n  }\n\n  // ECMA262 9.1.2\n  $SetPrototypeOf(V: ObjectValue | NullValue): boolean {\n    // 1. Return ! OrdinarySetPrototypeOf(O, V).\n    return Properties.OrdinarySetPrototypeOf(this.$Realm, this, V);\n  }\n\n  // ECMA262 9.1.3\n  $IsExtensible(): boolean {\n    // 1. Return ! OrdinaryIsExtensible(O).\n    return OrdinaryIsExtensible(this.$Realm, this);\n  }\n\n  // ECMA262 9.1.4\n  $PreventExtensions(): boolean {\n    // 1. Return ! OrdinaryPreventExtensions(O).\n    return OrdinaryPreventExtensions(this.$Realm, this);\n  }\n\n  // ECMA262 9.1.5\n  $GetOwnProperty(P: PropertyKeyValue): Descriptor | void {\n    // 1. Return ! OrdinaryGetOwnProperty(O, P).\n    return Properties.OrdinaryGetOwnProperty(this.$Realm, this, P);\n  }\n\n  // ECMA262 9.1.6\n  $DefineOwnProperty(P: PropertyKeyValue, Desc: Descriptor): boolean {\n    // 1. Return ? OrdinaryDefineOwnProperty(O, P, Desc).\n    return Properties.OrdinaryDefineOwnProperty(this.$Realm, this, P, Desc);\n  }\n\n  // ECMA262 9.1.7\n  $HasProperty(P: PropertyKeyValue): boolean {\n    if (this.unknownProperty !== undefined && this.$GetOwnProperty(P) === undefined) {\n      AbstractValue.reportIntrospectionError(this, P);\n      throw new FatalError();\n    }\n\n    return OrdinaryHasProperty(this.$Realm, this, P);\n  }\n\n  // ECMA262 9.1.8\n  $Get(P: PropertyKeyValue, Receiver: Value): Value {\n    // 1. Return ? OrdinaryGet(O, P, Receiver).\n    return OrdinaryGet(this.$Realm, this, P, Receiver);\n  }\n\n  _SafeGetDataPropertyValue(P: PropertyKeyValue): Value {\n    let savedInvariantLevel = this.$Realm.invariantLevel;\n    try {\n      this.$Realm.invariantLevel = 0;\n      let desc = this.$GetOwnProperty(P);\n      if (desc === undefined) {\n        return this.$Realm.intrinsics.undefined;\n      }\n      desc = desc.throwIfNotConcrete(this.$Realm);\n      return desc.value ? desc.value : this.$Realm.intrinsics.undefined;\n    } finally {\n      this.$Realm.invariantLevel = savedInvariantLevel;\n    }\n  }\n\n  $GetPartial(P: AbstractValue | PropertyKeyValue, Receiver: Value): Value {\n    return OrdinaryGetPartial(this.$Realm, this, P, Receiver);\n  }\n\n  // ECMA262 9.1.9\n  $Set(P: PropertyKeyValue, V: Value, Receiver: Value): boolean {\n    // 1. Return ? OrdinarySet(O, P, V, Receiver).\n    return Properties.OrdinarySet(this.$Realm, this, P, V, Receiver);\n  }\n\n  $SetPartial(P: AbstractValue | PropertyKeyValue, V: Value, Receiver: Value): boolean {\n    return Properties.OrdinarySetPartial(this.$Realm, this, P, V, Receiver);\n  }\n\n  // ECMA262 9.1.10\n  $Delete(P: PropertyKeyValue): boolean {\n    if (this.unknownProperty !== undefined) {\n      // TODO #946: generate a delete from the object\n      AbstractValue.reportIntrospectionError(this, P);\n      throw new FatalError();\n    }\n\n    // 1. Return ? OrdinaryDelete(O, P).\n    return Properties.OrdinaryDelete(this.$Realm, this, P);\n  }\n\n  // ECMA262 9.1.11\n  $OwnPropertyKeys(getOwnPropertyKeysEvenIfPartial?: boolean = false): Array<PropertyKeyValue> {\n    return OrdinaryOwnPropertyKeys(this.$Realm, this, getOwnPropertyKeysEvenIfPartial);\n  }\n\n  static refuseSerializationOnPropertyBinding(pb: PropertyBinding): boolean {\n    if (pb.object.refuseSerialization) return true;\n    if (pb.internalSlot && typeof pb.key === \"string\" && pb.key[0] === \"_\") return true;\n    return false;\n  }\n\n  static isIntrinsicDerivedObject(obj: Value): boolean {\n    return obj instanceof ObjectValue && obj.intrinsicName !== undefined && obj.isScopedTemplate !== undefined;\n  }\n}\n"],"file":"ObjectValue.js"}