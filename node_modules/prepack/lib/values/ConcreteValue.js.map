{"version":3,"sources":["../../src/values/ConcreteValue.js"],"names":["ConcreteValue","Value","constructor","realm","intrinsicName","isTemporal","mightNotBeFalse","mightBeFalse","mightBeNull","NullValue","mightNotBeNull","mightBeNumber","NumberValue","mightNotBeNumber","mightNotBeObject","ObjectValue","mightBeObject","mightBeString","StringValue","mightNotBeString","mightBeUndefined","UndefinedValue","mightNotBeUndefined","mightHaveBeenDeleted","EmptyValue","promoteEmptyToUndefined","$Realm","intrinsics","undefined","throwIfNotConcrete","throwIfNotConcreteNumber","throwIfNotConcreteString","throwIfNotConcreteBoolean","throwIfNotConcreteSymbol","throwIfNotConcreteObject","throwIfNotObject","throwIfNotConcretePrimitive"],"mappings":";;;;;;;AAYA;;AAYA;;;;AAxBA;;;;;;;;;AASA;AAiBe,MAAMA,aAAN,SAA4BC,YAA5B,CAAkC;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAeC,aAAf,EAAuC;AAChD,4BAAUD,KAAV,EAAiB,gBAAjB;AACA,UAAMA,KAAN,EAAaC,aAAb;AACD;;AAEDC,EAAAA,UAAU,GAAY;AACpB,WAAO,KAAP;AACD;;AACDC,EAAAA,eAAe,GAAY;AACzB,WAAO,CAAC,KAAKC,YAAL,EAAR;AACD;;AAEDC,EAAAA,WAAW,GAAY;AACrB,WAAO,gBAAgBC,gBAAvB;AACD;;AAEDC,EAAAA,cAAc,GAAY;AACxB,WAAO,EAAE,gBAAgBD,gBAAlB,CAAP;AACD;;AAEDE,EAAAA,aAAa,GAAY;AACvB,WAAO,gBAAgBC,kBAAvB;AACD;;AAEDC,EAAAA,gBAAgB,GAAY;AAC1B,WAAO,EAAE,gBAAgBD,kBAAlB,CAAP;AACD;;AAEDE,EAAAA,gBAAgB,GAAY;AAC1B,WAAO,EAAE,gBAAgBC,kBAAlB,CAAP;AACD;;AAEDC,EAAAA,aAAa,GAAY;AACvB,WAAO,gBAAgBD,kBAAvB;AACD;;AAEDE,EAAAA,aAAa,GAAY;AACvB,WAAO,gBAAgBC,kBAAvB;AACD;;AAEDC,EAAAA,gBAAgB,GAAY;AAC1B,WAAO,EAAE,gBAAgBD,kBAAlB,CAAP;AACD;;AAEDE,EAAAA,gBAAgB,GAAY;AAC1B,WAAO,gBAAgBC,qBAAvB;AACD;;AAEDC,EAAAA,mBAAmB,GAAY;AAC7B,WAAO,EAAE,gBAAgBD,qBAAlB,CAAP;AACD;;AAEDE,EAAAA,oBAAoB,GAAY;AAC9B,WAAO,gBAAgBC,iBAAvB;AACD;;AAEDC,EAAAA,uBAAuB,GAAU;AAC/B,QAAI,gBAAgBD,iBAApB,EAAgC,OAAO,KAAKE,MAAL,CAAYC,UAAZ,CAAuBC,SAA9B;AAChC,WAAO,IAAP;AACD;;AAEDC,EAAAA,kBAAkB,GAAkB;AAClC,WAAO,IAAP;AACD;;AAEDC,EAAAA,wBAAwB,GAAgB;AACtC,4BAAU,KAAV,EAAiB,0CAAjB;AACD;;AAEDC,EAAAA,wBAAwB,GAAgB;AACtC,4BAAU,KAAV,EAAiB,0CAAjB;AACD;;AAEDC,EAAAA,yBAAyB,GAAiB;AACxC,4BAAU,KAAV,EAAiB,2CAAjB;AACD;;AAEDC,EAAAA,wBAAwB,GAAgB;AACtC,4BAAU,KAAV,EAAiB,0CAAjB;AACD;;AAEDC,EAAAA,wBAAwB,GAAgB;AACtC,WAAO,KAAKC,gBAAL,EAAP;AACD;;AAEDC,EAAAA,2BAA2B,GAAmB;AAC5C,4BAAU,KAAV,EAAiB,mDAAjB;AACD;;AAEDD,EAAAA,gBAAgB,GAAgB;AAC9B,4BAAU,KAAV,EAAiB,2CAAjB;AACD;;AA5F8C","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow strict-local */\n\nimport type { Realm } from \"../realm.js\";\nimport {\n  EmptyValue,\n  NullValue,\n  NumberValue,\n  ObjectValue,\n  PrimitiveValue,\n  StringValue,\n  BooleanValue,\n  SymbolValue,\n  UndefinedValue,\n  Value,\n} from \"./index.js\";\nimport invariant from \"../invariant.js\";\n\nexport default class ConcreteValue extends Value {\n  constructor(realm: Realm, intrinsicName?: string) {\n    invariant(realm, \"realm required\");\n    super(realm, intrinsicName);\n  }\n\n  isTemporal(): boolean {\n    return false;\n  }\n  mightNotBeFalse(): boolean {\n    return !this.mightBeFalse();\n  }\n\n  mightBeNull(): boolean {\n    return this instanceof NullValue;\n  }\n\n  mightNotBeNull(): boolean {\n    return !(this instanceof NullValue);\n  }\n\n  mightBeNumber(): boolean {\n    return this instanceof NumberValue;\n  }\n\n  mightNotBeNumber(): boolean {\n    return !(this instanceof NumberValue);\n  }\n\n  mightNotBeObject(): boolean {\n    return !(this instanceof ObjectValue);\n  }\n\n  mightBeObject(): boolean {\n    return this instanceof ObjectValue;\n  }\n\n  mightBeString(): boolean {\n    return this instanceof StringValue;\n  }\n\n  mightNotBeString(): boolean {\n    return !(this instanceof StringValue);\n  }\n\n  mightBeUndefined(): boolean {\n    return this instanceof UndefinedValue;\n  }\n\n  mightNotBeUndefined(): boolean {\n    return !(this instanceof UndefinedValue);\n  }\n\n  mightHaveBeenDeleted(): boolean {\n    return this instanceof EmptyValue;\n  }\n\n  promoteEmptyToUndefined(): Value {\n    if (this instanceof EmptyValue) return this.$Realm.intrinsics.undefined;\n    return this;\n  }\n\n  throwIfNotConcrete(): ConcreteValue {\n    return this;\n  }\n\n  throwIfNotConcreteNumber(): NumberValue {\n    invariant(false, \"expected this to be a number if concrete\");\n  }\n\n  throwIfNotConcreteString(): StringValue {\n    invariant(false, \"expected this to be a string if concrete\");\n  }\n\n  throwIfNotConcreteBoolean(): BooleanValue {\n    invariant(false, \"expected this to be a boolean if concrete\");\n  }\n\n  throwIfNotConcreteSymbol(): SymbolValue {\n    invariant(false, \"expected this to be a symbol if concrete\");\n  }\n\n  throwIfNotConcreteObject(): ObjectValue {\n    return this.throwIfNotObject();\n  }\n\n  throwIfNotConcretePrimitive(): PrimitiveValue {\n    invariant(false, \"expected this to be a primitive value if concrete\");\n  }\n\n  throwIfNotObject(): ObjectValue {\n    invariant(false, \"expected this to be an object if concrete\");\n  }\n}\n"],"file":"ConcreteValue.js"}