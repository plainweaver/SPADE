{"version":3,"sources":["../../src/values/ECMAScriptFunctionValue.js"],"names":["ECMAScriptFunctionValue","FunctionValue","constructor","realm","intrinsicName","isCalledInMultipleContexts"],"mappings":";;;;;;;AAaA;;AAbA;;;;;;;;;AASA;;AAOA;AACe,MAAMA,uBAAN,SAAsCC,oBAAtC,CAAoD;AACjEC,EAAAA,WAAW,CAACC,KAAD,EAAeC,aAAf,EAAuC;AAChD,UAAMD,KAAN,EAAaC,aAAb;AACA,SAAKC,0BAAL,GAAkC,KAAlC;AACD;;AAJgE","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow strict-local */\n\nimport type { Realm } from \"../realm.js\";\nimport type { ObjectValue } from \"./index.js\";\nimport { FunctionValue, Value } from \"./index.js\";\nimport type { BabelNodeSourceLocation } from \"@babel/types\";\n\n/* Abstract base class for non-exotic function objects(either with source or built-in) */\nexport default class ECMAScriptFunctionValue extends FunctionValue {\n  constructor(realm: Realm, intrinsicName?: string) {\n    super(realm, intrinsicName);\n    this.isCalledInMultipleContexts = false;\n  }\n\n  $ConstructorKind: \"base\" | \"derived\";\n  $ThisMode: \"lexical\" | \"strict\" | \"global\";\n  $HomeObject: void | ObjectValue;\n  $FunctionKind: \"normal\" | \"classConstructor\" | \"generator\";\n  activeArguments: void | Map<BabelNodeSourceLocation, [number, Array<Value>]>;\n  isSelfRecursive: boolean;\n  isCalledInMultipleContexts: boolean;\n}\n"],"file":"ECMAScriptFunctionValue.js"}