{"version":3,"sources":["../../src/values/IntegerIndexedExotic.js"],"names":["IntegerIndexedExotic","ObjectValue","constructor","realm","intrinsicName","intrinsics","ObjectPrototype","$GetOwnProperty","P","O","$Realm","$ViewedArrayBuffer","StringValue","numericIndex","To","CanonicalNumericIndexString","undefined","value","UndefinedValue","PropertyDescriptor","writable","enumerable","configurable","Properties","OrdinaryGetOwnProperty","$HasProperty","buffer","createErrorThrowCompletion","TypeError","Object","is","$ArrayLength","$DefineOwnProperty","_Desc","length","Desc","throwIfNotConcrete","Value","OrdinaryDefineOwnProperty","$Get","Receiver","$Set","V","OrdinarySet","$OwnPropertyKeys","keys","$ByteOffset","$TypedArrayName","len","i","push","ToString","NumberValue","properties","GetOwnPropertyKeysArray","key","filter","x","symbols"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow strict-local */\n\nimport type { Realm } from \"../realm.js\";\nimport type { PropertyKeyValue, Descriptor } from \"../types.js\";\nimport { ObjectValue, NumberValue, StringValue, Value, UndefinedValue } from \"./index.js\";\nimport { IsInteger, IsArrayIndex, IsAccessorDescriptor, IsDetachedBuffer, IsPropertyKey } from \"../methods/is.js\";\nimport { OrdinaryGet } from \"../methods/get.js\";\nimport { OrdinaryHasProperty } from \"../methods/has.js\";\nimport { IntegerIndexedElementSet, IntegerIndexedElementGet } from \"../methods/typedarray.js\";\nimport { Properties, To } from \"../singletons.js\";\nimport invariant from \"../invariant.js\";\nimport { PropertyDescriptor } from \"../descriptors.js\";\n\nexport default class IntegerIndexedExotic extends ObjectValue {\n  constructor(realm: Realm, intrinsicName?: string) {\n    super(realm, realm.intrinsics.ObjectPrototype, intrinsicName);\n  }\n\n  // ECMA262 9.4.5.1\n  $GetOwnProperty(P: PropertyKeyValue): Descriptor | void {\n    let O = this;\n\n    // 1. Assert: IsPropertyKey(P) is true.\n    invariant(IsPropertyKey(this.$Realm, P), \"IsPropertyKey(P) is true\");\n\n    // 2. Assert: O is an Object that has a [[ViewedArrayBuffer]] internal slot.\n    invariant(O instanceof ObjectValue && O.$ViewedArrayBuffer);\n\n    // 3. If Type(P) is String, then\n    if (typeof P === \"string\" || P instanceof StringValue) {\n      // a. Let numericIndex be ! CanonicalNumericIndexString(P).\n      let numericIndex = To.CanonicalNumericIndexString(\n        this.$Realm,\n        typeof P === \"string\" ? new StringValue(this.$Realm, P) : P\n      );\n\n      // b. If numericIndex is not undefined, then\n      if (numericIndex !== undefined) {\n        // i. Let value be ? IntegerIndexedElementGet(O, numericIndex).\n        let value = IntegerIndexedElementGet(this.$Realm, O, numericIndex);\n\n        // ii. If value is undefined, return undefined.\n        if (value instanceof UndefinedValue) return undefined;\n\n        // iii. Return a PropertyDescriptor{[[Value]]: value, [[Writable]]: true, [[Enumerable]]: true, [[Configurable]]: false}.\n        return new PropertyDescriptor({\n          value: value,\n          writable: true,\n          enumerable: true,\n          configurable: false,\n        });\n      }\n    }\n    // 4. Return OrdinaryGetOwnProperty(O, P).\n    return Properties.OrdinaryGetOwnProperty(this.$Realm, O, P);\n  }\n\n  // ECMA262 9.4.5.2\n  $HasProperty(P: PropertyKeyValue): boolean {\n    let O = this;\n\n    // 1. Assert: IsPropertyKey(P) is true.\n    invariant(IsPropertyKey(this.$Realm, P), \"IsPropertyKey(P) is true\");\n\n    // 2. Assert: O is an Object that has a [[ViewedArrayBuffer]] internal slot.\n    invariant(O instanceof ObjectValue && O.$ViewedArrayBuffer);\n\n    // 3. If Type(P) is String, then\n    if (typeof P === \"string\" || P instanceof StringValue) {\n      // a. Let numericIndex be ! CanonicalNumericIndexString(P).\n      let numericIndex = To.CanonicalNumericIndexString(\n        this.$Realm,\n        typeof P === \"string\" ? new StringValue(this.$Realm, P) : P\n      );\n\n      // b. If numericIndex is not undefined, then\n      if (numericIndex !== undefined) {\n        // i. Let buffer be O.[[ViewedArrayBuffer]].\n        let buffer = O.$ViewedArrayBuffer;\n        invariant(buffer);\n\n        // ii. If IsDetachedBuffer(buffer) is true, throw a TypeError exception.\n        if (IsDetachedBuffer(this.$Realm, buffer) === true) {\n          throw this.$Realm.createErrorThrowCompletion(\n            this.$Realm.intrinsics.TypeError,\n            \"IsDetachedBuffer(buffer) is true\"\n          );\n        }\n\n        // iii. If IsInteger(numericIndex) is false, return false.\n        if (IsInteger(this.$Realm, numericIndex) === false) return false;\n\n        // iv. If numericIndex = -0, return false.\n        if (Object.is(numericIndex, -0)) return false;\n\n        // v. If numericIndex < 0, return false.\n        if (numericIndex < 0) return false;\n\n        // vi. If numericIndex ≥ O.[[ArrayLength]], return false.\n        invariant(O.$ArrayLength !== undefined);\n        if (numericIndex >= O.$ArrayLength) return false;\n\n        // vii. Return true.\n        return true;\n      }\n    }\n\n    // 4. Return ? OrdinaryHasProperty(O, P).\n    return OrdinaryHasProperty(this.$Realm, O, P);\n  }\n\n  // ECMA262 9.4.5.3\n  $DefineOwnProperty(P: PropertyKeyValue, _Desc: Descriptor): boolean {\n    let O = this;\n\n    // 1. Assert: IsPropertyKey(P) is true.\n    invariant(IsPropertyKey(this.$Realm, P), \"IsPropertyKey(P) is true\");\n\n    // 2. Assert: O is an Object that has a [[ViewedArrayBuffer]] internal slot.\n    invariant(O instanceof ObjectValue && this.$ViewedArrayBuffer);\n\n    // 3. If Type(P) is String, then\n    if (typeof P === \"string\" || P instanceof StringValue) {\n      // a. Let numericIndex be ! CanonicalNumericIndexString(P).\n      let numericIndex = To.CanonicalNumericIndexString(\n        this.$Realm,\n        typeof P === \"string\" ? new StringValue(this.$Realm, P) : P\n      );\n\n      // b. If numericIndex is not undefined, then\n      if (numericIndex !== undefined) {\n        // i. If IsInteger(numericIndex) is false, return false.\n        if (IsInteger(this.$Realm, numericIndex) === false) return false;\n\n        // ii. If numericIndex = -0, return false.\n        if (Object.is(numericIndex, -0)) return false;\n\n        // iii. If numericIndex < 0, return false.\n        if (numericIndex < 0) return false;\n\n        // iv. Let length be O.[[ArrayLength]].\n        let length = this.$ArrayLength;\n        invariant(typeof length === \"number\");\n\n        // v. If numericIndex ≥ length, return false.\n        if (numericIndex >= length) return false;\n\n        let Desc = _Desc.throwIfNotConcrete(this.$Realm);\n\n        // vi. If IsAccessorDescriptor(Desc) is true, return false.\n        if (IsAccessorDescriptor(this.$Realm, Desc) === true) return false;\n\n        // vii. If Desc has a [[Configurable]] field and if Desc.[[Configurable]] is true, return false.\n        if (Desc.configurable === true) return false;\n\n        // viii. If Desc has an [[Enumerable]] field and if Desc.[[Enumerable]] is false, return false.\n        if (Desc.enumerable === false) return false;\n\n        // ix. If Desc has a [[Writable]] field and if Desc.[[Writable]] is false, return false.\n        if (Desc.writable === false) return false;\n\n        // x. If Desc has a [[Value]] field, then\n        if (Desc.value) {\n          // 1. Let value be Desc.[[Value]].\n          let value = Desc.value;\n          invariant(value === undefined || value instanceof Value);\n\n          // 2. Return ? IntegerIndexedElementSet(O, numericIndex, value).\n          return IntegerIndexedElementSet(this.$Realm, O, numericIndex, value);\n        }\n\n        // xi. Return true.\n        return true;\n      }\n    }\n\n    // 4. Return ! OrdinaryDefineOwnProperty(O, P, Desc).\n    return Properties.OrdinaryDefineOwnProperty(this.$Realm, O, P, _Desc);\n  }\n\n  // ECMA262 9.4.5.4\n  $Get(P: PropertyKeyValue, Receiver: Value): Value {\n    let O = this;\n\n    // 1. Assert: IsPropertyKey(P) is true.\n    invariant(IsPropertyKey(this.$Realm, P), \"IsPropertyKey(P) is true\");\n\n    // 2. If Type(P) is String, then\n    if (typeof P === \"string\" || P instanceof StringValue) {\n      // a. Let numericIndex be ! CanonicalNumericIndexString(P).\n      let numericIndex = To.CanonicalNumericIndexString(\n        this.$Realm,\n        typeof P === \"string\" ? new StringValue(this.$Realm, P) : P\n      );\n\n      // b. If numericIndex is not undefined, then\n      if (numericIndex !== undefined) {\n        // i. Return ? IntegerIndexedElementGet(O, numericIndex).\n        return IntegerIndexedElementGet(this.$Realm, O, numericIndex);\n      }\n    }\n\n    // 3. Return ? OrdinaryGet(O, P, Receiver).\n    return OrdinaryGet(this.$Realm, O, P, Receiver);\n  }\n\n  // ECMA262 9.4.5.5\n  $Set(P: PropertyKeyValue, V: Value, Receiver: Value): boolean {\n    let O = this;\n\n    // 1. Assert: IsPropertyKey(P) is true.\n    invariant(IsPropertyKey(this.$Realm, P), \"IsPropertyKey(P) is true\");\n\n    // 2. If Type(P) is String, then\n    if (typeof P === \"string\" || P instanceof StringValue) {\n      // a. Let numericIndex be ! CanonicalNumericIndexString(P).\n      let numericIndex = To.CanonicalNumericIndexString(\n        this.$Realm,\n        typeof P === \"string\" ? new StringValue(this.$Realm, P) : P\n      );\n\n      // b. If numericIndex is not undefined, then\n      if (numericIndex !== undefined) {\n        // i. Return ? IntegerIndexedElementSet(O, numericIndex, V).\n        return IntegerIndexedElementSet(this.$Realm, O, numericIndex, V);\n      }\n    }\n\n    // 3. Return ? OrdinarySet(O, P, V, Receiver).\n    return Properties.OrdinarySet(this.$Realm, O, P, V, Receiver);\n  }\n\n  // ECMA262 9.4.5.6\n  $OwnPropertyKeys(): Array<PropertyKeyValue> {\n    let O = this;\n\n    // 1. Let keys be a new empty List.\n    let keys = [];\n\n    // 2. Assert: O is an Object that has [[ViewedArrayBuffer]], [[ArrayLength]], [[ByteOffset]], and [[TypedArrayName]] internal slots.\n    invariant(\n      O instanceof ObjectValue &&\n        O.$ViewedArrayBuffer &&\n        O.$ArrayLength !== undefined &&\n        O.$ByteOffset !== undefined &&\n        O.$TypedArrayName\n    );\n\n    // 3. Let len be O.[[ArrayLength]].\n    let len = O.$ArrayLength;\n    invariant(typeof len === \"number\");\n\n    // 4. For each integer i starting with 0 such that i < len, in ascending order,\n    for (let i = 0; i < len; ++i) {\n      // a. Add ! ToString(i) as the last element of keys.\n      keys.push(new StringValue(this.$Realm, To.ToString(this.$Realm, new NumberValue(this.$Realm, i))));\n    }\n\n    let realm = this.$Realm;\n    // 5. For each own property key P of O such that Type(P) is String and P is not an integer index, in ascending chronological order of property creation\n    let properties = Properties.GetOwnPropertyKeysArray(realm, O, false, false);\n    for (let key of properties.filter(x => !IsArrayIndex(realm, x))) {\n      // i. Add P as the last element of keys.\n      keys.push(new StringValue(realm, key));\n    }\n\n    // 6. For each own property key P of O such that Type(P) is Symbol, in ascending chronological order of property creation\n    for (let key of O.symbols.keys()) {\n      // a. Add P as the last element of keys.\n      keys.push(key);\n    }\n\n    // 7. Return keys.\n    return keys;\n  }\n}\n"],"file":"IntegerIndexedExotic.js"}