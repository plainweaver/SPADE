{"version":3,"sources":["../../../src/react/experimental-server-rendering/utils.js"],"names":["matchHtmlRegExp","createMarkupForRoot","ROOT_ATTRIBUTE_NAME","isCustomComponent","realm","tagName","propsValue","indexOf","is","StringValue","escapeHtml","string","str","match","exec","escape","html","index","lastIndex","length","charCodeAt","substring","normalizeNode","reactNode","Array","isArray","newReactNode","element","undefined","lastNode","push","AbstractValue","convertValueToNode","value","NumberValue","createHtmlEscapeHelper","escapeHelperAst","toString","plugins","helper","ECMAScriptSourceFunctionValue","initialize","params","body","createArrayHelper","arrayHelper","getNonChildrenInnerMarkup","innerHTML","ObjectValue","_html","content","quoteAttributeValueForBrowser"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\n// Warning: This code is experimental and might not fully work. There is no guarantee\n// that is up-to-date with the curent react-dom/server logic and there may also be\n// security holes in the string escaping because of this.\n\nimport type { Realm } from \"../../realm.js\";\nimport { parseExpression } from \"@babel/parser\";\nimport {\n  AbstractObjectValue,\n  AbstractValue,\n  ECMAScriptSourceFunctionValue,\n  NumberValue,\n  ObjectValue,\n  StringValue,\n  Value,\n} from \"../../values/index.js\";\nimport { getProperty } from \"../utils.js\";\nimport invariant from \"../../invariant.js\";\nimport type { ReactNode } from \"./rendering.js\";\nimport { ROOT_ATTRIBUTE_NAME } from \"./dom-config.js\";\n\nconst matchHtmlRegExp = /[\"'&<>]/;\n\nexport function createMarkupForRoot(): string {\n  return ROOT_ATTRIBUTE_NAME + '=\"\"';\n}\n\nexport function isCustomComponent(\n  realm: Realm,\n  tagName: string,\n  propsValue: ObjectValue | AbstractObjectValue\n): boolean {\n  if (tagName.indexOf(\"-\") === -1) {\n    let is = getProperty(realm, propsValue, \"is\");\n    return is instanceof StringValue;\n  }\n  switch (tagName) {\n    case \"annotation-xml\":\n    case \"color-profile\":\n    case \"font-face\":\n    case \"font-face-src\":\n    case \"font-face-uri\":\n    case \"font-face-format\":\n    case \"font-face-name\":\n    case \"missing-glyph\":\n      return false;\n    default:\n      return true;\n  }\n}\n\n// $FlowFixMe: we don't want to provides types here as we inject this function into source\nexport function escapeHtml(string): string {\n  if (typeof string === \"boolean\" || typeof string === \"number\") {\n    return \"\" + string;\n  }\n  let str = \"\" + string;\n  let match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  let escape;\n  let html = \"\";\n  let index = 0;\n  let lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escape = \"&quot;\";\n        break;\n      case 38:\n        escape = \"&amp;\";\n        break;\n      case 39:\n        escape = \"&#x27;\";\n        break;\n      case 60:\n        escape = \"&lt;\";\n        break;\n      case 62:\n        escape = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\n}\n\nexport function normalizeNode(realm: Realm, reactNode: ReactNode): ReactNode {\n  if (Array.isArray(reactNode)) {\n    let newReactNode;\n\n    for (let element of reactNode) {\n      if (typeof element === \"string\") {\n        if (newReactNode === undefined) {\n          newReactNode = element;\n        } else if (typeof newReactNode === \"string\") {\n          newReactNode += element;\n        } else {\n          let lastNode = newReactNode[newReactNode.length - 1];\n          if (typeof lastNode === \"string\") {\n            newReactNode[newReactNode.length - 1] += element;\n          } else {\n            newReactNode.push(element);\n          }\n        }\n      } else if (newReactNode === undefined) {\n        newReactNode = ([element]: Array<ReactNode>);\n      } else if (typeof newReactNode === \"string\") {\n        newReactNode = ([newReactNode, element]: Array<ReactNode>);\n      } else {\n        newReactNode.push(element);\n      }\n    }\n    invariant(newReactNode !== undefined);\n    return newReactNode;\n  } else if (typeof reactNode === \"string\" || reactNode instanceof AbstractValue) {\n    return reactNode;\n  }\n  invariant(false, \"TODO\");\n}\n\nexport function convertValueToNode(value: Value): ReactNode {\n  if (value instanceof AbstractValue) {\n    return value;\n  } else if (value instanceof StringValue || value instanceof NumberValue) {\n    return value.value + \"\";\n  }\n  invariant(false, \"TODO\");\n}\n\nexport function createHtmlEscapeHelper(realm: Realm): ECMAScriptSourceFunctionValue {\n  let escapeHelperAst = parseExpression(escapeHtml.toString(), { plugins: [\"flow\"] });\n  let helper = new ECMAScriptSourceFunctionValue(realm);\n  helper.initialize(escapeHelperAst.params, escapeHelperAst.body);\n  return helper;\n}\n\nexport function createArrayHelper(realm: Realm): ECMAScriptSourceFunctionValue {\n  let arrayHelper = `\n    function arrayHelper(array) {\n      let length = array.length;\n      let i = 0;\n      let str = \"\";\n      let item;\n\n      while (i < length) {\n        item = array[i++];\n        if (previousWasTextNode === true) {\n          str += \"<!-- -->\" + item;\n        } else {\n          str += item;\n        }\n        previousWasTextNode = item[0] !== \"<\";\n      }\n      return str;\n    }\n  `;\n\n  let escapeHelperAst = parseExpression(arrayHelper, { plugins: [\"flow\"] });\n  let helper = new ECMAScriptSourceFunctionValue(realm);\n  helper.initialize(escapeHelperAst.params, escapeHelperAst.body);\n  return helper;\n}\n\nexport function getNonChildrenInnerMarkup(\n  realm: Realm,\n  propsValue: ObjectValue | AbstractObjectValue\n): ReactNode | null {\n  let innerHTML = getProperty(realm, propsValue, \"dangerouslySetInnerHTML\");\n\n  if (innerHTML instanceof ObjectValue) {\n    let _html = getProperty(realm, innerHTML, \"dangerouslySetInnerHTML\");\n\n    if (_html instanceof StringValue) {\n      return _html.value;\n    }\n  } else {\n    let content = getProperty(realm, propsValue, \"children\");\n\n    if (content instanceof StringValue || content instanceof NumberValue) {\n      return escapeHtml(content.value);\n    }\n  }\n  return null;\n}\n\nexport function quoteAttributeValueForBrowser(value: string): string {\n  return '\"' + escapeHtml(value) + '\"';\n}\n"],"file":"utils.js"}