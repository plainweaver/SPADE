{"version":3,"sources":["../../src/react/hoisting.js"],"names":["canHoistObject","realm","object","residualHeapVisitor","visitedValues","canHoistReactElement","propName","properties","prop","canHoistValue","symbol","symbols","canHoistArray","array","intrinsicName","lengthValue","NumberValue","length","value","i","element","canHoistFunction","func","react","hoistableFunctions","has","get","undefined","functionInstance","functionInstances","residualFunctionBindings","Map","residualBindings","declarativeEnvironmentRecord","Value","ECMAScriptSourceFunctionValue","code","$ECMAScriptCode","functionInfos","unbound","size","set","canHoistAbstract","abstract","isPrimitive","StringValue","SymbolValue","BooleanValue","intrinsics","null","add","canHoist","ArrayValue","FunctionValue","ObjectValue","AbstractValue","delete","reactElement","hoistableReactElements","type","ref","key","props","Set","String","isPartialObject","determineIfReactElementCanBeHoisted"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport { Realm } from \"../realm.js\";\nimport {\n  AbstractValue,\n  ArrayValue,\n  BooleanValue,\n  ECMAScriptSourceFunctionValue,\n  FunctionValue,\n  NumberValue,\n  ObjectValue,\n  SymbolValue,\n  StringValue,\n  Value,\n} from \"../values/index.js\";\nimport { Get } from \"../methods/index.js\";\nimport invariant from \"../invariant.js\";\nimport { isReactElement, getProperty } from \"./utils.js\";\nimport { ResidualHeapVisitor } from \"../serializer/ResidualHeapVisitor.js\";\n\n// a nested object of a React Element should be hoisted where all its properties are known\n// at evaluation time to be safe to hoist (because of the heuristics of a React render)\nfunction canHoistObject(\n  realm: Realm,\n  object: ObjectValue,\n  residualHeapVisitor: ResidualHeapVisitor,\n  visitedValues: Set<Value>\n): boolean {\n  if (isReactElement(object)) {\n    return canHoistReactElement(realm, object, residualHeapVisitor, visitedValues);\n  }\n  for (let [propName] of object.properties) {\n    let prop = Get(realm, object, propName);\n    if (!canHoistValue(realm, prop, residualHeapVisitor, visitedValues)) {\n      return false;\n    }\n  }\n  for (let [symbol] of object.symbols) {\n    let prop = Get(realm, object, symbol);\n    if (!canHoistValue(realm, prop, residualHeapVisitor, visitedValues)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction canHoistArray(\n  realm: Realm,\n  array: ArrayValue,\n  residualHeapVisitor: ResidualHeapVisitor,\n  visitedValues: Set<Value>\n): boolean {\n  if (array.intrinsicName) return false;\n  let lengthValue = Get(realm, array, \"length\");\n  if (!canHoistValue(realm, lengthValue, residualHeapVisitor, visitedValues)) {\n    return false;\n  }\n  if (lengthValue instanceof NumberValue) {\n    let length = lengthValue.value;\n    for (let i = 0; i < length; i++) {\n      let element = Get(realm, array, \"\" + i);\n\n      if (!canHoistValue(realm, element, residualHeapVisitor, visitedValues)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nexport function canHoistFunction(\n  realm: Realm,\n  func: FunctionValue,\n  residualHeapVisitor?: ResidualHeapVisitor,\n  visitedValues: Set<Value>\n): boolean {\n  if (realm.react.hoistableFunctions.has(func)) {\n    // cast because Flow thinks that we may have set a value to be something other than a boolean?\n    return ((realm.react.hoistableFunctions.get(func): any): boolean);\n  }\n  if (residualHeapVisitor === undefined) {\n    return false;\n  }\n  // get the function instance\n  let functionInstance = residualHeapVisitor.functionInstances.get(func);\n  // we can safely hoist the function if the residual bindings hoistable too\n  if (functionInstance !== undefined) {\n    invariant(functionInstance.residualFunctionBindings instanceof Map);\n    let residualBindings = functionInstance.residualFunctionBindings;\n    for (let [, { declarativeEnvironmentRecord, value }] of residualBindings) {\n      // if declarativeEnvironmentRecord is null, it's likely a global binding\n      // so we can assume that we can still hoist this function\n      if (declarativeEnvironmentRecord !== null) {\n        if (value === undefined) {\n          return false;\n        }\n        invariant(value instanceof Value);\n        if (!canHoistValue(realm, value, residualHeapVisitor, visitedValues)) {\n          return false;\n        }\n      }\n    }\n    if (func instanceof ECMAScriptSourceFunctionValue) {\n      let code = func.$ECMAScriptCode;\n      let functionInfos = residualHeapVisitor.functionInfos.get(code);\n      if (functionInfos && functionInfos.unbound.size > 0) {\n        return false;\n      }\n    }\n    realm.react.hoistableFunctions.set(func, true);\n    return true;\n  }\n  realm.react.hoistableFunctions.set(func, false);\n  return false;\n}\n\nfunction canHoistAbstract(realm: Realm, abstract: AbstractValue, residualHeapVisitor: ResidualHeapVisitor): boolean {\n  // TODO #1687: add abstract value hoisting\n  return false;\n}\n\nfunction isPrimitive(realm: Realm, value: Value) {\n  return (\n    value instanceof StringValue ||\n    value instanceof NumberValue ||\n    value instanceof SymbolValue ||\n    value instanceof BooleanValue ||\n    value === realm.intrinsics.null ||\n    value === realm.intrinsics.undefined\n  );\n}\n\nfunction canHoistValue(\n  realm: Realm,\n  value: Value,\n  residualHeapVisitor: ResidualHeapVisitor,\n  visitedValues: Set<Value>\n): boolean {\n  if (visitedValues.has(value)) {\n    // If there is a cycle, bail out.\n    // TODO: is there some way to *not* bail out in this case?\n    // Currently if we don't, the output is broken.\n    return false;\n  }\n  visitedValues.add(value);\n  let canHoist = false;\n\n  if (value instanceof ArrayValue) {\n    canHoist = canHoistArray(realm, value, residualHeapVisitor, visitedValues);\n  } else if (value instanceof FunctionValue) {\n    canHoist = canHoistFunction(realm, value, residualHeapVisitor, visitedValues);\n  } else if (value instanceof ObjectValue) {\n    canHoist = canHoistObject(realm, value, residualHeapVisitor, visitedValues);\n  } else if (value instanceof AbstractValue) {\n    canHoist = canHoistAbstract(realm, value, residualHeapVisitor);\n  } else if (isPrimitive) {\n    canHoist = true;\n  }\n  visitedValues.delete(value);\n  return canHoist;\n}\n\nexport function canHoistReactElement(\n  realm: Realm,\n  reactElement: ObjectValue,\n  residualHeapVisitor?: ResidualHeapVisitor,\n  visitedValues?: Set<Value> | void\n): boolean {\n  if (realm.react.hoistableReactElements.has(reactElement)) {\n    // cast because Flow thinks that we may have set a value to be something other than a boolean?\n    return ((realm.react.hoistableReactElements.get(reactElement): any): boolean);\n  }\n  if (residualHeapVisitor === undefined) {\n    return false;\n  }\n  let type = getProperty(realm, reactElement, \"type\");\n  let ref = getProperty(realm, reactElement, \"ref\");\n  let key = getProperty(realm, reactElement, \"key\");\n  let props = getProperty(realm, reactElement, \"props\");\n\n  if (visitedValues === undefined) {\n    visitedValues = new Set();\n    visitedValues.add(reactElement);\n  }\n  if (\n    canHoistValue(realm, type, residualHeapVisitor, visitedValues) &&\n    // we can't hoist string \"refs\" or if they're abstract, as they might be abstract strings\n    !(ref instanceof String || ref instanceof AbstractValue) &&\n    canHoistValue(realm, ref, residualHeapVisitor, visitedValues) &&\n    canHoistValue(realm, key, residualHeapVisitor, visitedValues) &&\n    !props.isPartialObject() &&\n    canHoistValue(realm, props, residualHeapVisitor, visitedValues)\n  ) {\n    realm.react.hoistableReactElements.set(reactElement, true);\n    return true;\n  }\n  realm.react.hoistableReactElements.set(reactElement, false);\n  return false;\n}\n\nexport function determineIfReactElementCanBeHoisted(\n  realm: Realm,\n  reactElement: ObjectValue,\n  residualHeapVisitor: ResidualHeapVisitor\n): void {\n  canHoistReactElement(realm, reactElement, residualHeapVisitor);\n}\n"],"file":"hoisting.js"}