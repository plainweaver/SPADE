{"version":3,"sources":["../../src/react/utils.js"],"names":["isReactElement","val","ObjectValue","realm","$Realm","react","enabled","reactElements","has","properties","$$typeof","getProperty","globalObject","$GlobalObject","globalSymbolValue","intrinsics","undefined","NumberValue","value","SymbolValue","symbolFromRegistry","globalSymbolRegistry","find","e","$Symbol","_isReactElement","$Key","set","createdDuringReconcilation","firstRenderOnly","isReactPropsObject","reactProps","getReactSymbol","symbolKey","reactSymbol","symbols","get","SymbolFor","Symbol","SymbolForDescriptor","descriptor","PropertyDescriptor","SymbolForValue","$Call","StringValue","isTagName","ast","type","test","name","isReactComponent","length","toUpperCase","valueIsClassComponent","FunctionValue","prototype","To","ToBooleanPartial","valueIsKnownReactAbstraction","AbstractObjectValue","abstractHints","valueIsReactLibraryObject","logger","fbLibraries","reactVersion","tryQuery","reactCreateElement","reactCloneElement","reactIsValidElement","reactComponent","reactChildren","valueIsLegacyCreateClassComponent","valueIsFactoryClassComponent","ArrayValue","isIntrinsicAndHasWidenedNumericProperty","addKeyToReactElement","reactElement","typeValue","refValue","propsValue","currentKeyValue","null","uniqueKey","getUniqueReactElementKey","usedReactElementKeys","newKeyValue","createInternalReactElement","index","key","Math","random","toString","replace","substring","add","forEachArrayValue","array","mapFunc","lengthValue","isConditionalLength","AbstractValue","kind","getMaxLength","i","elementProperty","elementPropertyDescriptor","elementValue","lengthCondition","args","elementCondition","equals","Value","mapArrayValue","returnTheNewArray","newArray","mapArray","newElement","Create","CreateDataPropertyOrThrow","condValue","consequentVal","alternateVal","ArrayCreate","evaluateWithAbstractConditional","evaluateForEffects","GetDescriptorForProperty","propertyName","object","convertSimpleClassComponentToFunctionalComponent","complexComponentType","transforms","configurable","Properties","DeletePropertyOrThrow","$FunctionKind","$Prototype","FunctionPrototype","$FormalParameters","t","identifier","push","body","funcNode","functionExpression","blockStatement","file","program","expressionStatement","path","node","isIdentifier","isThisExpression","parentPath","parentNode","isMemberExpression","replaceWith","property","FatalError","traverse","cache","clear","createBinding","cloneProperties","newProperties","Map","throwIfNotConcrete","cloneSymbols","newSymbols","symbol","cloneValue","originalValue","_prototype","copyToObject","cloneFunction","newValue","ECMAScriptSourceFunctionValue","intrinsicName","Object","assign","originalPrototype","$HomeObject","clonePrototype","Set","newPrototype","ObjectPrototype","skipFunctionProperties","convertFunctionalComponentToComplexClassComponent","functionalComponentType","BoundFunctionValue","userCodePropertiesToAdd","userCodeSymbolsToAdd","binding","unshift","variableDeclaration","variableDeclarator","memberExpression","thisExpression","normalizeFunctionalComponentParamaters","func","lengthProperty","writable","enumerable","map","param","createReactHintObject","firstRenderValue","getComponentTypeFromRootValue","_valueIsKnownReactAbstraction","reactHint","reactRelay","Array","isArray","componentType","flagPropsWithNoPartialKeyOrRef","props","propsWithNoPartialKeyOrRef","hasNoPartialKeyOrRef","isPartialObject","values","isTop","elements","getElements","element","wasSafe","maxLength","consequentMaxVal","alternateMaxVal","recursivelyFlattenArray","targetArray","noHoles","_item","EmptyValue","consquentIsHolely","alternateIsHolely","createFromLogicalOp","createFromUnaryOp","flattenChildren","flattenedChildren","makeFinal","size","reportIntrospectionError","createReactEvaluatedNode","status","children","message","getComponentName","boundText","__originalName","convertConfigObjectToReactComponentTreeConfig","config","isRoot","modelString","UndefinedValue","propValue","BooleanValue","JSON","parse","componentModelError","CompilerDiagnostic","currentLocation","handleError","diagnostic","getValueFromFunctionCall","funcThis","isConstructor","funcCall","newCall","$Construct","completion","SimpleNormalCompletion","error","AbruptCompletion","returnOrThrowCompletion","isEventProp","toLowerCase","createNoopFunction","noopFunction","noOpFunc","initialize","doNotOptimizeComponent","doNotOptimize","createDefaultPropsHelper","defaultPropsHelper","escapeHelperAst","plugins","helper","params","ref","obj","ObjectCreate","activeReconciler","componentTreeConfig","mightBeFinalObject","applyClonedTemporalAlias","clonedProps","temporalAlias","temporalOperationEntry","getTemporalOperationEntryFromDerivedValue","TemporalObjectAssignEntry","temporalArgs","to","sources","arg","createTemporalObjectAssign","cloneProps","newChildren","propName","makePartial","isSimpleObject","makeSimple","applyObjectAssignConfigsForReactElement","globalObj","objAssign","ECMAScriptFunctionValue","objectAssignCall","canExcludeReactElementObjectProperty","reactElementData","isHostComponent","cloneReactElement","shouldCloneProps","keyValue","hardModifyReactObjectPropertyBinding","mightNotBeFinalObject","newDescriptor","newBinding"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport { Realm } from \"../realm.js\";\nimport { AbruptCompletion, SimpleNormalCompletion } from \"../completions.js\";\nimport type { BabelNode, BabelNodeJSXIdentifier } from \"@babel/types\";\nimport { parseExpression } from \"@babel/parser\";\nimport {\n  AbstractObjectValue,\n  AbstractValue,\n  ArrayValue,\n  BooleanValue,\n  BoundFunctionValue,\n  ECMAScriptFunctionValue,\n  ECMAScriptSourceFunctionValue,\n  EmptyValue,\n  FunctionValue,\n  NumberValue,\n  ObjectValue,\n  StringValue,\n  SymbolValue,\n  UndefinedValue,\n  Value,\n} from \"../values/index.js\";\nimport { TemporalObjectAssignEntry } from \"../utils/generator.js\";\nimport type { Descriptor, ReactComponentTreeConfig, ReactHint, PropertyBinding } from \"../types.js\";\nimport { Get, IsDataDescriptor } from \"../methods/index.js\";\nimport { computeBinary } from \"../evaluators/BinaryExpression.js\";\nimport type { AdditionalFunctionTransform, ReactEvaluatedNode } from \"../serializer/types.js\";\nimport invariant from \"../invariant.js\";\nimport { Create, Properties, To } from \"../singletons.js\";\nimport traverse from \"@babel/traverse\";\nimport * as t from \"@babel/types\";\nimport type { BabelNodeStatement } from \"@babel/types\";\nimport { CompilerDiagnostic, FatalError } from \"../errors.js\";\nimport { cloneDescriptor, PropertyDescriptor } from \"../descriptors.js\";\n\nexport type ReactSymbolTypes =\n  | \"react.element\"\n  | \"react.context\"\n  | \"react.provider\"\n  | \"react.fragment\"\n  | \"react.portal\"\n  | \"react.return\"\n  | \"react.call\"\n  | \"react.forward_ref\";\n\nexport function isReactElement(val: Value): boolean {\n  if (!(val instanceof ObjectValue)) {\n    return false;\n  }\n  let realm = val.$Realm;\n  if (!realm.react.enabled) {\n    return false;\n  }\n  if (realm.react.reactElements.has(val)) {\n    return true;\n  }\n  if (!val.properties.has(\"type\") || !val.properties.has(\"props\") || !val.properties.has(\"$$typeof\")) {\n    return false;\n  }\n  let $$typeof = getProperty(realm, val, \"$$typeof\");\n  let globalObject = realm.$GlobalObject;\n  let globalSymbolValue = getProperty(realm, globalObject, \"Symbol\");\n\n  if (globalSymbolValue === realm.intrinsics.undefined) {\n    if ($$typeof instanceof NumberValue) {\n      return $$typeof.value === 0xeac7;\n    }\n  } else if ($$typeof instanceof SymbolValue) {\n    let symbolFromRegistry = realm.globalSymbolRegistry.find(e => e.$Symbol === $$typeof);\n    let _isReactElement = symbolFromRegistry !== undefined && symbolFromRegistry.$Key === \"react.element\";\n    if (_isReactElement) {\n      // If we get there, it means the ReactElement was created in manual user-space\n      realm.react.reactElements.set(val, { createdDuringReconcilation: false, firstRenderOnly: false });\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function isReactPropsObject(val: Value): boolean {\n  if (!(val instanceof ObjectValue)) {\n    return false;\n  }\n  let realm = val.$Realm;\n  if (!realm.react.enabled) {\n    return false;\n  }\n  if (realm.react.reactProps.has(val)) {\n    return true;\n  }\n  return false;\n}\n\nexport function getReactSymbol(symbolKey: ReactSymbolTypes, realm: Realm): SymbolValue {\n  let reactSymbol = realm.react.symbols.get(symbolKey);\n  if (reactSymbol !== undefined) {\n    return reactSymbol;\n  }\n  let SymbolFor = realm.intrinsics.Symbol.properties.get(\"for\");\n  if (SymbolFor !== undefined) {\n    let SymbolForDescriptor = SymbolFor.descriptor;\n\n    if (SymbolForDescriptor !== undefined) {\n      invariant(SymbolForDescriptor instanceof PropertyDescriptor);\n      let SymbolForValue = SymbolForDescriptor.value;\n      if (SymbolForValue instanceof ObjectValue && typeof SymbolForValue.$Call === \"function\") {\n        reactSymbol = SymbolForValue.$Call(realm.intrinsics.Symbol, [new StringValue(realm, symbolKey)]);\n        invariant(reactSymbol instanceof SymbolValue);\n        realm.react.symbols.set(symbolKey, reactSymbol);\n      }\n    }\n  }\n  invariant(reactSymbol instanceof SymbolValue, `Symbol(\"${symbolKey}\") could not be found in realm`);\n  return reactSymbol;\n}\n\nexport function isTagName(ast: BabelNode): boolean {\n  return ast.type === \"JSXIdentifier\" && /^[a-z]|\\-/.test(((ast: any): BabelNodeJSXIdentifier).name);\n}\n\nexport function isReactComponent(name: string): boolean {\n  return name.length > 0 && name[0] === name[0].toUpperCase();\n}\n\nexport function valueIsClassComponent(realm: Realm, value: Value): boolean {\n  if (!(value instanceof FunctionValue)) {\n    return false;\n  }\n  let prototype = Get(realm, value, \"prototype\");\n\n  if (prototype instanceof ObjectValue) {\n    return To.ToBooleanPartial(realm, Get(realm, prototype, \"isReactComponent\"));\n  }\n  return false;\n}\n\nexport function valueIsKnownReactAbstraction(realm: Realm, value: Value): boolean {\n  return value instanceof AbstractObjectValue && realm.react.abstractHints.has(value);\n}\n\n// logger isn't typed otherwise it will increase flow cycle length :()\nexport function valueIsReactLibraryObject(realm: Realm, value: ObjectValue, logger: any): boolean {\n  if (realm.fbLibraries.react === value) {\n    return true;\n  }\n  // we check that the object is the React or React-like library by checking for\n  // core properties that should exist on it\n  let reactVersion = logger.tryQuery(() => Get(realm, value, \"version\"), undefined);\n  if (!(reactVersion instanceof StringValue)) {\n    return false;\n  }\n  let reactCreateElement = logger.tryQuery(() => Get(realm, value, \"createElement\"), undefined);\n  if (!(reactCreateElement instanceof FunctionValue)) {\n    return false;\n  }\n  let reactCloneElement = logger.tryQuery(() => Get(realm, value, \"cloneElement\"), undefined);\n  if (!(reactCloneElement instanceof FunctionValue)) {\n    return false;\n  }\n  let reactIsValidElement = logger.tryQuery(() => Get(realm, value, \"isValidElement\"), undefined);\n  if (!(reactIsValidElement instanceof FunctionValue)) {\n    return false;\n  }\n  let reactComponent = logger.tryQuery(() => Get(realm, value, \"Component\"), undefined);\n  if (!(reactComponent instanceof FunctionValue)) {\n    return false;\n  }\n  let reactChildren = logger.tryQuery(() => Get(realm, value, \"Children\"), undefined);\n  if (!(reactChildren instanceof ObjectValue)) {\n    return false;\n  }\n  return false;\n}\n\nexport function valueIsLegacyCreateClassComponent(realm: Realm, value: Value): boolean {\n  if (!(value instanceof FunctionValue)) {\n    return false;\n  }\n  let prototype = Get(realm, value, \"prototype\");\n\n  if (prototype instanceof ObjectValue) {\n    return prototype.properties.has(\"__reactAutoBindPairs\");\n  }\n  return false;\n}\n\nexport function valueIsFactoryClassComponent(realm: Realm, value: Value): boolean {\n  if (value instanceof ObjectValue && !ArrayValue.isIntrinsicAndHasWidenedNumericProperty(value)) {\n    return To.ToBooleanPartial(realm, Get(realm, value, \"render\"));\n  }\n  return false;\n}\n\nexport function addKeyToReactElement(realm: Realm, reactElement: ObjectValue): ObjectValue {\n  let typeValue = getProperty(realm, reactElement, \"type\");\n  let refValue = getProperty(realm, reactElement, \"ref\");\n  let propsValue = getProperty(realm, reactElement, \"props\");\n  // we need to apply a key when we're branched\n  let currentKeyValue = getProperty(realm, reactElement, \"key\") || realm.intrinsics.null;\n  let uniqueKey = getUniqueReactElementKey(\"\", realm.react.usedReactElementKeys);\n  let newKeyValue = new StringValue(realm, uniqueKey);\n  if (currentKeyValue !== realm.intrinsics.null) {\n    newKeyValue = computeBinary(realm, \"+\", currentKeyValue, newKeyValue);\n  }\n  invariant(propsValue instanceof ObjectValue);\n  return createInternalReactElement(realm, typeValue, newKeyValue, refValue, propsValue);\n}\n// we create a unique key for each JSXElement to prevent collisions\n// otherwise React will detect a missing/conflicting key at runtime and\n// this can break the reconcilation of JSXElements in arrays\nexport function getUniqueReactElementKey(index?: string, usedReactElementKeys: Set<string>): string {\n  let key;\n  do {\n    key = Math.random()\n      .toString(36)\n      .replace(/[^a-z]+/g, \"\")\n      .substring(0, 2);\n  } while (usedReactElementKeys.has(key));\n  usedReactElementKeys.add(key);\n  if (index !== undefined) {\n    return `${key}${index}`;\n  }\n  return key;\n}\n\n// a helper function to loop over ArrayValues\nexport function forEachArrayValue(\n  realm: Realm,\n  array: ArrayValue,\n  mapFunc: (element: Value, index: number) => void\n): void {\n  let lengthValue = Get(realm, array, \"length\");\n  let isConditionalLength = lengthValue instanceof AbstractValue && lengthValue.kind === \"conditional\";\n  let length;\n  if (isConditionalLength) {\n    length = getMaxLength(lengthValue, 0);\n  } else {\n    invariant(lengthValue instanceof NumberValue, \"TODO: support other types of array length value\");\n    length = lengthValue.value;\n  }\n  for (let i = 0; i < length; i++) {\n    let elementProperty = array.properties.get(\"\" + i);\n    let elementPropertyDescriptor = elementProperty && elementProperty.descriptor;\n    if (elementPropertyDescriptor) {\n      invariant(elementPropertyDescriptor instanceof PropertyDescriptor);\n      let elementValue = elementPropertyDescriptor.value;\n      // If we are in an array with conditional length, the element might be a conditional join\n      // of the same type as the length of the array\n      if (isConditionalLength && elementValue instanceof AbstractValue && elementValue.kind === \"conditional\") {\n        invariant(lengthValue instanceof AbstractValue);\n        let lengthCondition = lengthValue.args[0];\n        let elementCondition = elementValue.args[0];\n        // If they are the same condition\n        invariant(lengthCondition.equals(elementCondition), \"TODO: support cases where the condition is not the same\");\n      }\n      invariant(elementValue instanceof Value);\n      mapFunc(elementValue, i);\n    }\n  }\n}\n\nexport function mapArrayValue(\n  realm: Realm,\n  array: ArrayValue,\n  mapFunc: (element: Value, descriptor: Descriptor) => Value\n): ArrayValue {\n  let returnTheNewArray = false;\n  let newArray;\n\n  const mapArray = (lengthValue: NumberValue): void => {\n    let length = lengthValue.value;\n\n    for (let i = 0; i < length; i++) {\n      let elementProperty = array.properties.get(\"\" + i);\n      let elementPropertyDescriptor = elementProperty && elementProperty.descriptor;\n      if (elementPropertyDescriptor) {\n        invariant(elementPropertyDescriptor instanceof PropertyDescriptor);\n        let elementValue = elementPropertyDescriptor.value;\n        if (elementValue instanceof Value) {\n          let newElement = mapFunc(elementValue, elementPropertyDescriptor);\n          if (newElement !== elementValue) {\n            returnTheNewArray = true;\n          }\n          Create.CreateDataPropertyOrThrow(realm, newArray, \"\" + i, newElement);\n          continue;\n        }\n      }\n      Create.CreateDataPropertyOrThrow(realm, newArray, \"\" + i, realm.intrinsics.undefined);\n    }\n  };\n\n  let lengthValue = Get(realm, array, \"length\");\n  if (lengthValue instanceof AbstractValue && lengthValue.kind === \"conditional\") {\n    returnTheNewArray = true;\n    let [condValue, consequentVal, alternateVal] = lengthValue.args;\n    newArray = Create.ArrayCreate(realm, 0);\n    realm.evaluateWithAbstractConditional(\n      condValue,\n      () => {\n        return realm.evaluateForEffects(\n          () => {\n            invariant(consequentVal instanceof NumberValue);\n            mapArray(consequentVal);\n            return realm.intrinsics.undefined;\n          },\n          null,\n          \"mapArrayValue consequent\"\n        );\n      },\n      () => {\n        return realm.evaluateForEffects(\n          () => {\n            invariant(alternateVal instanceof NumberValue);\n            mapArray(alternateVal);\n            return realm.intrinsics.undefined;\n          },\n          null,\n          \"mapArrayValue alternate\"\n        );\n      }\n    );\n  } else if (lengthValue instanceof NumberValue) {\n    newArray = Create.ArrayCreate(realm, lengthValue.value);\n    mapArray(lengthValue);\n  } else {\n    invariant(false, \"TODO: support other types of array length value\");\n  }\n  return returnTheNewArray ? newArray : array;\n}\n\nfunction GetDescriptorForProperty(value: ObjectValue, propertyName: string): ?Descriptor {\n  let object = value.properties.get(propertyName);\n  invariant(object);\n  return object.descriptor;\n}\n\nexport function convertSimpleClassComponentToFunctionalComponent(\n  realm: Realm,\n  complexComponentType: ECMAScriptSourceFunctionValue,\n  transforms: Array<AdditionalFunctionTransform>\n): void {\n  let prototype = complexComponentType.properties.get(\"prototype\");\n  invariant(prototype);\n  invariant(prototype.descriptor instanceof PropertyDescriptor);\n  prototype.descriptor.configurable = true;\n  Properties.DeletePropertyOrThrow(realm, complexComponentType, \"prototype\");\n\n  // change the function kind\n  complexComponentType.$FunctionKind = \"normal\";\n  // set the prototype back to an object\n  complexComponentType.$Prototype = realm.intrinsics.FunctionPrototype;\n  // give the function the functional components params\n  complexComponentType.$FormalParameters = [t.identifier(\"props\"), t.identifier(\"context\")];\n  // add a transform to occur after the additional function has serialized the body of the class\n  transforms.push((body: Array<BabelNodeStatement>) => {\n    // as this was a class before and is now a functional component, we need to replace\n    // this.props and this.context to props and context, via the function arugments\n    let funcNode = t.functionExpression(null, [], t.blockStatement(body));\n\n    traverse(\n      t.file(t.program([t.expressionStatement(funcNode)])),\n      {\n        \"Identifier|ThisExpression\"(path) {\n          let node = path.node;\n          if ((t.isIdentifier(node) && node.name === \"this\") || t.isThisExpression(node)) {\n            let parentPath = path.parentPath;\n            let parentNode = parentPath.node;\n\n            if (t.isMemberExpression(parentNode)) {\n              // remove the \"this\" from the member\n              parentPath.replaceWith(parentNode.property);\n            } else {\n              throw new FatalError(\n                `conversion of a simple class component to functional component failed due to \"this\" not being replaced`\n              );\n            }\n          }\n        },\n      },\n      undefined,\n      {},\n      undefined\n    );\n    traverse.cache.clear();\n  });\n}\n\nfunction createBinding(descriptor: void | Descriptor, key: string | SymbolValue, object: ObjectValue) {\n  return {\n    descriptor,\n    key,\n    object,\n  };\n}\n\nfunction cloneProperties(realm: Realm, properties: Map<string, any>, object: ObjectValue): Map<string, any> {\n  let newProperties = new Map();\n  for (let [propertyName, { descriptor }] of properties) {\n    newProperties.set(\n      propertyName,\n      createBinding(cloneDescriptor(descriptor.throwIfNotConcrete(realm)), propertyName, object)\n    );\n  }\n  return newProperties;\n}\n\nfunction cloneSymbols(realm: Realm, symbols: Map<SymbolValue, any>, object: ObjectValue): Map<SymbolValue, any> {\n  let newSymbols = new Map();\n  for (let [symbol, { descriptor }] of symbols) {\n    newSymbols.set(symbol, createBinding(cloneDescriptor(descriptor.throwIfNotConcrete(realm)), symbol, object));\n  }\n  return newSymbols;\n}\n\nfunction cloneValue(\n  realm: Realm,\n  originalValue: Value,\n  _prototype: null | ObjectValue,\n  copyToObject?: ObjectValue\n): Value {\n  if (originalValue instanceof FunctionValue) {\n    return cloneFunction(realm, originalValue, _prototype, copyToObject);\n  }\n  invariant(false, \"TODO: add support to cloneValue() for more value types\");\n}\n\nfunction cloneFunction(\n  realm: Realm,\n  originalValue: Value,\n  _prototype: null | ObjectValue,\n  copyToObject?: ObjectValue\n): FunctionValue {\n  let newValue;\n  if (originalValue instanceof ECMAScriptSourceFunctionValue) {\n    newValue = copyToObject || new ECMAScriptSourceFunctionValue(realm, originalValue.intrinsicName);\n    invariant(newValue instanceof ECMAScriptSourceFunctionValue);\n    // $FlowFixMe: complains about Object.assign\n    Object.assign(newValue, originalValue);\n    let properties = cloneProperties(realm, originalValue.properties, newValue);\n    newValue.properties = properties;\n    let symbols = cloneSymbols(realm, originalValue.symbols, newValue);\n    newValue.symbols = symbols;\n\n    // handle home object + prototype\n    let originalPrototype = originalValue.$HomeObject;\n    invariant(originalPrototype instanceof ObjectValue);\n    let prototype = _prototype || clonePrototype(realm, originalPrototype);\n    newValue.$HomeObject = prototype;\n    if (originalPrototype.properties.has(\"constructor\")) {\n      Properties.Set(realm, prototype, \"constructor\", newValue, false);\n    }\n    if (originalValue.properties.has(\"prototype\")) {\n      Properties.Set(realm, newValue, \"prototype\", prototype, false);\n    }\n  }\n  invariant(newValue instanceof FunctionValue, \"TODO: add support to cloneValue() for more function types\");\n  return newValue;\n}\n\nfunction clonePrototype(realm: Realm, prototype: Value): ObjectValue {\n  invariant(prototype instanceof ObjectValue);\n  let newPrototype = new ObjectValue(realm, realm.intrinsics.ObjectPrototype, prototype.intrinsicName);\n\n  Object.assign(newPrototype, prototype);\n  for (let [propertyName] of prototype.properties) {\n    if (propertyName !== \"constructor\") {\n      let originalValue = Get(realm, prototype, propertyName);\n      let newValue = cloneValue(realm, originalValue, prototype);\n      Properties.Set(realm, newPrototype, propertyName, newValue, false);\n    }\n  }\n  for (let [symbol] of prototype.symbols) {\n    let originalValue = Get(realm, prototype, symbol);\n    let newValue = cloneValue(realm, originalValue, prototype);\n    Properties.Set(realm, newPrototype, symbol, newValue, false);\n  }\n  return newPrototype;\n}\n\nconst skipFunctionProperties = new Set([\"length\", \"prototype\", \"arguments\", \"name\", \"caller\"]);\n\nexport function convertFunctionalComponentToComplexClassComponent(\n  realm: Realm,\n  functionalComponentType: ECMAScriptSourceFunctionValue | BoundFunctionValue,\n  complexComponentType: void | ECMAScriptSourceFunctionValue | BoundFunctionValue,\n  transforms: Array<AdditionalFunctionTransform>\n): void {\n  invariant(\n    complexComponentType instanceof ECMAScriptSourceFunctionValue || complexComponentType instanceof BoundFunctionValue\n  );\n  // get all properties on the functional component that were added in user-code\n  // we add defaultProps as undefined, as merging a class component's defaultProps on to\n  // a differnet component isn't right, we can discard defaultProps instead via folding\n  // we also don't want propTypes from the class component, so we remove that too\n  let userCodePropertiesToAdd: Map<string, PropertyBinding> = new Map([\n    [\"defaultProps\", createBinding(undefined, \"defaultProps\", functionalComponentType)],\n    [\"propTypes\", createBinding(undefined, \"propTypes\", functionalComponentType)],\n  ]);\n  let userCodeSymbolsToAdd: Map<SymbolValue, PropertyBinding> = new Map();\n\n  for (let [propertyName, binding] of functionalComponentType.properties) {\n    if (!skipFunctionProperties.has(propertyName)) {\n      userCodePropertiesToAdd.set(propertyName, binding);\n    }\n  }\n  for (let [symbol, binding] of functionalComponentType.symbols) {\n    userCodeSymbolsToAdd.set(symbol, binding);\n  }\n\n  cloneValue(realm, complexComponentType, null, functionalComponentType);\n  // then copy back and properties that were on the original functional component\n  // ensuring we overwrite any existing ones\n  for (let [propertyName, binding] of userCodePropertiesToAdd) {\n    functionalComponentType.properties.set(propertyName, binding);\n  }\n  for (let [symbol, binding] of userCodeSymbolsToAdd) {\n    functionalComponentType.symbols.set(symbol, binding);\n  }\n  // add a transform to occur after the additional function has serialized the body of the class\n  transforms.push((body: Array<BabelNodeStatement>) => {\n    // as we've converted a functional component to a complex one, we are going to have issues with\n    // \"props\" and \"context\" references, as they're now going to be \"this.props\" and \"this.context\".\n    // we simply need a to add to vars to beginning of the body to get around this\n    // if they're not used, any DCE tool post-Prepack (GCC or Uglify) will remove them\n    body.unshift(\n      t.variableDeclaration(\"var\", [\n        t.variableDeclarator(t.identifier(\"props\"), t.memberExpression(t.thisExpression(), t.identifier(\"props\"))),\n        t.variableDeclarator(t.identifier(\"context\"), t.memberExpression(t.thisExpression(), t.identifier(\"context\"))),\n      ])\n    );\n  });\n}\n\nexport function normalizeFunctionalComponentParamaters(func: ECMAScriptSourceFunctionValue): void {\n  // fix the length as we may change the arguments\n  let lengthProperty = GetDescriptorForProperty(func, \"length\");\n  invariant(lengthProperty instanceof PropertyDescriptor);\n  lengthProperty.writable = false;\n  lengthProperty.enumerable = false;\n  lengthProperty.configurable = true;\n  func.$FormalParameters = func.$FormalParameters.map((param, i) => {\n    if (i === 0) {\n      return t.isIdentifier(param) ? param : t.identifier(\"props\");\n    } else {\n      return t.isIdentifier(param) ? param : t.identifier(\"context\");\n    }\n  });\n  if (func.$FormalParameters.length === 1) {\n    func.$FormalParameters.push(t.identifier(\"context\"));\n  }\n  // ensure the length value is set to the correct value after\n  // we've made mutations to the arguments of this function\n  let lengthValue = lengthProperty.value;\n  invariant(lengthValue instanceof NumberValue);\n  lengthValue.value = func.$FormalParameters.length;\n}\n\nexport function createReactHintObject(\n  object: ObjectValue,\n  propertyName: string,\n  args: Array<Value>,\n  firstRenderValue: Value\n): ReactHint {\n  return {\n    firstRenderValue,\n    object,\n    propertyName,\n    args,\n  };\n}\n\nexport function getComponentTypeFromRootValue(\n  realm: Realm,\n  value: Value\n): ECMAScriptSourceFunctionValue | BoundFunctionValue | null {\n  let _valueIsKnownReactAbstraction = valueIsKnownReactAbstraction(realm, value);\n  if (\n    !(\n      value instanceof ECMAScriptSourceFunctionValue ||\n      value instanceof BoundFunctionValue ||\n      _valueIsKnownReactAbstraction\n    )\n  ) {\n    return null;\n  }\n  if (_valueIsKnownReactAbstraction) {\n    invariant(value instanceof AbstractValue);\n    let reactHint = realm.react.abstractHints.get(value);\n\n    invariant(reactHint);\n    if (typeof reactHint !== \"string\" && reactHint.object === realm.fbLibraries.reactRelay) {\n      switch (reactHint.propertyName) {\n        case \"createFragmentContainer\":\n        case \"createPaginationContainer\":\n        case \"createRefetchContainer\":\n          invariant(Array.isArray(reactHint.args));\n          // componentType is the 1st argument of a ReactRelay container\n          let componentType = reactHint.args[0];\n          invariant(\n            componentType instanceof ECMAScriptSourceFunctionValue || componentType instanceof BoundFunctionValue\n          );\n          return componentType;\n        default:\n          invariant(\n            false,\n            `unsupported known React abstraction - ReactRelay property \"${reactHint.propertyName}\" not supported`\n          );\n      }\n    }\n    invariant(false, \"unsupported known React abstraction\");\n  } else {\n    invariant(value instanceof ECMAScriptSourceFunctionValue || value instanceof BoundFunctionValue);\n    return value;\n  }\n}\n\nexport function flagPropsWithNoPartialKeyOrRef(realm: Realm, props: ObjectValue | AbstractObjectValue): void {\n  realm.react.propsWithNoPartialKeyOrRef.add(props);\n}\n\nexport function hasNoPartialKeyOrRef(realm: Realm, props: ObjectValue | AbstractObjectValue): boolean {\n  if (realm.react.propsWithNoPartialKeyOrRef.has(props)) {\n    return true;\n  }\n  if (props instanceof ObjectValue && !props.isPartialObject()) {\n    return true;\n  }\n  if (props instanceof AbstractObjectValue) {\n    if (props.values.isTop()) {\n      return false;\n    }\n    let elements = props.values.getElements();\n    for (let element of elements) {\n      invariant(element instanceof ObjectValue);\n      let wasSafe = hasNoPartialKeyOrRef(realm, element);\n      if (!wasSafe) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (props instanceof ObjectValue && props.properties.has(\"key\") && props.properties.has(\"ref\")) {\n    return true;\n  }\n  return false;\n}\n\nexport function getMaxLength(value: Value, maxLength: number): number {\n  if (value instanceof NumberValue) {\n    if (value.value > maxLength) {\n      return value.value;\n    } else {\n      return maxLength;\n    }\n  } else if (value instanceof AbstractValue && value.kind === \"conditional\") {\n    let [, consequentVal, alternateVal] = value.args;\n    let consequentMaxVal = getMaxLength(consequentVal, maxLength);\n    let alternateMaxVal = getMaxLength(alternateVal, maxLength);\n    if (consequentMaxVal > maxLength && consequentMaxVal >= alternateMaxVal) {\n      return consequentMaxVal;\n    } else if (alternateMaxVal > maxLength && alternateMaxVal >= consequentMaxVal) {\n      return alternateMaxVal;\n    }\n    return maxLength;\n  }\n  invariant(false, \"TODO: support other types of array length value\");\n}\n\nfunction recursivelyFlattenArray(realm: Realm, array, targetArray: ArrayValue, noHoles: boolean): void {\n  forEachArrayValue(realm, array, _item => {\n    let element = _item;\n    if (element instanceof ArrayValue && !element.intrinsicName) {\n      recursivelyFlattenArray(realm, element, targetArray, noHoles);\n    } else {\n      let lengthValue = Get(realm, targetArray, \"length\");\n      invariant(lengthValue instanceof NumberValue);\n      if (noHoles && element instanceof EmptyValue) {\n        // We skip holely elements\n        return;\n      } else if (noHoles && element instanceof AbstractValue && element.kind === \"conditional\") {\n        let [condValue, consequentVal, alternateVal] = element.args;\n        invariant(condValue instanceof AbstractValue);\n        let consquentIsHolely = consequentVal instanceof EmptyValue;\n        let alternateIsHolely = alternateVal instanceof EmptyValue;\n\n        if (consquentIsHolely && alternateIsHolely) {\n          // We skip holely elements\n          return;\n        }\n        if (consquentIsHolely) {\n          element = AbstractValue.createFromLogicalOp(\n            realm,\n            \"&&\",\n            AbstractValue.createFromUnaryOp(realm, \"!\", condValue),\n            alternateVal\n          );\n        }\n        if (alternateIsHolely) {\n          element = AbstractValue.createFromLogicalOp(realm, \"&&\", condValue, consequentVal);\n        }\n      }\n      Properties.Set(realm, targetArray, \"\" + lengthValue.value, element, true);\n    }\n  });\n}\n\nexport function flattenChildren(realm: Realm, array: ArrayValue, noHoles: boolean): ArrayValue {\n  let flattenedChildren = Create.ArrayCreate(realm, 0);\n  recursivelyFlattenArray(realm, array, flattenedChildren, noHoles);\n  flattenedChildren.makeFinal();\n  return flattenedChildren;\n}\n\n// This function is mainly use to get internal properties\n// on objects that we know are safe to access internally\n// such as ReactElements. Getting properties here does\n// not emit change to modified bindings and is intended\n// for only internal usage – not for user-land code\nexport function getProperty(\n  realm: Realm,\n  object: ObjectValue | AbstractObjectValue,\n  property: string | SymbolValue\n): Value {\n  if (object instanceof AbstractObjectValue) {\n    if (object.values.isTop()) {\n      return realm.intrinsics.undefined;\n    }\n    let elements = object.values.getElements();\n    invariant(elements.size === 1, \"TODO: deal with multiple elements\");\n    for (let element of elements) {\n      invariant(element instanceof ObjectValue, \"TODO: deal with object set templates\");\n      object = element;\n    }\n    invariant(object instanceof ObjectValue);\n  }\n  let binding;\n  if (typeof property === \"string\") {\n    binding = object.properties.get(property);\n  } else {\n    binding = object.symbols.get(property);\n  }\n  if (!binding) {\n    return realm.intrinsics.undefined;\n  }\n  let descriptor = binding.descriptor;\n\n  if (!descriptor) {\n    return realm.intrinsics.undefined;\n  }\n  invariant(descriptor instanceof PropertyDescriptor);\n  let value = descriptor.value;\n  if (value === undefined) {\n    AbstractValue.reportIntrospectionError(object, `react/utils/getProperty unsupported getter/setter property`);\n    throw new FatalError();\n  }\n  invariant(value instanceof Value, `react/utils/getProperty should not be called on internal properties`);\n  return value;\n}\n\nexport function createReactEvaluatedNode(\n  status:\n    | \"ROOT\"\n    | \"NEW_TREE\"\n    | \"INLINED\"\n    | \"BAIL-OUT\"\n    | \"FATAL\"\n    | \"UNKNOWN_TYPE\"\n    | \"RENDER_PROPS\"\n    | \"FORWARD_REF\"\n    | \"NORMAL\",\n  name: string\n): ReactEvaluatedNode {\n  return {\n    children: [],\n    message: \"\",\n    name,\n    status,\n  };\n}\n\nexport function getComponentName(realm: Realm, componentType: Value): string {\n  if (componentType instanceof SymbolValue && componentType === getReactSymbol(\"react.fragment\", realm)) {\n    return \"React.Fragment\";\n  } else if (componentType instanceof SymbolValue) {\n    return \"unknown symbol\";\n  }\n  // $FlowFixMe: this code is fine, Flow thinks that coponentType is bound to string...\n  if (isReactComponent(componentType)) {\n    return \"ReactElement\";\n  }\n  if (componentType === realm.intrinsics.undefined || componentType === realm.intrinsics.null) {\n    return \"no name\";\n  }\n  invariant(\n    componentType instanceof ECMAScriptSourceFunctionValue ||\n      componentType instanceof BoundFunctionValue ||\n      componentType instanceof AbstractObjectValue ||\n      componentType instanceof AbstractValue ||\n      componentType instanceof ObjectValue\n  );\n  let boundText = componentType instanceof BoundFunctionValue ? \"bound \" : \"\";\n\n  if (componentType.__originalName) {\n    return boundText + componentType.__originalName;\n  }\n  if (realm.fbLibraries.reactRelay !== undefined) {\n    if (componentType === Get(realm, realm.fbLibraries.reactRelay, \"QueryRenderer\")) {\n      return boundText + \"QueryRenderer\";\n    }\n  }\n  if (componentType instanceof ECMAScriptSourceFunctionValue && componentType.$Prototype !== undefined) {\n    let name = Get(realm, componentType, \"name\");\n\n    if (name instanceof StringValue) {\n      return boundText + name.value;\n    }\n  }\n  if (componentType instanceof ObjectValue) {\n    let $$typeof = getProperty(realm, componentType, \"$$typeof\");\n\n    if ($$typeof === getReactSymbol(\"react.forward_ref\", realm)) {\n      return \"forwarded ref\";\n    }\n  }\n  if (componentType instanceof FunctionValue) {\n    return boundText + \"anonymous\";\n  }\n  return \"unknown\";\n}\n\nexport function convertConfigObjectToReactComponentTreeConfig(\n  realm: Realm,\n  config: ObjectValue | UndefinedValue\n): ReactComponentTreeConfig {\n  // defaults\n  let firstRenderOnly = false;\n  let isRoot = false;\n  let modelString;\n\n  if (!(config instanceof UndefinedValue)) {\n    for (let [key] of config.properties) {\n      let propValue = getProperty(realm, config, key);\n      if (propValue instanceof StringValue || propValue instanceof NumberValue || propValue instanceof BooleanValue) {\n        let value = propValue.value;\n\n        if (typeof value === \"boolean\") {\n          // boolean options\n          if (key === \"firstRenderOnly\") {\n            firstRenderOnly = value;\n          } else if (key === \"isRoot\") {\n            isRoot = value;\n          }\n        } else if (typeof value === \"string\") {\n          try {\n            // result here is ignored as the main point here is to\n            // check and produce error\n            JSON.parse(value);\n          } catch (e) {\n            let componentModelError = new CompilerDiagnostic(\n              \"Failed to parse model for component\",\n              realm.currentLocation,\n              \"PP1008\",\n              \"FatalError\"\n            );\n            if (realm.handleError(componentModelError) !== \"Recover\") {\n              throw new FatalError();\n            }\n          }\n          // string options\n          if (key === \"model\") {\n            modelString = value;\n          }\n        }\n      } else {\n        let diagnostic = new CompilerDiagnostic(\n          \"__optimizeReactComponentTree(rootComponent, config) has been called with invalid arguments\",\n          realm.currentLocation,\n          \"PP0024\",\n          \"FatalError\"\n        );\n        realm.handleError(diagnostic);\n        if (realm.handleError(diagnostic) === \"Fail\") throw new FatalError();\n      }\n    }\n  }\n  return {\n    firstRenderOnly,\n    isRoot,\n    modelString,\n  };\n}\n\nexport function getValueFromFunctionCall(\n  realm: Realm,\n  func: ECMAScriptSourceFunctionValue | BoundFunctionValue,\n  funcThis: ObjectValue | AbstractObjectValue | UndefinedValue,\n  args: Array<Value>,\n  isConstructor?: boolean = false\n): Value {\n  invariant(func.$Call, \"Expected function to be a FunctionValue with $Call method\");\n  let funcCall = func.$Call;\n  let newCall = func.$Construct;\n  let completion;\n  try {\n    let value;\n    if (isConstructor) {\n      invariant(newCall);\n      value = newCall(args, func);\n    } else {\n      value = funcCall(funcThis, args);\n    }\n    completion = new SimpleNormalCompletion(value);\n  } catch (error) {\n    if (error instanceof AbruptCompletion) {\n      completion = error;\n    } else {\n      throw error;\n    }\n  }\n  return realm.returnOrThrowCompletion(completion);\n}\n\nfunction isEventProp(name: string): boolean {\n  return name.length > 2 && name[0].toLowerCase() === \"o\" && name[1].toLowerCase() === \"n\";\n}\n\nexport function createNoopFunction(realm: Realm): ECMAScriptSourceFunctionValue {\n  if (realm.react.noopFunction !== undefined) {\n    return realm.react.noopFunction;\n  }\n  let noOpFunc = new ECMAScriptSourceFunctionValue(realm);\n  noOpFunc.initialize([], t.blockStatement([]));\n  realm.react.noopFunction = noOpFunc;\n  return noOpFunc;\n}\n\nexport function doNotOptimizeComponent(realm: Realm, componentType: Value): boolean {\n  if (componentType instanceof ObjectValue) {\n    let doNotOptimize = Get(realm, componentType, \"__reactCompilerDoNotOptimize\");\n\n    if (doNotOptimize instanceof BooleanValue) {\n      return doNotOptimize.value;\n    }\n  }\n  return false;\n}\n\nexport function createDefaultPropsHelper(realm: Realm): ECMAScriptSourceFunctionValue {\n  let defaultPropsHelper = `\n    function defaultPropsHelper(props, defaultProps) {\n      for (var propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n      return props;\n    }\n  `;\n\n  let escapeHelperAst = parseExpression(defaultPropsHelper, { plugins: [\"flow\"] });\n  let helper = new ECMAScriptSourceFunctionValue(realm);\n  helper.initialize(escapeHelperAst.params, escapeHelperAst.body);\n  return helper;\n}\n\nexport function createInternalReactElement(\n  realm: Realm,\n  type: Value,\n  key: Value,\n  ref: Value,\n  props: ObjectValue\n): ObjectValue {\n  let obj = Create.ObjectCreate(realm, realm.intrinsics.ObjectPrototype);\n\n  // Sanity check the type is not conditional\n  if (type instanceof AbstractValue && type.kind === \"conditional\") {\n    invariant(false, \"createInternalReactElement should never encounter a conditional type\");\n  }\n\n  Create.CreateDataPropertyOrThrow(realm, obj, \"$$typeof\", getReactSymbol(\"react.element\", realm));\n  Create.CreateDataPropertyOrThrow(realm, obj, \"type\", type);\n  Create.CreateDataPropertyOrThrow(realm, obj, \"key\", key);\n  Create.CreateDataPropertyOrThrow(realm, obj, \"ref\", ref);\n  Create.CreateDataPropertyOrThrow(realm, obj, \"props\", props);\n  Create.CreateDataPropertyOrThrow(realm, obj, \"_owner\", realm.intrinsics.null);\n  obj.makeFinal();\n  // If we're in \"rendering\" a React component tree, we should have an active reconciler\n  let activeReconciler = realm.react.activeReconciler;\n  let createdDuringReconcilation = activeReconciler !== undefined;\n  let firstRenderOnly = createdDuringReconcilation ? activeReconciler.componentTreeConfig.firstRenderOnly : false;\n\n  realm.react.reactElements.set(obj, { createdDuringReconcilation, firstRenderOnly });\n  // Sanity check to ensure no bugs have crept in\n  invariant(\n    realm.react.reactProps.has(props) && props.mightBeFinalObject(),\n    \"React props object is not correctly setup\"\n  );\n  return obj;\n}\n\nfunction applyClonedTemporalAlias(realm: Realm, props: ObjectValue, clonedProps: ObjectValue): void {\n  let temporalAlias = props.temporalAlias;\n  invariant(temporalAlias !== undefined);\n  if (temporalAlias.kind === \"conditional\") {\n    // Leave in for now, we should deal with this later, but there might\n    // be a better option.\n    invariant(false, \"TODO applyClonedTemporalAlias conditional\");\n  }\n  let temporalOperationEntry = realm.getTemporalOperationEntryFromDerivedValue(temporalAlias);\n  if (!(temporalOperationEntry instanceof TemporalObjectAssignEntry)) {\n    invariant(false, \"TODO nont TemporalObjectAssignEntry\");\n  }\n  invariant(temporalOperationEntry !== undefined);\n  let temporalArgs = temporalOperationEntry.args;\n  // replace the original props with the cloned one\n  let [to, ...sources] = temporalArgs.map(arg => (arg === props ? clonedProps : arg));\n\n  invariant(to instanceof ObjectValue || to instanceof AbstractObjectValue);\n  AbstractValue.createTemporalObjectAssign(realm, to, sources);\n}\n\nexport function cloneProps(realm: Realm, props: ObjectValue, newChildren?: Value): ObjectValue {\n  let clonedProps = new ObjectValue(realm, realm.intrinsics.ObjectPrototype);\n\n  for (let [propName, binding] of props.properties) {\n    if (binding && binding.descriptor) {\n      invariant(binding.descriptor instanceof PropertyDescriptor);\n      if (binding.descriptor.enumerable) {\n        if (newChildren !== undefined && propName === \"children\") {\n          Properties.Set(realm, clonedProps, propName, newChildren, true);\n        } else {\n          Properties.Set(realm, clonedProps, propName, getProperty(realm, props, propName), true);\n        }\n      }\n    }\n  }\n\n  if (props.isPartialObject()) {\n    clonedProps.makePartial();\n  }\n  if (props.isSimpleObject()) {\n    clonedProps.makeSimple();\n  }\n  if (realm.react.propsWithNoPartialKeyOrRef.has(props)) {\n    flagPropsWithNoPartialKeyOrRef(realm, clonedProps);\n  }\n  if (props.temporalAlias !== undefined) {\n    applyClonedTemporalAlias(realm, props, clonedProps);\n  }\n  clonedProps.makeFinal();\n  realm.react.reactProps.add(clonedProps);\n  return clonedProps;\n}\n\nexport function applyObjectAssignConfigsForReactElement(realm: Realm, to: ObjectValue, sources: Array<Value>): void {\n  // Get the global Object.assign\n  let globalObj = Get(realm, realm.$GlobalObject, \"Object\");\n  invariant(globalObj instanceof ObjectValue);\n  let objAssign = Get(realm, globalObj, \"assign\");\n  invariant(objAssign instanceof ECMAScriptFunctionValue);\n  let objectAssignCall = objAssign.$Call;\n  invariant(objectAssignCall !== undefined);\n\n  // Use the existing internal Prepack Object.assign model\n  objectAssignCall(realm.intrinsics.undefined, [to, ...sources]);\n}\n\n// In firstRenderOnly mode, we strip off onEventHanlders and any props\n// that are functions as they are not required for init render.\nexport function canExcludeReactElementObjectProperty(\n  realm: Realm,\n  reactElement: ObjectValue,\n  name: string,\n  value: Value\n): boolean {\n  let reactElementData = realm.react.reactElements.get(reactElement);\n  invariant(reactElementData !== undefined);\n  let { firstRenderOnly } = reactElementData;\n  let isHostComponent = getProperty(realm, reactElement, \"type\") instanceof StringValue;\n  return firstRenderOnly && isHostComponent && (isEventProp(name) || value instanceof FunctionValue);\n}\n\nexport function cloneReactElement(realm: Realm, reactElement: ObjectValue, shouldCloneProps: boolean): ObjectValue {\n  let typeValue = getProperty(realm, reactElement, \"type\");\n  let keyValue = getProperty(realm, reactElement, \"key\");\n  let refValue = getProperty(realm, reactElement, \"ref\");\n  let propsValue = getProperty(realm, reactElement, \"props\");\n\n  invariant(propsValue instanceof ObjectValue);\n  if (shouldCloneProps) {\n    propsValue = cloneProps(realm, propsValue);\n  }\n  return createInternalReactElement(realm, typeValue, keyValue, refValue, propsValue);\n}\n\n// This function changes an object's property value by changing it's binding\n// and descriptor, thus bypassing the binding detection system. This is a\n// dangerous function and should only be used on objects created by React.\n// It's primary use is to update ReactElement / React props properties\n// during the visitor equivalence stage as an optimization feature.\n// It will invariant if used on objects that are not final.\nexport function hardModifyReactObjectPropertyBinding(\n  realm: Realm,\n  object: ObjectValue,\n  propName: string,\n  value: Value\n): void {\n  invariant(\n    object.mightBeFinalObject() && !object.mightNotBeFinalObject(),\n    \"hardModifyReactObjectPropertyBinding can only be used on final objects!\"\n  );\n  let binding = object.properties.get(propName);\n  if (binding === undefined) {\n    binding = {\n      object,\n      descriptor: new PropertyDescriptor({\n        configurable: true,\n        enumerable: true,\n        value: undefined,\n        writable: true,\n      }),\n      key: propName,\n    };\n  }\n  let descriptor = binding.descriptor;\n  invariant(descriptor instanceof PropertyDescriptor && IsDataDescriptor(realm, descriptor));\n  let newDescriptor = new PropertyDescriptor(descriptor);\n  newDescriptor.value = value;\n  let newBinding = Object.assign({}, binding, {\n    descriptor: newDescriptor,\n  });\n  object.properties.set(propName, newBinding);\n}\n"],"file":"utils.js"}