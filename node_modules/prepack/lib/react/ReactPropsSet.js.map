{"version":3,"sources":["../../src/react/ReactPropsSet.js"],"names":["ReactPropsSet","constructor","realm","reactEquivalenceSet","add","props","visitedValues","Set","currentMap","reactPropsRoot","result","propName","properties","getKey","getEquivalentPropertyValue","map","temporalAlias","undefined","temporalAliasSymbol","getTemporalAliasValue","react","emptyObject","value","ObjectValue"],"mappings":";;;;;;;AAWA;;AACA;;AACA;;AACA;;;;AAdA;;;;;;;;AAgBO,MAAMA,aAAN,CAAoB;AACzBC,EAAAA,WAAW,CAACC,KAAD,EAAeC,mBAAf,EAAyD;AAClE,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKC,mBAAL,GAA2BA,mBAA3B;AACD;;AAIDC,EAAAA,GAAG,CAACC,KAAD,EAAqBC,aAArB,EAAoE;AACrE,QAAI,CAACA,aAAL,EAAoBA,aAAa,GAAG,IAAIC,GAAJ,EAAhB;AACpB,QAAIJ,mBAAmB,GAAG,KAAKA,mBAA/B;AACA,QAAIK,UAAU,GAAGL,mBAAmB,CAACM,cAArC;AACA,QAAIC,MAAJ;;AAEA,SAAK,IAAI,CAACC,QAAD,CAAT,IAAuBN,KAAK,CAACO,UAA7B,EAAyC;AACvCJ,MAAAA,UAAU,GAAGL,mBAAmB,CAACU,MAApB,CAA2BF,QAA3B,EAAqCH,UAArC,EAAiDF,aAAjD,CAAb;AACAI,MAAAA,MAAM,GAAGP,mBAAmB,CAACW,0BAApB,CAA+CT,KAA/C,EAAsDM,QAAtD,EAAgEH,UAAhE,EAA4EF,aAA5E,CAAT;AACAE,MAAAA,UAAU,GAAGE,MAAM,CAACK,GAApB;AACD;;AACD,QAAIC,aAAa,GAAGX,KAAK,CAACW,aAA1B;;AAEA,QAAIA,aAAa,KAAKC,SAAtB,EAAiC;AAC/BT,MAAAA,UAAU,GAAGL,mBAAmB,CAACU,MAApB,CAA2BK,wCAA3B,EAAgDV,UAAhD,EAA4DF,aAA5D,CAAb;AACAI,MAAAA,MAAM,GAAGP,mBAAmB,CAACgB,qBAApB,CAA0CH,aAA1C,EAAyDR,UAAzD,EAAqEF,aAArE,CAAT;AACAE,MAAAA,UAAU,GAAGE,MAAM,CAACK,GAApB;AACD;;AAED,QAAIL,MAAM,KAAKO,SAAf,EAA0B;AACxB;AACA,UAAID,aAAa,KAAKC,SAAlB,IAA+B,KAAKf,KAAL,CAAWkB,KAAX,CAAiBC,WAAjB,KAAiCJ,SAApE,EAA+E;AAC7E,eAAO,KAAKf,KAAL,CAAWkB,KAAX,CAAiBC,WAAxB;AACD;;AACD,aAAOhB,KAAP;AACD;;AACD,QAAIK,MAAM,CAACY,KAAP,KAAiB,IAArB,EAA2B;AACzBZ,MAAAA,MAAM,CAACY,KAAP,GAAejB,KAAf;AACD;;AACD,4BAAUK,MAAM,CAACY,KAAP,YAAwBC,kBAAlC;AACA,WAAOb,MAAM,CAACY,KAAd;AACD;;AAvCwB","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport { Realm } from \"../realm.js\";\nimport { ObjectValue, Value } from \"../values/index.js\";\nimport invariant from \"../invariant.js\";\nimport { ReactEquivalenceSet, temporalAliasSymbol } from \"./ReactEquivalenceSet.js\";\n\nexport class ReactPropsSet {\n  constructor(realm: Realm, reactEquivalenceSet: ReactEquivalenceSet) {\n    this.realm = realm;\n    this.reactEquivalenceSet = reactEquivalenceSet;\n  }\n  realm: Realm;\n  reactEquivalenceSet: ReactEquivalenceSet;\n\n  add(props: ObjectValue, visitedValues: Set<Value> | void): ObjectValue {\n    if (!visitedValues) visitedValues = new Set();\n    let reactEquivalenceSet = this.reactEquivalenceSet;\n    let currentMap = reactEquivalenceSet.reactPropsRoot;\n    let result;\n\n    for (let [propName] of props.properties) {\n      currentMap = reactEquivalenceSet.getKey(propName, currentMap, visitedValues);\n      result = reactEquivalenceSet.getEquivalentPropertyValue(props, propName, currentMap, visitedValues);\n      currentMap = result.map;\n    }\n    let temporalAlias = props.temporalAlias;\n\n    if (temporalAlias !== undefined) {\n      currentMap = reactEquivalenceSet.getKey(temporalAliasSymbol, currentMap, visitedValues);\n      result = reactEquivalenceSet.getTemporalAliasValue(temporalAlias, currentMap, visitedValues);\n      currentMap = result.map;\n    }\n\n    if (result === undefined) {\n      // If we have a temporalAlias, we can never return an empty object\n      if (temporalAlias === undefined && this.realm.react.emptyObject !== undefined) {\n        return this.realm.react.emptyObject;\n      }\n      return props;\n    }\n    if (result.value === null) {\n      result.value = props;\n    }\n    invariant(result.value instanceof ObjectValue);\n    return result.value;\n  }\n}\n"],"file":"ReactPropsSet.js"}