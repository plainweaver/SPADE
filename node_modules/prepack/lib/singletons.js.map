{"version":3,"sources":["../src/singletons.js"],"names":["Create","Environment","Functions","Leak","Materialize","Join","Path","createPathConditions","Properties","To","Widen","concretize","Utils","DebugReproManager","setCreate","singleton","setEnvironment","setFunctions","setLeak","setMaterialize","setJoin","setPath","setPathConditions","f","setProperties","setTo","setWiden","setConcretize","setUtils","setDebugReproManager"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;AA4BO,IAAIA,MAAkB,GAAI,IAA1B;;AACA,IAAIC,WAA4B,GAAI,IAApC;;AACA,IAAIC,SAAuB,GAAI,IAA/B;;AACA,IAAIC,IAAc,GAAI,IAAtB;;AACA,IAAIC,WAA4B,GAAI,IAApC;;AACA,IAAIC,IAAc,GAAI,IAAtB;;AACA,IAAIC,IAAc,GAAI,IAAtB;;AACA,IAAIC,oBAA+D,GAAI,IAAvE;;AACA,IAAIC,UAA0B,GAAI,IAAlC;;AACA,IAAIC,EAAU,GAAI,IAAlB;;AACA,IAAIC,KAAgB,GAAI,IAAxB;;AACA,IAAIC,UAA0B,GAAI,IAAlC;;AAEA,IAAIC,KAAgB,GAAI,IAAxB;;AACA,IAAIC,iBAAwC,GAAI,IAAhD;;;AAEA,SAASC,SAAT,CAAmBC,SAAnB,EAAgD;AACrD,mBAAAf,MAAM,GAAGe,SAAT;AACD;;AAEM,SAASC,cAAT,CAAwBD,SAAxB,EAA0D;AAC/D,wBAAAd,WAAW,GAAGc,SAAd;AACD;;AAEM,SAASE,YAAT,CAAsBF,SAAtB,EAAqD;AAC1D,sBAAAb,SAAS,GAAGa,SAAZ;AACD;;AAEM,SAASG,OAAT,CAAiBH,SAAjB,EAA4C;AACjD,iBAAAZ,IAAI,GAAGY,SAAP;AACD;;AAEM,SAASI,cAAT,CAAwBJ,SAAxB,EAA0D;AAC/D,wBAAAX,WAAW,GAAGW,SAAd;AACD;;AAEM,SAASK,OAAT,CAAiBL,SAAjB,EAA4C;AACjD,iBAAAV,IAAI,GAAGU,SAAP;AACD;;AAEM,SAASM,OAAT,CAAiBN,SAAjB,EAA4C;AACjD,iBAAAT,IAAI,GAAGS,SAAP;AACD;;AAEM,SAASO,iBAAT,CAA2BC,CAA3B,EAA+E;AACpF,iCAAAhB,oBAAoB,GAAGgB,CAAvB;AACD;;AAEM,SAASC,aAAT,CAAuBT,SAAvB,EAAwD;AAC7D,uBAAAP,UAAU,GAAGO,SAAb;AACD;;AAEM,SAASU,KAAT,CAAeV,SAAf,EAAwC;AAC7C,eAAAN,EAAE,GAAGM,SAAL;AACD;;AAEM,SAASW,QAAT,CAAkBX,SAAlB,EAA8C;AACnD,kBAAAL,KAAK,GAAGK,SAAR;AACD;;AAEM,SAASY,aAAT,CAAuBZ,SAAvB,EAAwD;AAC7D,uBAAAJ,UAAU,GAAGI,SAAb;AACD;;AAEM,SAASa,QAAT,CAAkBb,SAAlB,EAA8C;AACnD,kBAAAH,KAAK,GAAGG,SAAR;AACD;;AAEM,SAASc,oBAAT,CAA8Bd,SAA9B,EAAsE;AAC3E,8BAAAF,iBAAiB,GAAGE,SAApB;AACD","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type {\n  ConcretizeType,\n  CreateType,\n  EnvironmentType,\n  FunctionType,\n  LeakType,\n  JoinType,\n  MaterializeType,\n  PathType,\n  PathConditions,\n  PropertiesType,\n  ToType,\n  UtilsType,\n  WidenType,\n  DebugReproManagerType,\n} from \"./types.js\";\n\nexport let Create: CreateType = (null: any);\nexport let Environment: EnvironmentType = (null: any);\nexport let Functions: FunctionType = (null: any);\nexport let Leak: LeakType = (null: any);\nexport let Materialize: MaterializeType = (null: any);\nexport let Join: JoinType = (null: any);\nexport let Path: PathType = (null: any);\nexport let createPathConditions: (PathConditions | void) => PathConditions = (null: any);\nexport let Properties: PropertiesType = (null: any);\nexport let To: ToType = (null: any);\nexport let Widen: WidenType = (null: any);\nexport let concretize: ConcretizeType = (null: any);\n\nexport let Utils: UtilsType = (null: any);\nexport let DebugReproManager: DebugReproManagerType = (null: any);\n\nexport function setCreate(singleton: CreateType): void {\n  Create = singleton;\n}\n\nexport function setEnvironment(singleton: EnvironmentType): void {\n  Environment = singleton;\n}\n\nexport function setFunctions(singleton: FunctionType): void {\n  Functions = singleton;\n}\n\nexport function setLeak(singleton: LeakType): void {\n  Leak = singleton;\n}\n\nexport function setMaterialize(singleton: MaterializeType): void {\n  Materialize = singleton;\n}\n\nexport function setJoin(singleton: JoinType): void {\n  Join = singleton;\n}\n\nexport function setPath(singleton: PathType): void {\n  Path = singleton;\n}\n\nexport function setPathConditions(f: (PathConditions | void) => PathConditions): void {\n  createPathConditions = f;\n}\n\nexport function setProperties(singleton: PropertiesType): void {\n  Properties = singleton;\n}\n\nexport function setTo(singleton: ToType): void {\n  To = singleton;\n}\n\nexport function setWiden(singleton: WidenType): void {\n  Widen = singleton;\n}\n\nexport function setConcretize(singleton: ConcretizeType): void {\n  concretize = singleton;\n}\n\nexport function setUtils(singleton: UtilsType): void {\n  Utils = singleton;\n}\n\nexport function setDebugReproManager(singleton: DebugReproManagerType): void {\n  DebugReproManager = singleton;\n}\n"],"file":"singletons.js"}