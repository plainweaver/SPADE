{"version":3,"sources":["../src/realm.js"],"names":["effects_uid","Effects","constructor","result","generator","bindings","propertyBindings","createdObjects","modifiedBindings","modifiedProperties","canBeApplied","_id","shallowCloneWithResult","toDisplayString","Utils","jsonToDisplayString","toDisplayJson","depth","verboseToDisplayJson","Tracer","beginEvaluateForEffects","state","endEvaluateForEffects","effects","detourCall","F","thisArgument","argumentsList","newTarget","performCall","beforeCall","afterCall","beginOptimizingFunction","optimizedFunctionId","functionValue","endOptimizingFunction","ExecutionContext","setCaller","context","caller","setFunction","ECMAScriptSourceFunctionValue","isStrict","$Strict","function","setLocation","loc","setRealm","realm","setReadOnly","value","oldReadOnly","isReadOnly","variableEnvironment","environmentRecord","lexicalEnvironment","suspend","resume","intrinsics","undefined","construct_empty_effects","c","SimpleNormalCompletion","empty","Generator","pathConditions","Map","Set","Realm","opts","statistics","useAbstractInterpretation","serialize","Array","isArray","check","ignoreLeakLogic","isInPureTryStatement","mathRandomSeed","mathRandomGenerator","strictlyMonotonicDateNow","abstractValueImpliesMax","abstractValueImpliesCounter","inSimplificationPath","timeout","timeoutCounter","timeoutCounterThreshold","start","Date","now","compatibility","remainingCalls","maxStackDepth","invariantLevel","invariantMode","emitConcreteModel","$TemplateMap","preludeGenerator","PreludeGenerator","debugNames","uniqueSuffix","ObjectValue","setupTrackedPropertyAccessors","trackedPropertyNames","NativeFunctionValue","ProxyValue","collectedNestedOptimizedFunctionEffects","tracers","$GlobalObject","evaluators","Object","create","$GlobalEnv","derivedIds","temporalEntryArgToEntries","temporalEntryCounter","instantRender","enabled","react","abstractHints","WeakMap","activeReconciler","classComponentMetadata","currentOwner","defaultPropsHelper","emptyArray","emptyObject","reactEnabled","failOnUnsupportedSideEffects","reactFailOnUnsupportedSideEffects","hoistableFunctions","hoistableReactElements","noopFunction","optimizeNestedFunctions","reactOptimizeNestedFunctions","output","reactOutput","propsWithNoPartialKeyOrRef","WeakSet","reactElements","reactElementStringTypeReferences","reactProps","symbols","usedReactElementKeys","verbose","reactVerbose","reportSideEffectCallbacks","alreadyDescribedLocations","stripFlow","fbLibraries","other","reactDom","reactDomServer","reactNative","reactRelay","errorHandler","globalSymbolRegistry","activeLexicalEnvironments","_abstractValuesDefined","_checkedObjectIds","optimizedFunctions","arrayNestedOptimizedFunctionsEnabled","isCompatibleWith","getGlobalLetBinding","key","globrec","GlobalEnvironmentRecord","dclrec","$DeclarativeRecord","HasBinding","GetBindingValue","e","FatalError","readOnlyValue","contextStack","forEach","ctx","testTimeout","total","error","CompilerDiagnostic","currentLocation","handleError","hasRunningContext","length","getRunningContext","clearBlockBindings","b","keys","mightHaveBeenCaptured","name","delete","onDestroyScope","has","DeclarativeEnvironmentRecord","destroy","startCall","endCall","pushContext","push","markVisibleLocalBindingsAsPotentiallyCaptured","lexEnv","envRec","binding","parent","clearFunctionBindings","funcVal","environment","FunctionEnvironmentRecord","$FunctionObject","popContext","pop","wrapInGlobalEnv","callback","assignToGlobal","deleteGlobalBinding","DeleteBinding","neverCheckProperty","object","P","startsWith","intrinsicName","_getCheckedBindings","globalObject","properties","get","checkedBindingsObject","descriptor","throwIfNotConcrete","markPropertyAsChecked","objectId","set","size","id","checkedBindings","$Set","true","hasBindingBeenChecked","Value","mightNotBeTrue","evaluatePure","f","bubbleSideEffectReports","reportSideEffectFunc","saved_createdObjectsTrackedForLeaks","createdObjectsTrackedForLeaks","saved_reportSideEffectCallbacks","add","obj","isInPureScope","evaluateWithoutLeakLogic","evaluateWithPossibleThrowCompletion","thrownTypes","thrownValues","diag","evaluateNodeForEffects","ast","strictCode","env","generatorName","evaluateForEffects","evaluateCompletionDeref","evaluateForEffectsInGlobalEnv","func","withEffectsAppliedInGlobalEnv","applyEffects","restoreBindings","restoreProperties","withNewOptimizedFunction","optimizedFunction","previousOptimizedFunction","currentOptimizedFunction","evaluateNodeForEffectsInGlobalEnv","node","evaluateWithoutEffects","savedGenerator","savedBindings","savedProperties","savedCreatedObjects","saved_completion","savedCompletion","getAndResetModifiedMaps","saved_generator","saved_createdObjects","saved_abstractValuesDefined","t1","Reference","Environment","GetValue","AbruptCompletion","Functions","incorporateSavedCompletion","astGenerator","astBindings","astProperties","astCreatedObjects","completion","savedEffects","composedWith","t2","evaluateWithUndo","defaultValue","oldErrorHandler","d","severity","Completion","evaluateWithUndoForDiagnostic","savedHandler","diagnostic","resultVal","evaluateForFixpointEffects","iteration","test","AbstractValue","effects1","effects2","Widen","containsEffects","e2","_applyPropertiesToNewlyCreatedObjects","_emitPropertyAssignments","_emitLocalAssignments","cond","deriveAbstract","types","values","skipInvariant","widenEffects","evaluateWithAbstractConditional","condValue","consequentEffectsFunc","alternateEffectsFunc","Path","implies","impliesNot","withCondition","InfeasiblePathError","withInverseCondition","Join","joinEffects","$Realm","returnOrThrowCompletion","newlyCreatedObjects","desc","propertyBinding","m","gen","tvalFor","map","val","operationDescriptor","tval","phiNode","emitStatement","pbindings","refuseSerialization","path","pathNode","keyKey","StringValue","cc","composeWithSavedCompletion","JoinedNormalAndAbruptCompletions","pushPathConditionsLeadingToNormalCompletions","captureEffects","composeCompletions","bottomValue","__bottomValue","JoinedAbruptCompletions","jc","joinCondition","consequent","allPathsAreOfType","alternate","pushInverseAndRefine","pushAndRefine","NormalCompletion","alternatePC","getNormalPathConditions","disjunct","createFromLogicalOp","consequentPC","inverse","createFromUnaryOp","cpc","ijc","apc","CompletionType","pathCondToComposeWith","false","pathCond","getCapturedEffects","v","stopEffectCaptureAndUndoEffects","leadingComment","appendGenerator","realmModifiedBindings","realmModifiedProperties","realmCreatedObjects","ob","a","outputToConsole","method","args","emitConsoleLog","console","getString","res","next","shift","nextString","To","ToString","recordModifiedBinding","isDefinedInsidePureFn","root","destroyed","expressionLocation","hasLeaked","callReportObjectGetOwnProperties","reportObjectGetOwnProperties","callReportPropertyAccess","isWrite","reportPropertyAccess","recordModifiedProperty","includes","isNewObject","clone","AbstractJoinedDescriptor","descriptor1","descriptor2","PropertyDescriptor","InternalSlotDescriptor","AbstractObjectValue","recordNewObject","l","setModifiedMaps","rebuildObjectProperty","propertyValue","kind","absVal","isIntrinsic","rebuildNestedProperties","abstractValue","isTop","template","getTemplate","intrinsicNameGenerated","Properties","ThrowIfMightHaveBeenDeleted","reportIntrospectionError","createExecutionContext","nextContextLocation","setNextExecutionContextLocation","previousValue","instantRenderBailout","message","createErrorThrowCompletion","type","__IntrospectionError","ThrowCompletion","realmGenerator","evaluateForEffectsWithPriorEffects","priorEffects","priorEffect","evaluateWithIncreasedMaxStackDepth","increaseRemainingCallsBy","callStack","Error","throwIfNotConcreteObject","stack","_SafeGetDataPropertyValue","debuggerInstance","shouldStopForSeverity","handlePrepackError","debugReproManager","manager","sourcePaths","sourceFiles","getSourceFilePaths","sourceMaps","getSourceMapPaths","sourceFilePaths","msg","errorCode","location","loc_start","loc_end","end","line","column","log","warn","suppressDiagnostics","saveNameString","nameString","isNameStringUnique","getTemporalOperationEntryFromDerivedValue","temporalOperationEntry","getTemporalGeneratorEntriesReferencingArg","arg","saveTemporalGeneratorEntryArgs","temporalEntries"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type {\n  ArgModel,\n  ClassComponentMetadata,\n  ConsoleMethodTypes,\n  DebugReproManagerType,\n  DebugServerType,\n  Descriptor,\n  DisplayResult,\n  Intrinsics,\n  PathConditions,\n  PropertyBinding,\n  ReactHint,\n} from \"./types.js\";\nimport { RealmStatistics } from \"./statistics.js\";\nimport {\n  CompilerDiagnostic,\n  type ErrorHandlerResult,\n  type ErrorHandler,\n  FatalError,\n  InfeasiblePathError,\n} from \"./errors.js\";\nimport {\n  AbstractObjectValue,\n  AbstractValue,\n  ArrayValue,\n  BoundFunctionValue,\n  ConcreteValue,\n  ECMAScriptSourceFunctionValue,\n  FunctionValue,\n  NativeFunctionValue,\n  ObjectValue,\n  ProxyValue,\n  StringValue,\n  SymbolValue,\n  UndefinedValue,\n  Value,\n} from \"./values/index.js\";\nimport { TypesDomain, ValuesDomain } from \"./domains/index.js\";\nimport {\n  LexicalEnvironment,\n  Reference,\n  GlobalEnvironmentRecord,\n  FunctionEnvironmentRecord,\n  DeclarativeEnvironmentRecord,\n} from \"./environment.js\";\nimport type { Binding } from \"./environment.js\";\nimport { Construct } from \"./methods/index.js\";\nimport {\n  AbruptCompletion,\n  Completion,\n  JoinedAbruptCompletions,\n  JoinedNormalAndAbruptCompletions,\n  NormalCompletion,\n  SimpleNormalCompletion,\n  ThrowCompletion,\n} from \"./completions.js\";\nimport type { Compatibility, RealmOptions, ReactOutputTypes, InvariantModeTypes } from \"./options.js\";\nimport invariant from \"./invariant.js\";\nimport seedrandom from \"seedrandom\";\nimport { createOperationDescriptor, Generator, type TemporalOperationEntry } from \"./utils/generator.js\";\nimport { PreludeGenerator } from \"./utils/PreludeGenerator.js\";\nimport {\n  createPathConditions,\n  Environment,\n  Functions,\n  Join,\n  Path,\n  Properties,\n  To,\n  Utils,\n  Widen,\n} from \"./singletons.js\";\nimport type { ReactSymbolTypes } from \"./react/utils.js\";\nimport {\n  cloneDescriptor,\n  AbstractJoinedDescriptor,\n  InternalSlotDescriptor,\n  PropertyDescriptor,\n} from \"./descriptors.js\";\nimport type { BabelNode, BabelNodeSourceLocation, BabelNodeLVal } from \"@babel/types\";\nexport type BindingEntry = { hasLeaked: boolean, value: void | Value };\nexport type Bindings = Map<Binding, BindingEntry>;\nexport type EvaluationResult = Completion | Reference;\nexport type PropertyBindings = Map<PropertyBinding, void | Descriptor>;\n\nexport type CreatedObjects = Set<ObjectValue>;\n\nexport type SideEffectType = \"MODIFIED_BINDING\" | \"MODIFIED_PROPERTY\" | \"EXCEPTION_THROWN\" | \"MODIFIED_GLOBAL\";\n\nlet effects_uid = 0;\n\nexport class Effects {\n  constructor(\n    result: Completion,\n    generator: Generator,\n    bindings: Bindings,\n    propertyBindings: PropertyBindings,\n    createdObjects: CreatedObjects\n  ) {\n    this.result = result;\n    this.generator = generator;\n    this.modifiedBindings = bindings;\n    this.modifiedProperties = propertyBindings;\n    this.createdObjects = createdObjects;\n\n    this.canBeApplied = true;\n    this._id = effects_uid++;\n  }\n\n  result: Completion;\n  generator: Generator;\n  modifiedBindings: Bindings;\n  modifiedProperties: PropertyBindings;\n  createdObjects: CreatedObjects;\n  canBeApplied: boolean;\n  _id: number;\n\n  shallowCloneWithResult(result: Completion): Effects {\n    return new Effects(result, this.generator, this.modifiedBindings, this.modifiedProperties, this.createdObjects);\n  }\n\n  toDisplayString(): string {\n    return Utils.jsonToDisplayString(this, 10);\n  }\n\n  toDisplayJson(depth: number = 1): DisplayResult {\n    if (depth <= 0) return `Effects ${this._id}`;\n    return Utils.verboseToDisplayJson(this, depth);\n  }\n}\n\nexport class Tracer {\n  beginEvaluateForEffects(state: any): void {}\n  endEvaluateForEffects(state: any, effects: void | Effects): void {}\n  detourCall(\n    F: FunctionValue,\n    thisArgument: void | Value,\n    argumentsList: Array<Value>,\n    newTarget: void | ObjectValue,\n    performCall: () => Value\n  ): void | Value {}\n  beforeCall(\n    F: FunctionValue,\n    thisArgument: void | Value,\n    argumentsList: Array<Value>,\n    newTarget: void | ObjectValue\n  ): void {}\n  afterCall(\n    F: FunctionValue,\n    thisArgument: void | Value,\n    argumentsList: Array<Value>,\n    newTarget: void | ObjectValue,\n    result: void | Reference | Value | AbruptCompletion\n  ): void {}\n  beginOptimizingFunction(optimizedFunctionId: number, functionValue: FunctionValue): void {}\n  endOptimizingFunction(optimizedFunctionId: number): void {}\n}\n\nexport class ExecutionContext {\n  function: ?FunctionValue;\n  caller: ?ExecutionContext;\n  loc: ?BabelNodeSourceLocation;\n  ScriptOrModule: any;\n  realm: Realm;\n  variableEnvironment: LexicalEnvironment;\n  lexicalEnvironment: LexicalEnvironment;\n  isReadOnly: boolean;\n  isStrict: boolean;\n\n  setCaller(context: ExecutionContext): void {\n    this.caller = context;\n  }\n\n  setFunction(F: null | FunctionValue): void {\n    if (F instanceof ECMAScriptSourceFunctionValue) this.isStrict = F.$Strict;\n    this.function = F;\n  }\n\n  setLocation(loc: null | BabelNodeSourceLocation): void {\n    if (!loc) return;\n    this.loc = loc;\n  }\n\n  setRealm(realm: Realm): void {\n    this.realm = realm;\n  }\n\n  /*\n   Read-only envs disallow:\n   - creating bindings in their scope\n   - creating or modifying objects when they are current running context\n  */\n  setReadOnly(value: boolean): boolean {\n    let oldReadOnly = this.isReadOnly;\n    if (this.variableEnvironment) this.variableEnvironment.environmentRecord.isReadOnly = value;\n    if (this.lexicalEnvironment) this.lexicalEnvironment.environmentRecord.isReadOnly = value;\n    this.isReadOnly = value;\n    return oldReadOnly;\n  }\n\n  suspend(): void {\n    // TODO #712: suspend\n  }\n\n  resume(): Value {\n    // TODO #712: resume\n    return this.realm.intrinsics.undefined;\n  }\n}\n\nexport function construct_empty_effects(\n  realm: Realm,\n  c: Completion = new SimpleNormalCompletion(realm.intrinsics.empty)\n): Effects {\n  return new Effects(\n    c,\n    new Generator(realm, \"construct_empty_effects\", realm.pathConditions),\n    new Map(),\n    new Map(),\n    new Set()\n  );\n}\n\nexport class Realm {\n  constructor(opts: RealmOptions, statistics: RealmStatistics) {\n    this.statistics = statistics;\n    this.isReadOnly = false;\n    this.useAbstractInterpretation = opts.serialize === true || Array.isArray(opts.check);\n    this.ignoreLeakLogic = false;\n    this.isInPureTryStatement = false;\n    if (opts.mathRandomSeed !== undefined) {\n      this.mathRandomGenerator = seedrandom(opts.mathRandomSeed);\n    }\n    this.strictlyMonotonicDateNow = !!opts.strictlyMonotonicDateNow;\n\n    // 0 = disabled\n    this.abstractValueImpliesMax = opts.abstractValueImpliesMax !== undefined ? opts.abstractValueImpliesMax : 0;\n    this.abstractValueImpliesCounter = 0;\n    this.inSimplificationPath = false;\n\n    this.timeout = opts.timeout;\n    if (this.timeout !== undefined) {\n      // We'll call Date.now for every this.timeoutCounterThreshold'th AST node.\n      // The threshold is there to reduce the cost of the surprisingly expensive Date.now call.\n      this.timeoutCounter = this.timeoutCounterThreshold = 1024;\n    }\n\n    this.start = Date.now();\n    this.compatibility = opts.compatibility !== undefined ? opts.compatibility : \"browser\";\n    this.remainingCalls = opts.maxStackDepth || 112;\n    this.invariantLevel = opts.invariantLevel || 0;\n    this.invariantMode = opts.invariantMode || \"throw\";\n    this.emitConcreteModel = !!opts.emitConcreteModel;\n\n    this.$TemplateMap = [];\n    this.pathConditions = createPathConditions();\n\n    if (this.useAbstractInterpretation) {\n      this.preludeGenerator = new PreludeGenerator(opts.debugNames, opts.uniqueSuffix);\n      ObjectValue.setupTrackedPropertyAccessors(ObjectValue.trackedPropertyNames);\n      ObjectValue.setupTrackedPropertyAccessors(NativeFunctionValue.trackedPropertyNames);\n      ObjectValue.setupTrackedPropertyAccessors(ProxyValue.trackedPropertyNames);\n    }\n\n    this.collectedNestedOptimizedFunctionEffects = new Map();\n    this.tracers = [];\n\n    // These get initialized in construct_realm to avoid the dependency\n    this.intrinsics = ({}: any);\n    this.$GlobalObject = (({}: any): ObjectValue);\n    this.evaluators = (Object.create(null): any);\n    this.$GlobalEnv = ((undefined: any): LexicalEnvironment);\n\n    this.derivedIds = new Map();\n    this.temporalEntryArgToEntries = new Map();\n    this.temporalEntryCounter = 0;\n\n    this.instantRender = {\n      enabled: opts.instantRender || false,\n    };\n\n    this.react = {\n      abstractHints: new WeakMap(),\n      activeReconciler: undefined,\n      classComponentMetadata: new Map(),\n      currentOwner: undefined,\n      defaultPropsHelper: undefined,\n      emptyArray: undefined,\n      emptyObject: undefined,\n      enabled: opts.reactEnabled || false,\n      failOnUnsupportedSideEffects: opts.reactFailOnUnsupportedSideEffects === false ? false : true,\n      hoistableFunctions: new WeakMap(),\n      hoistableReactElements: new WeakMap(),\n      noopFunction: undefined,\n      optimizeNestedFunctions: opts.reactOptimizeNestedFunctions || false,\n      output: opts.reactOutput || \"create-element\",\n      propsWithNoPartialKeyOrRef: new WeakSet(),\n      reactElements: new WeakMap(),\n      reactElementStringTypeReferences: new Map(),\n      reactProps: new WeakSet(),\n      symbols: new Map(),\n      usedReactElementKeys: new Set(),\n      verbose: opts.reactVerbose || false,\n    };\n\n    this.reportSideEffectCallbacks = new Set();\n\n    this.alreadyDescribedLocations = new WeakMap();\n    this.stripFlow = opts.stripFlow || false;\n\n    this.fbLibraries = {\n      other: new Map(),\n      react: undefined,\n      reactDom: undefined,\n      reactDomServer: undefined,\n      reactNative: undefined,\n      reactRelay: undefined,\n    };\n\n    this.errorHandler = opts.errorHandler;\n\n    this.globalSymbolRegistry = [];\n    this.activeLexicalEnvironments = new Set();\n    this._abstractValuesDefined = new Set(); // A set of nameStrings to ensure abstract values have unique names\n    this.debugNames = opts.debugNames;\n    this._checkedObjectIds = new Map();\n    this.optimizedFunctions = new Map();\n    this.arrayNestedOptimizedFunctionsEnabled =\n      opts.arrayNestedOptimizedFunctionsEnabled || opts.instantRender || false;\n  }\n\n  statistics: RealmStatistics;\n  start: number;\n  isReadOnly: boolean;\n  isStrict: boolean;\n  useAbstractInterpretation: boolean;\n  debugNames: void | boolean;\n  isInPureTryStatement: boolean; // TODO(1264): Remove this once we implement proper exception handling in abstract calls.\n  timeout: void | number;\n  mathRandomGenerator: void | (() => number);\n  strictlyMonotonicDateNow: boolean;\n  remainingCalls: number;\n  invariantLevel: number;\n  invariantMode: InvariantModeTypes;\n  ignoreLeakLogic: boolean;\n  emitConcreteModel: boolean;\n\n  abstractValueImpliesMax: number;\n  abstractValueImpliesCounter: number;\n  impliesCounterOverflowed: boolean;\n  inSimplificationPath: boolean;\n\n  modifiedBindings: void | Bindings;\n  modifiedProperties: void | PropertyBindings;\n  createdObjects: void | CreatedObjects;\n  createdObjectsTrackedForLeaks: void | CreatedObjects;\n  reportObjectGetOwnProperties: void | ((ObjectValue | AbstractObjectValue) => void);\n  reportSideEffectCallbacks: Set<\n    (sideEffectType: SideEffectType, binding: void | Binding | PropertyBinding, expressionLocation: any) => void\n  >;\n  reportPropertyAccess: void | ((PropertyBinding, boolean) => void);\n  savedCompletion: void | JoinedNormalAndAbruptCompletions;\n\n  activeLexicalEnvironments: Set<LexicalEnvironment>;\n\n  // A set of abstract conditions that are known to be true in the current execution path.\n  // For example, the abstract condition of an if statement is known to be true inside its true branch.\n  pathConditions: PathConditions;\n\n  currentLocation: ?BabelNodeSourceLocation;\n  nextContextLocation: ?BabelNodeSourceLocation;\n  contextStack: Array<ExecutionContext> = [];\n  $GlobalEnv: LexicalEnvironment;\n  intrinsics: Intrinsics;\n\n  derivedIds: Map<string, TemporalOperationEntry>;\n  temporalEntryArgToEntries: Map<Value, Set<TemporalOperationEntry>>;\n  temporalEntryCounter: number;\n\n  instantRender: {\n    enabled: boolean,\n  };\n  react: {\n    // reactHints are generated to help improve the effeciency of the React reconciler when\n    // operating on a tree of React components. We can use reactHint to mark AbstractValues\n    // with extra data that helps us traverse through the tree that would otherwise not be possible\n    // (for example, when we use Relay's React containers with \"fb-www\" – which are AbstractObjectValues,\n    // we need to know what React component was passed to this AbstractObjectValue so we can visit it next)\n    abstractHints: WeakMap<AbstractValue | ObjectValue, ReactHint>,\n    activeReconciler: any, // inentionally \"any\", importing the React reconciler class increases Flow's cylic count\n    classComponentMetadata: Map<ECMAScriptSourceFunctionValue | BoundFunctionValue, ClassComponentMetadata>,\n    currentOwner?: ObjectValue,\n    defaultPropsHelper?: ECMAScriptSourceFunctionValue,\n    emptyArray: void | ArrayValue,\n    emptyObject: void | ObjectValue,\n    enabled: boolean,\n    failOnUnsupportedSideEffects: boolean,\n    hoistableFunctions: WeakMap<FunctionValue, boolean>,\n    hoistableReactElements: WeakMap<ObjectValue, boolean>,\n    noopFunction: void | ECMAScriptSourceFunctionValue,\n    optimizeNestedFunctions: boolean,\n    output?: ReactOutputTypes,\n    propsWithNoPartialKeyOrRef: WeakSet<ObjectValue | AbstractObjectValue>,\n    reactElements: WeakMap<ObjectValue, { createdDuringReconcilation: boolean, firstRenderOnly: boolean }>,\n    reactElementStringTypeReferences: Map<string, AbstractValue>,\n    reactProps: WeakSet<ObjectValue>,\n    symbols: Map<ReactSymbolTypes, SymbolValue>,\n    usedReactElementKeys: Set<string>,\n    verbose: boolean,\n  };\n  alreadyDescribedLocations: WeakMap<FunctionValue | BabelNodeSourceLocation, string | void>;\n  stripFlow: boolean;\n\n  fbLibraries: {\n    other: Map<string, AbstractValue>,\n    react: void | ObjectValue,\n    reactDom: void | ObjectValue,\n    reactDomServer: void | ObjectValue,\n    reactNative: void | ObjectValue,\n    reactRelay: void | ObjectValue,\n  };\n\n  $GlobalObject: ObjectValue | AbstractObjectValue;\n  compatibility: Compatibility;\n\n  $TemplateMap: Array<{ $Strings: Array<string>, $Array: ObjectValue }>;\n\n  generator: void | Generator;\n  preludeGenerator: void | PreludeGenerator;\n  timeoutCounter: number;\n  timeoutCounterThreshold: number;\n  evaluators: {\n    [key: string]: (\n      ast: BabelNode,\n      strictCode: boolean,\n      env: LexicalEnvironment,\n      realm: Realm,\n      metadata?: any\n    ) => Value | Reference,\n  };\n  simplifyAndRefineAbstractValue: AbstractValue => Value;\n  simplifyAndRefineAbstractCondition: AbstractValue => Value;\n\n  collectedNestedOptimizedFunctionEffects: Map<ECMAScriptSourceFunctionValue, Effects>;\n  tracers: Array<Tracer>;\n\n  MOBILE_JSC_VERSION = \"jsc-600-1-4-17\";\n\n  errorHandler: ?ErrorHandler;\n  suppressDiagnostics = false;\n  objectCount = 0;\n  symbolCount = 867501803871088;\n  // Unique tag for identifying function body ast node. It is neeeded\n  // instead of ast node itself because we may perform ast tree deep clone\n  // during serialization which changes the ast identity.\n  functionBodyUniqueTagSeed = 1;\n\n  globalSymbolRegistry: Array<{ $Key: string, $Symbol: SymbolValue }>;\n\n  debuggerInstance: DebugServerType | void;\n  debugReproManager: DebugReproManagerType | void;\n\n  nextGeneratorId: number = 0;\n  _abstractValuesDefined: Set<string>;\n  _checkedObjectIds: Map<ObjectValue | AbstractObjectValue, number>;\n\n  optimizedFunctions: Map<FunctionValue | AbstractValue, ArgModel | void>;\n  arrayNestedOptimizedFunctionsEnabled: boolean;\n  currentOptimizedFunction: FunctionValue | void;\n\n  eagerlyRequireModuleDependencies: void | boolean;\n\n  // to force flow to type the annotations\n  isCompatibleWith(compatibility: Compatibility): boolean {\n    return compatibility === this.compatibility;\n  }\n\n  // Checks if there is a let binding at global scope with the given name\n  // returning it if so\n  getGlobalLetBinding(key: string): void | Value {\n    let globrec = this.$GlobalEnv.environmentRecord;\n    // GlobalEnv should have a GlobalEnvironmentRecord\n    invariant(globrec instanceof GlobalEnvironmentRecord);\n    let dclrec = globrec.$DeclarativeRecord;\n\n    try {\n      return dclrec.HasBinding(key) ? dclrec.GetBindingValue(key, false) : undefined;\n    } catch (e) {\n      if (e instanceof FatalError) return undefined;\n      throw e;\n    }\n  }\n\n  /*\n   Read only realms disallow:\n   - using console.log\n   - creating bindings in any existing scopes\n   - modifying object properties in any existing scopes\n   Setting a realm read-only sets all contained environments to read-only, but\n   all new environments (e.g. new ExecutionContexts) will be writeable.\n   */\n  setReadOnly(readOnlyValue: boolean): boolean {\n    let oldReadOnly = this.isReadOnly;\n    this.isReadOnly = readOnlyValue;\n    this.$GlobalEnv.environmentRecord.isReadOnly = readOnlyValue;\n    this.contextStack.forEach(ctx => {\n      ctx.setReadOnly(readOnlyValue);\n    });\n    return oldReadOnly;\n  }\n\n  testTimeout(): void {\n    let timeout = this.timeout;\n    if (timeout !== undefined && !--this.timeoutCounter) {\n      this.timeoutCounter = this.timeoutCounterThreshold;\n      let total = Date.now() - this.start;\n      if (total > timeout) {\n        let error = new CompilerDiagnostic(\n          `total time has exceeded the timeout time: ${timeout}`,\n          this.currentLocation,\n          \"PP0036\",\n          \"FatalError\"\n        );\n        this.handleError(error);\n        throw new FatalError(\"Timed out\");\n      }\n    }\n  }\n\n  hasRunningContext(): boolean {\n    return this.contextStack.length !== 0;\n  }\n\n  getRunningContext(): ExecutionContext {\n    let context = this.contextStack[this.contextStack.length - 1];\n    invariant(context, \"There's no running execution context\");\n    return context;\n  }\n\n  clearBlockBindings(modifiedBindings: void | Bindings, environmentRecord: DeclarativeEnvironmentRecord): void {\n    if (modifiedBindings === undefined) return;\n    for (let b of modifiedBindings.keys()) {\n      if (b.mightHaveBeenCaptured) continue;\n      if (environmentRecord.bindings[b.name] && environmentRecord.bindings[b.name] === b) modifiedBindings.delete(b);\n    }\n  }\n\n  // Call when a scope falls out of scope and should be destroyed.\n  // Clears the Bindings corresponding to the disappearing Scope from ModifiedBindings\n  onDestroyScope(lexicalEnvironment: LexicalEnvironment): void {\n    invariant(this.activeLexicalEnvironments.has(lexicalEnvironment));\n    let modifiedBindings = this.modifiedBindings;\n    if (modifiedBindings) {\n      // Don't undo things to global scope because it's needed past its destruction point (for serialization)\n      let environmentRecord = lexicalEnvironment.environmentRecord;\n      if (environmentRecord instanceof DeclarativeEnvironmentRecord) {\n        this.clearBlockBindings(modifiedBindings, environmentRecord);\n      }\n    }\n\n    // Ensures if we call onDestroyScope too early, there will be a failure.\n    this.activeLexicalEnvironments.delete(lexicalEnvironment);\n    lexicalEnvironment.destroy();\n  }\n\n  startCall() {\n    if (this.remainingCalls === 0) {\n      let error = new CompilerDiagnostic(\"Maximum stack depth exceeded\", this.currentLocation, \"PP0045\", \"FatalError\");\n      this.handleError(error);\n      throw new FatalError();\n    }\n    this.remainingCalls--;\n  }\n\n  endCall() {\n    this.remainingCalls++;\n  }\n\n  pushContext(context: ExecutionContext): void {\n    this.contextStack.push(context);\n  }\n\n  markVisibleLocalBindingsAsPotentiallyCaptured(): void {\n    let context = this.getRunningContext();\n    if (context.function === undefined) return;\n    let lexEnv = context.lexicalEnvironment;\n    while (lexEnv != null) {\n      let envRec = lexEnv.environmentRecord;\n      if (envRec instanceof DeclarativeEnvironmentRecord) {\n        let bindings = envRec.bindings;\n        for (let name in bindings) {\n          let binding = bindings[name];\n          binding.mightHaveBeenCaptured = true;\n        }\n      }\n      lexEnv = lexEnv.parent;\n    }\n  }\n\n  clearFunctionBindings(modifiedBindings: void | Bindings, funcVal: FunctionValue): void {\n    if (modifiedBindings === undefined) return;\n    for (let b of modifiedBindings.keys()) {\n      if (b.mightHaveBeenCaptured) continue;\n      if (b.environment instanceof FunctionEnvironmentRecord && b.environment.$FunctionObject === funcVal)\n        modifiedBindings.delete(b);\n    }\n  }\n\n  popContext(context: ExecutionContext): void {\n    let funcVal = context.function;\n    if (funcVal) {\n      this.clearFunctionBindings(this.modifiedBindings, funcVal);\n    }\n    let c = this.contextStack.pop();\n    invariant(c === context);\n  }\n\n  wrapInGlobalEnv<T>(callback: () => T): T {\n    let context = new ExecutionContext();\n    context.isStrict = this.isStrict;\n    context.lexicalEnvironment = this.$GlobalEnv;\n    context.variableEnvironment = this.$GlobalEnv;\n    context.realm = this;\n\n    this.pushContext(context);\n    try {\n      return callback();\n    } finally {\n      this.popContext(context);\n    }\n  }\n\n  assignToGlobal(name: BabelNodeLVal, value: Value): void {\n    this.wrapInGlobalEnv(() => this.$GlobalEnv.assignToGlobal(name, value));\n  }\n\n  deleteGlobalBinding(name: string): void {\n    this.$GlobalEnv.environmentRecord.DeleteBinding(name);\n  }\n\n  neverCheckProperty(object: ObjectValue | AbstractObjectValue, P: string): boolean {\n    return (\n      P.startsWith(\"__\") ||\n      (object === this.$GlobalObject && P === \"global\") ||\n      (object.intrinsicName !== undefined && object.intrinsicName.startsWith(\"__\"))\n    );\n  }\n\n  _getCheckedBindings(): ObjectValue {\n    let globalObject = this.$GlobalObject;\n    invariant(globalObject instanceof ObjectValue);\n    let binding = globalObject.properties.get(\"__checkedBindings\");\n    invariant(binding !== undefined);\n    let checkedBindingsObject = binding.descriptor && binding.descriptor.throwIfNotConcrete(this).value;\n    invariant(checkedBindingsObject instanceof ObjectValue);\n    return checkedBindingsObject;\n  }\n\n  markPropertyAsChecked(object: ObjectValue | AbstractObjectValue, P: string): void {\n    invariant(!this.neverCheckProperty(object, P));\n    let objectId = this._checkedObjectIds.get(object);\n    if (objectId === undefined) this._checkedObjectIds.set(object, (objectId = this._checkedObjectIds.size));\n    let id = `__propertyHasBeenChecked__${objectId}:${P}`;\n    let checkedBindings = this._getCheckedBindings();\n    checkedBindings.$Set(id, this.intrinsics.true, checkedBindings);\n  }\n\n  hasBindingBeenChecked(object: ObjectValue | AbstractObjectValue, P: string): void | boolean {\n    if (this.neverCheckProperty(object, P)) return true;\n    let objectId = this._checkedObjectIds.get(object);\n    if (objectId === undefined) return false;\n    let id = `__propertyHasBeenChecked__${objectId}:${P}`;\n    let binding = this._getCheckedBindings().properties.get(id);\n    if (binding === undefined) return false;\n    let value = binding.descriptor && binding.descriptor.throwIfNotConcrete(this).value;\n    return value instanceof Value && !value.mightNotBeTrue();\n  }\n\n  // Evaluate a context as if it won't have any side-effects outside of any objects\n  // that it created itself. This promises that any abstract functions inside of it\n  // also won't have effects on any objects or bindings that weren't created in this\n  // call.\n  evaluatePure<T>(\n    f: () => T,\n    bubbleSideEffectReports: boolean,\n    reportSideEffectFunc:\n      | null\n      | ((\n          sideEffectType: SideEffectType,\n          binding: void | Binding | PropertyBinding,\n          location: ?BabelNodeSourceLocation\n        ) => void)\n  ): T {\n    let saved_createdObjectsTrackedForLeaks = this.createdObjectsTrackedForLeaks;\n    let saved_reportSideEffectCallbacks;\n    // Track all objects (including function closures) created during\n    // this call. This will be used to make the assumption that every\n    // *other* object is unchanged (pure). These objects are marked\n    // as leaked if they're passed to abstract functions.\n    this.createdObjectsTrackedForLeaks = new Set();\n    if (reportSideEffectFunc !== null) {\n      if (!bubbleSideEffectReports) {\n        saved_reportSideEffectCallbacks = this.reportSideEffectCallbacks;\n        this.reportSideEffectCallbacks = new Set();\n      }\n      this.reportSideEffectCallbacks.add(reportSideEffectFunc);\n    }\n    try {\n      return f();\n    } finally {\n      if (saved_createdObjectsTrackedForLeaks === undefined) {\n        this.createdObjectsTrackedForLeaks = undefined;\n      } else {\n        // Add any created objects from the child evaluatePure's tracked objects set to the\n        // current tracked objects set.\n        if (this.createdObjectsTrackedForLeaks !== undefined) {\n          for (let obj of this.createdObjectsTrackedForLeaks) {\n            saved_createdObjectsTrackedForLeaks.add(obj);\n          }\n        }\n        this.createdObjectsTrackedForLeaks = saved_createdObjectsTrackedForLeaks;\n      }\n\n      if (reportSideEffectFunc !== null) {\n        if (!bubbleSideEffectReports && saved_reportSideEffectCallbacks !== undefined) {\n          this.reportSideEffectCallbacks = saved_reportSideEffectCallbacks;\n        }\n        this.reportSideEffectCallbacks.delete(reportSideEffectFunc);\n      }\n    }\n  }\n\n  isInPureScope(): boolean {\n    return !!this.createdObjectsTrackedForLeaks;\n  }\n\n  evaluateWithoutLeakLogic(f: () => Value): Value {\n    invariant(!this.ignoreLeakLogic, \"Nesting evaluateWithoutLeakLogic() calls is not supported.\");\n    this.ignoreLeakLogic = true;\n    try {\n      return f();\n    } finally {\n      this.ignoreLeakLogic = false;\n    }\n  }\n\n  // Evaluate some code that might generate temporal values knowing that it might end in an abrupt\n  // completion. We only need to support ThrowCompletion for now but this can be expanded to support other\n  // abrupt completions.\n  evaluateWithPossibleThrowCompletion(f: () => Value, thrownTypes: TypesDomain, thrownValues: ValuesDomain): Value {\n    // The cases when we need this are only when we might invoke unknown code such as abstract\n    // funtions, getters, custom coercion etc. It is possible we can use this in other cases\n    // where something might throw a built-in error but can never issue arbitrary code such as\n    // calling something that might not be a function. For now we only use it in pure functions.\n    invariant(this.isInPureScope(), \"only abstract abrupt completion in pure functions\");\n\n    // TODO(1264): We should create a new generator for this scope and wrap it in a try/catch.\n    // We could use the outcome of that as the join condition for a JoinedNormalAndAbruptCompletions.\n    // We should then compose that with the saved completion and move on to the normal route.\n    // Currently we just issue a recoverable error instead if this might matter.\n    let value = f();\n    if (this.isInPureTryStatement) {\n      let diag = new CompilerDiagnostic(\n        \"Possible throw inside try/catch is not yet supported\",\n        this.currentLocation,\n        \"PP0021\",\n        \"RecoverableError\"\n      );\n      if (this.handleError(diag) !== \"Recover\") throw new FatalError();\n    }\n    return value;\n  }\n\n  // Evaluate the given ast in a sandbox and return the evaluation results\n  // in the form of a completion, a code generator, a map of changed variable\n  // bindings and a map of changed property bindings.\n  evaluateNodeForEffects(\n    ast: BabelNode,\n    strictCode: boolean,\n    env: LexicalEnvironment,\n    state?: any,\n    generatorName?: string = \"evaluateNodeForEffects\"\n  ): Effects {\n    return this.evaluateForEffects(() => env.evaluateCompletionDeref(ast, strictCode), state, generatorName);\n  }\n\n  evaluateForEffectsInGlobalEnv(\n    func: () => Value,\n    state?: any,\n    generatorName?: string = \"evaluateForEffectsInGlobalEnv\"\n  ): Effects {\n    return this.wrapInGlobalEnv(() => this.evaluateForEffects(func, state, generatorName));\n  }\n\n  // NB: does not apply generators because there's no way to cleanly revert them.\n  // func should not return undefined\n  withEffectsAppliedInGlobalEnv<T>(func: Effects => T, effects: Effects): T {\n    let result: T;\n    this.evaluateForEffectsInGlobalEnv(() => {\n      try {\n        this.applyEffects(effects, \"\", false);\n        result = func(effects);\n        return this.intrinsics.undefined;\n      } finally {\n        this.restoreBindings(effects.modifiedBindings);\n        this.restoreProperties(effects.modifiedProperties);\n        invariant(!effects.canBeApplied);\n        effects.canBeApplied = true;\n      }\n    });\n    invariant(result !== undefined, \"If we get here, func must have returned undefined.\");\n    return result;\n  }\n\n  withNewOptimizedFunction<T>(func: () => T, optimizedFunction: FunctionValue): T {\n    let result: T;\n    let previousOptimizedFunction = this.currentOptimizedFunction;\n    this.currentOptimizedFunction = optimizedFunction;\n    try {\n      result = func();\n    } finally {\n      this.currentOptimizedFunction = previousOptimizedFunction;\n    }\n    return result;\n  }\n\n  evaluateNodeForEffectsInGlobalEnv(node: BabelNode, state?: any, generatorName?: string): Effects {\n    return this.wrapInGlobalEnv(() => this.evaluateNodeForEffects(node, false, this.$GlobalEnv, state, generatorName));\n  }\n\n  // Use this to evaluate code for internal purposes, so that the tracked state does not get polluted\n  evaluateWithoutEffects<T>(f: () => T): T {\n    // Save old state and set up undefined state\n    let savedGenerator = this.generator;\n    let savedBindings = this.modifiedBindings;\n    let savedProperties = this.modifiedProperties;\n    let savedCreatedObjects = this.createdObjects;\n    let saved_completion = this.savedCompletion;\n    try {\n      this.generator = new Generator(this, \"evaluateIgnoringEffects\", this.pathConditions);\n      this.modifiedBindings = undefined;\n      this.modifiedProperties = undefined;\n      this.createdObjects = undefined;\n      this.savedCompletion = undefined;\n      return f();\n    } finally {\n      this.generator = savedGenerator;\n      this.modifiedBindings = savedBindings;\n      this.modifiedProperties = savedProperties;\n      this.createdObjects = savedCreatedObjects;\n      this.savedCompletion = saved_completion;\n    }\n  }\n\n  evaluateForEffects(f: () => Completion | Value, state: any, generatorName: string): Effects {\n    // Save old state and set up empty state\n    let [savedBindings, savedProperties] = this.getAndResetModifiedMaps();\n    let saved_generator = this.generator;\n    let saved_createdObjects = this.createdObjects;\n    let saved_completion = this.savedCompletion;\n    let saved_abstractValuesDefined = this._abstractValuesDefined;\n    this.generator = new Generator(this, generatorName, this.pathConditions);\n    this.createdObjects = new Set();\n    this.savedCompletion = undefined; // while in this call, we only explore the normal path.\n    this._abstractValuesDefined = new Set(saved_abstractValuesDefined);\n\n    let result;\n    try {\n      for (let t1 of this.tracers) t1.beginEvaluateForEffects(state);\n\n      let c;\n      try {\n        try {\n          c = f();\n          if (c instanceof Reference) c = Environment.GetValue(this, c);\n          else if (c instanceof SimpleNormalCompletion) c = c.value;\n        } catch (e) {\n          if (e instanceof AbruptCompletion) c = e;\n          else throw e;\n        }\n        // This is a join point for any normal completions inside realm.savedCompletion\n        c = Functions.incorporateSavedCompletion(this, c);\n        invariant(c !== undefined);\n\n        invariant(this.generator !== undefined);\n        invariant(this.modifiedBindings !== undefined);\n        invariant(this.modifiedProperties !== undefined);\n        invariant(this.createdObjects !== undefined);\n        let astGenerator = this.generator;\n        let astBindings = this.modifiedBindings;\n        let astProperties = this.modifiedProperties;\n        let astCreatedObjects = this.createdObjects;\n\n        /* TODO #1615: The following invariant should hold.\n\n        // Check invariant that modified bindings to not refer to environment record belonging to\n        // newly created closure objects.\n        for (let binding of astBindings.keys())\n          if (binding.environment instanceof FunctionEnvironmentRecord)\n            invariant(!astCreatedObjects.has(binding.environment.$FunctionObject));\n        */\n\n        // Return the captured state changes and evaluation result\n        if (c instanceof Value) c = new SimpleNormalCompletion(c);\n        result = new Effects(c, astGenerator, astBindings, astProperties, astCreatedObjects);\n        return result;\n      } finally {\n        // Roll back the state changes\n        if (result !== undefined) {\n          this.restoreBindings(result.modifiedBindings);\n          this.restoreProperties(result.modifiedProperties);\n        } else {\n          this.restoreBindings(this.modifiedBindings);\n          this.restoreProperties(this.modifiedProperties);\n          let completion = this.savedCompletion;\n          while (completion !== undefined) {\n            const { savedEffects } = completion;\n            if (savedEffects !== undefined) {\n              this.restoreBindings(savedEffects.modifiedBindings);\n              this.restoreProperties(savedEffects.modifiedProperties);\n            }\n            completion = completion.composedWith;\n          }\n        }\n        this.generator = saved_generator;\n        this.modifiedBindings = savedBindings;\n        this.modifiedProperties = savedProperties;\n        this.createdObjects = saved_createdObjects;\n        this.savedCompletion = saved_completion;\n        this._abstractValuesDefined = saved_abstractValuesDefined;\n      }\n    } finally {\n      for (let t2 of this.tracers) t2.endEvaluateForEffects(state, result);\n    }\n  }\n\n  evaluateWithUndo(f: () => Value, defaultValue: Value = this.intrinsics.undefined): Value {\n    if (!this.useAbstractInterpretation) return f();\n    let oldErrorHandler = this.errorHandler;\n    this.errorHandler = d => {\n      if (d.severity === \"Information\" || d.severity === \"Warning\") return \"Recover\";\n      return \"Fail\";\n    };\n    try {\n      let effects = this.evaluateForEffects(\n        () => {\n          try {\n            return f();\n          } catch (e) {\n            if (e instanceof Completion) {\n              return defaultValue;\n            } else if (e instanceof FatalError) {\n              return defaultValue;\n            } else {\n              throw e;\n            }\n          }\n        },\n        undefined,\n        \"evaluateWithUndo\"\n      );\n      return effects.result instanceof SimpleNormalCompletion ? effects.result.value : defaultValue;\n    } finally {\n      this.errorHandler = oldErrorHandler;\n    }\n  }\n\n  evaluateWithUndoForDiagnostic(f: () => Value): CompilerDiagnostic | Value {\n    if (!this.useAbstractInterpretation) return f();\n    let savedHandler = this.errorHandler;\n    let diagnostic;\n    try {\n      this.errorHandler = d => {\n        diagnostic = d;\n        return \"Fail\";\n      };\n      let effects = this.evaluateForEffects(f, undefined, \"evaluateWithUndoForDiagnostic\");\n      this.applyEffects(effects);\n      let resultVal = effects.result;\n      if (resultVal instanceof AbruptCompletion) throw resultVal;\n      return resultVal.value;\n    } catch (e) {\n      if (diagnostic !== undefined) return diagnostic;\n      throw e;\n    } finally {\n      this.errorHandler = savedHandler;\n    }\n  }\n\n  evaluateForFixpointEffects(iteration: () => [Value, EvaluationResult]): void | [Effects, Effects, AbstractValue] {\n    try {\n      let test;\n      let f = () => {\n        let result;\n        [test, result] = iteration();\n        if (!(test instanceof AbstractValue)) throw new FatalError(\"loop terminates before fixed point\");\n        invariant(result instanceof Completion);\n        return result;\n      };\n      let effects1 = this.evaluateForEffects(f, undefined, \"evaluateForFixpointEffects/1\");\n      while (true) {\n        this.restoreBindings(effects1.modifiedBindings);\n        this.restoreProperties(effects1.modifiedProperties);\n        let effects2 = this.evaluateForEffects(f, undefined, \"evaluateForFixpointEffects/2\");\n        this.restoreBindings(effects1.modifiedBindings);\n        this.restoreProperties(effects1.modifiedProperties);\n        if (Widen.containsEffects(effects1, effects2)) {\n          // effects1 includes every value present in effects2, so doing another iteration using effects2 will not\n          // result in any more values being added to abstract domains and hence a fixpoint has been reached.\n          // Generate code using effects2 because its expressions have not been widened away.\n          const e2 = effects2;\n          this._applyPropertiesToNewlyCreatedObjects(e2.modifiedProperties, e2.createdObjects);\n          this._emitPropertyAssignments(e2.generator, e2.modifiedProperties, e2.createdObjects);\n          this._emitLocalAssignments(e2.generator, e2.modifiedBindings, e2.createdObjects);\n          invariant(test instanceof AbstractValue);\n          let cond = e2.generator.deriveAbstract(\n            test.types,\n            test.values,\n            [test],\n            createOperationDescriptor(\"SINGLE_ARG\"),\n            { skipInvariant: true }\n          );\n          return [effects1, effects2, cond];\n        }\n        effects1 = Widen.widenEffects(this, effects1, effects2);\n      }\n    } catch (e) {\n      if (e instanceof FatalError) return undefined;\n      throw e;\n    }\n  }\n\n  evaluateWithAbstractConditional(\n    condValue: Value,\n    consequentEffectsFunc: () => Effects,\n    alternateEffectsFunc: () => Effects\n  ): Value {\n    let effects;\n    if (Path.implies(condValue)) {\n      effects = consequentEffectsFunc();\n    } else if (Path.impliesNot(condValue)) {\n      effects = alternateEffectsFunc();\n    } else {\n      // Join effects\n      let effects1;\n      try {\n        effects1 = Path.withCondition(condValue, consequentEffectsFunc);\n      } catch (e) {\n        if (!(e instanceof InfeasiblePathError)) throw e;\n      }\n\n      let effects2;\n      try {\n        effects2 = Path.withInverseCondition(condValue, alternateEffectsFunc);\n      } catch (e) {\n        if (!(e instanceof InfeasiblePathError)) throw e;\n      }\n\n      if (effects1 === undefined || effects2 === undefined) {\n        if (effects1 === undefined && effects2 === undefined) throw new InfeasiblePathError();\n        effects = effects1 || effects2;\n        invariant(effects !== undefined);\n      } else {\n        // Join the effects, creating an abstract view of what happened, regardless\n        // of the actual value of condValue.\n        effects = Join.joinEffects(condValue, effects1, effects2);\n      }\n    }\n    this.applyEffects(effects);\n\n    return condValue.$Realm.returnOrThrowCompletion(effects.result);\n  }\n\n  _applyPropertiesToNewlyCreatedObjects(\n    modifiedProperties: void | PropertyBindings,\n    newlyCreatedObjects: CreatedObjects\n  ): void {\n    if (modifiedProperties === undefined) return;\n    modifiedProperties.forEach((desc, propertyBinding, m) => {\n      if (newlyCreatedObjects.has(propertyBinding.object)) {\n        propertyBinding.descriptor = desc;\n      }\n    });\n  }\n\n  // populate the loop body generator with assignments that will update the phiNodes\n  _emitLocalAssignments(gen: Generator, bindings: Bindings, newlyCreatedObjects: CreatedObjects): void {\n    let tvalFor: Map<any, AbstractValue> = new Map();\n    bindings.forEach((binding, key, map) => {\n      let val = binding.value;\n      if (val instanceof AbstractValue) {\n        invariant(val.operationDescriptor !== undefined);\n        let tval = gen.deriveAbstract(val.types, val.values, [val], createOperationDescriptor(\"SINGLE_ARG\"));\n        tvalFor.set(key, tval);\n      }\n    });\n    bindings.forEach((binding, key, map) => {\n      let val = binding.value;\n      if (val instanceof AbstractValue) {\n        let phiNode = key.phiNode;\n        let tval = tvalFor.get(key);\n        invariant(tval !== undefined);\n        gen.emitStatement([tval], createOperationDescriptor(\"LOCAL_ASSIGNMENT\", { value: phiNode }));\n      }\n\n      if (val instanceof ObjectValue && newlyCreatedObjects.has(val)) {\n        let phiNode = key.phiNode;\n        gen.emitStatement([val], createOperationDescriptor(\"LOCAL_ASSIGNMENT\", { value: phiNode }));\n      }\n    });\n  }\n\n  // populate the loop body generator with assignments that will update properties modified inside the loop\n  _emitPropertyAssignments(gen: Generator, pbindings: PropertyBindings, newlyCreatedObjects: CreatedObjects): void {\n    let tvalFor: Map<any, AbstractValue> = new Map();\n    pbindings.forEach((val, key, map) => {\n      if (newlyCreatedObjects.has(key.object) || key.object.refuseSerialization) {\n        return;\n      }\n      let value = val && val.throwIfNotConcrete(this).value;\n      if (value instanceof AbstractValue) {\n        invariant(value.operationDescriptor !== undefined);\n        let tval = gen.deriveAbstract(\n          value.types,\n          value.values,\n          [key.object, value],\n          createOperationDescriptor(\"LOGICAL_PROPERTY_ASSIGNMENT\", { propertyBinding: key, value }),\n          {\n            skipInvariant: true,\n          }\n        );\n        tvalFor.set(key, tval);\n      }\n    });\n    pbindings.forEach((val, key, map) => {\n      if (newlyCreatedObjects.has(key.object) || key.object.refuseSerialization) {\n        return;\n      }\n      let path = key.pathNode;\n      let tval = tvalFor.get(key);\n      invariant(val !== undefined);\n      let value = val.throwIfNotConcrete(this).value;\n      invariant(value instanceof Value);\n      let keyKey = key.key;\n      if (typeof keyKey === \"string\") {\n        if (path !== undefined) {\n          gen.emitStatement(\n            [key.object, tval || value, this.intrinsics.empty, new StringValue(this, keyKey)],\n            createOperationDescriptor(\"CONDITIONAL_PROPERTY_ASSIGNMENT\", { path, value })\n          );\n        } else {\n          // RH value was not widened, so it must have been a constant. We don't need to assign that inside the loop.\n          // Note, however, that if the LH side is a property of an intrinsic object, then an assignment will\n          // have been emitted to the generator.\n        }\n      } else {\n        // TODO: What if keyKey is undefined?\n        invariant(keyKey instanceof Value);\n        gen.emitStatement(\n          [key.object, keyKey, tval || value, this.intrinsics.empty],\n          createOperationDescriptor(\"PROPERTY_ASSIGNMENT\", { path })\n        );\n      }\n    });\n  }\n\n  returnOrThrowCompletion(completion: Completion | Value): Value {\n    if (completion instanceof Value) completion = new SimpleNormalCompletion(completion);\n    if (completion instanceof AbruptCompletion) {\n      let c = Functions.incorporateSavedCompletion(this, completion);\n      invariant(c instanceof Completion);\n      completion = c;\n    }\n    let cc = this.composeWithSavedCompletion(completion);\n    if (cc instanceof AbruptCompletion) throw cc;\n    return cc.value;\n  }\n\n  composeWithSavedCompletion(completion: Completion): Completion {\n    if (this.savedCompletion === undefined) {\n      if (completion instanceof JoinedNormalAndAbruptCompletions) {\n        this.savedCompletion = completion;\n        this.pushPathConditionsLeadingToNormalCompletions(completion);\n        this.captureEffects(completion);\n      }\n      return completion;\n    } else {\n      let cc = Join.composeCompletions(this.savedCompletion, completion);\n      if (cc instanceof JoinedNormalAndAbruptCompletions) {\n        this.savedCompletion = cc;\n        this.pushPathConditionsLeadingToNormalCompletions(completion);\n        if (cc.savedEffects === undefined) this.captureEffects(cc);\n      } else {\n        this.savedCompletion = undefined;\n      }\n      return cc;\n    }\n  }\n\n  pushPathConditionsLeadingToNormalCompletions(completion: Completion): void {\n    let realm = this;\n    let bottomValue = realm.intrinsics.__bottomValue;\n    // Note that if a completion of type CompletionType has a value is that is bottom, that completion is unreachable\n    // and pushing its corresponding path condition would cause an InfeasiblePathError to be thrown.\n    if (completion instanceof JoinedNormalAndAbruptCompletions && completion.composedWith !== undefined)\n      this.pushPathConditionsLeadingToNormalCompletions(completion.composedWith);\n    if (completion instanceof JoinedAbruptCompletions || completion instanceof JoinedNormalAndAbruptCompletions) {\n      let jc = completion.joinCondition;\n      if (completion.consequent.value === bottomValue || allPathsAreOfType(AbruptCompletion, completion.consequent)) {\n        if (completion.alternate.value === bottomValue || allPathsAreOfType(AbruptCompletion, completion.alternate))\n          return;\n        Path.pushInverseAndRefine(completion.joinCondition);\n        this.pushPathConditionsLeadingToNormalCompletions(completion.alternate);\n      } else if (\n        completion.alternate.value === bottomValue ||\n        allPathsAreOfType(AbruptCompletion, completion.alternate)\n      ) {\n        if (completion.consequent.value === bottomValue) return;\n        Path.pushAndRefine(completion.joinCondition);\n        this.pushPathConditionsLeadingToNormalCompletions(completion.consequent);\n      } else if (allPathsAreOfType(NormalCompletion, completion.consequent)) {\n        if (!allPathsAreOfType(NormalCompletion, completion.alternate)) {\n          let alternatePC = getNormalPathConditions(completion.alternate);\n          let disjunct = AbstractValue.createFromLogicalOp(realm, \"||\", jc, alternatePC, undefined, true, true);\n          Path.pushAndRefine(disjunct);\n        }\n      } else if (allPathsAreOfType(NormalCompletion, completion.alternate)) {\n        let consequentPC = getNormalPathConditions(completion.consequent);\n        let inverse = AbstractValue.createFromUnaryOp(realm, \"!\", jc, true, undefined, true, true);\n        let disjunct = AbstractValue.createFromLogicalOp(realm, \"||\", inverse, consequentPC, undefined, true, true);\n        Path.pushAndRefine(disjunct);\n      } else {\n        let cpc = AbstractValue.createFromLogicalOp(\n          realm,\n          \"&&\",\n          jc,\n          getNormalPathConditions(completion.consequent),\n          undefined,\n          true,\n          true\n        );\n        let ijc = AbstractValue.createFromUnaryOp(realm, \"!\", jc, true, undefined, true, true);\n        let apc = AbstractValue.createFromLogicalOp(\n          realm,\n          \"&&\",\n          ijc,\n          getNormalPathConditions(completion.alternate),\n          undefined,\n          true,\n          true\n        );\n        let disjunct = AbstractValue.createFromLogicalOp(realm, \"||\", cpc, apc, undefined, true, true);\n        Path.pushAndRefine(disjunct);\n      }\n    }\n    return;\n\n    function allPathsAreOfType(CompletionType: typeof Completion, c: Completion): boolean {\n      if (c instanceof JoinedNormalAndAbruptCompletions) {\n        if (c.composedWith !== undefined && !allPathsAreOfType(CompletionType, c.composedWith)) return false;\n        return allPathsAreOfType(CompletionType, c.consequent) && allPathsAreOfType(CompletionType, c.alternate);\n      } else if (c instanceof JoinedAbruptCompletions) {\n        return allPathsAreOfType(CompletionType, c.consequent) && allPathsAreOfType(CompletionType, c.alternate);\n      } else {\n        return c instanceof CompletionType;\n      }\n    }\n\n    function getNormalPathConditions(c: Completion): Value {\n      let pathCondToComposeWith;\n      if (c instanceof JoinedNormalAndAbruptCompletions && c.composedWith !== undefined)\n        pathCondToComposeWith = getNormalPathConditions(c.composedWith);\n      if (!(c instanceof JoinedAbruptCompletions || c instanceof JoinedNormalAndAbruptCompletions)) {\n        return c instanceof AbruptCompletion ? realm.intrinsics.false : realm.intrinsics.true;\n      }\n      let pathCond;\n      if (c.consequent.value === bottomValue || allPathsAreOfType(AbruptCompletion, c.consequent)) {\n        if (!allPathsAreOfType(AbruptCompletion, c.alternate)) {\n          let inverse = AbstractValue.createFromUnaryOp(realm, \"!\", c.joinCondition, true, undefined, true, true);\n          if (allPathsAreOfType(NormalCompletion, c.alternate)) pathCond = inverse;\n          else\n            pathCond = AbstractValue.createFromLogicalOp(\n              realm,\n              \"&&\",\n              inverse,\n              getNormalPathConditions(c.alternate),\n              undefined,\n              true,\n              true\n            );\n        }\n      } else if (c.alternate.value === bottomValue || allPathsAreOfType(AbruptCompletion, c.alternate)) {\n        if (!allPathsAreOfType(AbruptCompletion, c.consequent)) {\n          if (allPathsAreOfType(NormalCompletion, c.consequent)) {\n            pathCond = c.joinCondition;\n          } else {\n            let jc = c.joinCondition;\n            pathCond = AbstractValue.createFromLogicalOp(\n              realm,\n              \"&&\",\n              jc,\n              getNormalPathConditions(c.consequent),\n              undefined,\n              true,\n              true\n            );\n          }\n        }\n      } else {\n        let jc = c.joinCondition;\n        let consequentPC = AbstractValue.createFromLogicalOp(\n          realm,\n          \"&&\",\n          jc,\n          getNormalPathConditions(c.consequent),\n          undefined,\n          true,\n          true\n        );\n        let ijc = AbstractValue.createFromUnaryOp(realm, \"!\", jc, true, undefined, true, true);\n        let alternatePC = AbstractValue.createFromLogicalOp(\n          realm,\n          \"&&\",\n          ijc,\n          getNormalPathConditions(c.alternate),\n          undefined,\n          true,\n          true\n        );\n        pathCond = AbstractValue.createFromLogicalOp(realm, \"||\", consequentPC, alternatePC, undefined, true, true);\n      }\n      if (pathCondToComposeWith === undefined && pathCond === undefined) return realm.intrinsics.false;\n      if (pathCondToComposeWith === undefined) {\n        invariant(pathCond !== undefined);\n        return pathCond;\n      }\n      if (pathCond === undefined) return pathCondToComposeWith;\n      return AbstractValue.createFromLogicalOp(realm, \"&&\", pathCondToComposeWith, pathCond, undefined, true, true);\n    }\n  }\n\n  captureEffects(completion: JoinedNormalAndAbruptCompletions): void {\n    invariant(completion.savedEffects === undefined);\n    completion.savedEffects = new Effects(\n      new SimpleNormalCompletion(this.intrinsics.undefined),\n      (this.generator: any),\n      (this.modifiedBindings: any),\n      (this.modifiedProperties: any),\n      (this.createdObjects: any)\n    );\n    this.generator = new Generator(this, \"captured\", this.pathConditions);\n    this.modifiedBindings = new Map();\n    this.modifiedProperties = new Map();\n    this.createdObjects = new Set();\n  }\n\n  getCapturedEffects(v?: Completion | Value = this.intrinsics.undefined): Effects {\n    invariant(this.generator !== undefined);\n    invariant(this.modifiedBindings !== undefined);\n    invariant(this.modifiedProperties !== undefined);\n    invariant(this.createdObjects !== undefined);\n    return new Effects(\n      v instanceof Completion ? v : new SimpleNormalCompletion(v),\n      this.generator,\n      this.modifiedBindings,\n      this.modifiedProperties,\n      this.createdObjects\n    );\n  }\n\n  stopEffectCaptureAndUndoEffects(completion: JoinedNormalAndAbruptCompletions): void {\n    // Roll back the state changes\n    this.restoreBindings(this.modifiedBindings);\n    this.restoreProperties(this.modifiedProperties);\n\n    // Restore saved state\n    if (completion.savedEffects !== undefined) {\n      const savedEffects = completion.savedEffects;\n      completion.savedEffects = undefined;\n      this.generator = savedEffects.generator;\n      this.modifiedBindings = savedEffects.modifiedBindings;\n      this.modifiedProperties = savedEffects.modifiedProperties;\n      this.createdObjects = savedEffects.createdObjects;\n    } else {\n      invariant(false);\n    }\n  }\n\n  // Apply the given effects to the global state\n  applyEffects(effects: Effects, leadingComment: string = \"\", appendGenerator: boolean = true): void {\n    invariant(\n      effects.canBeApplied,\n      \"Effects have been applied and not properly reverted. It is not safe to apply them a second time.\"\n    );\n    effects.canBeApplied = false;\n    let { generator, modifiedBindings, modifiedProperties, createdObjects } = effects;\n\n    // Add generated code for property modifications\n    if (appendGenerator) this.appendGenerator(generator, leadingComment);\n\n    // Restore modifiedBindings\n    this.restoreBindings(modifiedBindings);\n    this.restoreProperties(modifiedProperties);\n\n    // track modifiedBindings\n    let realmModifiedBindings = this.modifiedBindings;\n    if (realmModifiedBindings !== undefined) {\n      modifiedBindings.forEach((val, key, m) => {\n        invariant(realmModifiedBindings !== undefined);\n        if (!realmModifiedBindings.has(key)) {\n          realmModifiedBindings.set(key, val);\n        }\n      });\n    }\n    let realmModifiedProperties = this.modifiedProperties;\n    if (realmModifiedProperties !== undefined) {\n      modifiedProperties.forEach((desc, propertyBinding, m) => {\n        invariant(realmModifiedProperties !== undefined);\n        if (!realmModifiedProperties.has(propertyBinding)) {\n          realmModifiedProperties.set(propertyBinding, desc);\n        }\n      });\n    }\n\n    // add created objects\n    if (createdObjects.size > 0) {\n      let realmCreatedObjects = this.createdObjects;\n      if (realmCreatedObjects === undefined) this.createdObjects = new Set(createdObjects);\n      else {\n        createdObjects.forEach((ob, a) => {\n          invariant(realmCreatedObjects !== undefined);\n          realmCreatedObjects.add(ob);\n        });\n      }\n    }\n  }\n\n  outputToConsole(method: ConsoleMethodTypes, args: Array<string | ConcreteValue>): void {\n    if (this.isReadOnly) {\n      // This only happens during speculative execution and is reported elsewhere\n      throw new FatalError(\"Trying to create console output in read-only realm\");\n    }\n    if (this.useAbstractInterpretation) {\n      invariant(this.generator !== undefined);\n      this.generator.emitConsoleLog(method, args);\n    } else {\n      // $FlowFixMe: Flow doesn't have type data for all the console methods yet\n      console[method](getString(this, args));\n    }\n\n    function getString(realm: Realm, values: Array<string | ConcreteValue>) {\n      let res = \"\";\n      while (values.length) {\n        let next = values.shift();\n        let nextString = To.ToString(realm, next);\n        res += nextString;\n      }\n      return res;\n    }\n  }\n\n  // Record the current value of binding in this.modifiedBindings unless\n  // there is already an entry for binding.\n  recordModifiedBinding(binding: Binding, value?: Value): Binding {\n    const isDefinedInsidePureFn = root => {\n      let context = this.getRunningContext();\n      let { lexicalEnvironment: env } = context;\n      while (env !== null) {\n        if (env.environmentRecord === root) {\n          // We can look at whether the lexical environment of the binding was destroyed to\n          // determine if it was defined outside the current pure running context.\n          return !env.destroyed;\n        }\n        env = env.parent;\n      }\n      return false;\n    };\n\n    if (\n      this.modifiedBindings !== undefined &&\n      !this.modifiedBindings.has(binding) &&\n      value !== undefined &&\n      this.isInPureScope()\n    ) {\n      let env = binding.environment;\n\n      if (\n        !(env instanceof DeclarativeEnvironmentRecord) ||\n        (env instanceof DeclarativeEnvironmentRecord && !isDefinedInsidePureFn(env))\n      ) {\n        for (let callback of this.reportSideEffectCallbacks) {\n          callback(\"MODIFIED_BINDING\", binding, value.expressionLocation);\n        }\n      }\n    }\n\n    if (binding.environment.isReadOnly) {\n      // This only happens during speculative execution and is reported elsewhere\n      throw new FatalError(\"Trying to modify a binding in read-only realm\");\n    }\n\n    if (this.modifiedBindings !== undefined && !this.modifiedBindings.has(binding)) {\n      this.modifiedBindings.set(binding, {\n        hasLeaked: binding.hasLeaked,\n        value: binding.value,\n      });\n    }\n    return binding;\n  }\n\n  callReportObjectGetOwnProperties(ob: ObjectValue | AbstractObjectValue): void {\n    if (this.reportObjectGetOwnProperties !== undefined) {\n      this.reportObjectGetOwnProperties(ob);\n    }\n  }\n\n  callReportPropertyAccess(binding: PropertyBinding, isWrite: boolean): void {\n    if (this.reportPropertyAccess !== undefined) {\n      this.reportPropertyAccess(binding, isWrite);\n    }\n  }\n\n  // Record the current value of binding in this.modifiedProperties unless\n  // there is already an entry for binding.\n  recordModifiedProperty(binding: void | PropertyBinding): void {\n    if (binding === undefined) return;\n    if (this.isInPureScope()) {\n      let object = binding.object;\n      invariant(object instanceof ObjectValue);\n      const createdObjectsTrackedForLeaks = this.createdObjectsTrackedForLeaks;\n\n      if (\n        createdObjectsTrackedForLeaks !== undefined &&\n        !createdObjectsTrackedForLeaks.has(object) &&\n        // __markPropertyAsChecked__ is set by realm.markPropertyAsChecked\n        (typeof binding.key !== \"string\" || !binding.key.includes(\"__propertyHasBeenChecked__\")) &&\n        binding.key !== \"_temporalAlias\"\n      ) {\n        if (binding.object === this.$GlobalObject) {\n          for (let callback of this.reportSideEffectCallbacks) {\n            callback(\"MODIFIED_GLOBAL\", binding, object.expressionLocation);\n          }\n        } else {\n          for (let callback of this.reportSideEffectCallbacks) {\n            callback(\"MODIFIED_PROPERTY\", binding, object.expressionLocation);\n          }\n        }\n      }\n    }\n    if (this.isReadOnly && (this.getRunningContext().isReadOnly || !this.isNewObject(binding.object))) {\n      // This only happens during speculative execution and is reported elsewhere\n      throw new FatalError(\"Trying to modify a property in read-only realm\");\n    }\n    this.callReportPropertyAccess(binding, true);\n    if (this.modifiedProperties !== undefined && !this.modifiedProperties.has(binding)) {\n      let clone;\n      let desc = binding.descriptor;\n      if (desc === undefined) {\n        clone = undefined;\n      } else if (desc instanceof AbstractJoinedDescriptor) {\n        clone = new AbstractJoinedDescriptor(desc.joinCondition, desc.descriptor1, desc.descriptor2);\n      } else if (desc instanceof PropertyDescriptor) {\n        clone = cloneDescriptor(desc);\n      } else if (desc instanceof InternalSlotDescriptor) {\n        clone = new InternalSlotDescriptor(desc.value);\n      } else {\n        invariant(false, \"unknown descriptor\");\n      }\n      this.modifiedProperties.set(binding, clone);\n    }\n  }\n\n  isNewObject(object: AbstractObjectValue | ObjectValue): boolean {\n    if (object instanceof AbstractObjectValue) return false;\n    return this.createdObjects === undefined || this.createdObjects.has(object);\n  }\n\n  recordNewObject(object: ObjectValue): void {\n    if (this.createdObjects !== undefined) {\n      this.createdObjects.add(object);\n    }\n    if (this.createdObjectsTrackedForLeaks !== undefined) {\n      this.createdObjectsTrackedForLeaks.add(object);\n    }\n  }\n\n  // Returns the current values of modifiedBindings and modifiedProperties\n  // and then assigns new empty maps to them.\n  getAndResetModifiedMaps(): [void | Bindings, void | PropertyBindings] {\n    let result = [this.modifiedBindings, this.modifiedProperties];\n    this.modifiedBindings = new Map();\n    this.modifiedProperties = new Map();\n    return result;\n  }\n\n  // Restores each Binding in the given map to the value it\n  // had when it was entered into the map and updates the map to record\n  // the value the Binding had just before the call to this method.\n  restoreBindings(modifiedBindings: void | Bindings) {\n    if (modifiedBindings === undefined) return;\n    modifiedBindings.forEach(({ hasLeaked, value }, binding, m) => {\n      let l = binding.hasLeaked;\n      let v = binding.value;\n      binding.hasLeaked = hasLeaked;\n      binding.value = value;\n      m.set(binding, { hasLeaked: l, value: v });\n    });\n  }\n\n  // Restores each PropertyBinding in the given map to the value it\n  // had when it was entered into the map and updates the map to record\n  // the value the Binding had just before the call to this method.\n  restoreProperties(modifiedProperties: void | PropertyBindings): void {\n    if (modifiedProperties === undefined) return;\n    modifiedProperties.forEach((desc, propertyBinding, m) => {\n      let d = propertyBinding.descriptor;\n      propertyBinding.descriptor = desc;\n      m.set(propertyBinding, d);\n    });\n  }\n\n  // Provide the realm with maps in which to track modifications.\n  // A map can be set to undefined if no tracking is required.\n  setModifiedMaps(modifiedBindings: void | Bindings, modifiedProperties: void | PropertyBindings): void {\n    this.modifiedBindings = modifiedBindings;\n    this.modifiedProperties = modifiedProperties;\n  }\n\n  rebuildObjectProperty(object: Value, key: string, propertyValue: Value, path: string): void {\n    if (!(propertyValue instanceof AbstractValue)) return;\n    if (propertyValue.kind === \"abstractConcreteUnion\") {\n      invariant(propertyValue.args.length >= 2);\n      let absVal = propertyValue.args[0];\n      invariant(absVal instanceof AbstractValue);\n      propertyValue = absVal;\n    }\n    if (!propertyValue.isIntrinsic()) {\n      propertyValue.intrinsicName = `${path}.${key}`;\n      propertyValue.kind = \"rebuiltProperty\";\n      propertyValue.args = [object, new StringValue(this, key)];\n      propertyValue.operationDescriptor = createOperationDescriptor(\"REBUILT_OBJECT\");\n      let intrinsicName = propertyValue.intrinsicName;\n      invariant(intrinsicName !== undefined);\n      this.rebuildNestedProperties(propertyValue, intrinsicName);\n    }\n  }\n\n  rebuildNestedProperties(abstractValue: AbstractValue | UndefinedValue, path: string): void {\n    if (!(abstractValue instanceof AbstractObjectValue)) return;\n    if (abstractValue.values.isTop()) return;\n    let template = abstractValue.getTemplate();\n    invariant(!template.intrinsicName || template.intrinsicName === path);\n    template.intrinsicName = path;\n    template.intrinsicNameGenerated = true;\n    for (let [key, binding] of template.properties) {\n      if (binding === undefined || binding.descriptor === undefined) continue; // deleted\n      invariant(binding.descriptor !== undefined);\n      let desc = binding.descriptor.throwIfNotConcrete(this);\n      let value = desc.value;\n      Properties.ThrowIfMightHaveBeenDeleted(desc);\n      if (value === undefined) {\n        AbstractValue.reportIntrospectionError(abstractValue, key);\n        throw new FatalError();\n      }\n      invariant(value instanceof Value);\n      this.rebuildObjectProperty(abstractValue, key, value, path);\n    }\n  }\n\n  createExecutionContext(): ExecutionContext {\n    let context = new ExecutionContext();\n    let loc = this.nextContextLocation;\n    if (loc) {\n      context.setLocation(loc);\n      this.nextContextLocation = null;\n    }\n    return context;\n  }\n\n  setNextExecutionContextLocation(loc: ?BabelNodeSourceLocation): ?BabelNodeSourceLocation {\n    let previousValue = this.nextContextLocation;\n    this.nextContextLocation = loc;\n    return previousValue;\n  }\n\n  /* Since it makes strong assumptions, Instant Render is likely to have a large\n  number of unsupported scenarios. We group all associated compiler diagnostics here. */\n  instantRenderBailout(message: string, loc: ?BabelNodeSourceLocation) {\n    if (loc === undefined) loc = this.currentLocation;\n    let error = new CompilerDiagnostic(message, loc, \"PP0039\", \"RecoverableError\");\n    if (this.handleError(error) === \"Fail\") throw new FatalError();\n  }\n\n  reportIntrospectionError(message?: void | string | StringValue): void {\n    if (message === undefined) message = \"\";\n    if (typeof message === \"string\") message = new StringValue(this, message);\n    invariant(message instanceof StringValue);\n    this.nextContextLocation = this.currentLocation;\n    let error = new CompilerDiagnostic(message.value, this.currentLocation, \"PP0001\", \"FatalError\");\n    this.handleError(error);\n  }\n\n  createErrorThrowCompletion(type: NativeFunctionValue, message?: void | string | StringValue): ThrowCompletion {\n    invariant(type !== this.intrinsics.__IntrospectionError);\n    if (message === undefined) message = \"\";\n    if (typeof message === \"string\") message = new StringValue(this, message);\n    invariant(message instanceof StringValue);\n    this.nextContextLocation = this.currentLocation;\n    return new ThrowCompletion(Construct(this, type, [message]), this.currentLocation);\n  }\n\n  appendGenerator(generator: Generator, leadingComment: string = \"\"): void {\n    let realmGenerator = this.generator;\n    if (realmGenerator === undefined) {\n      invariant(generator.empty());\n      return;\n    }\n    realmGenerator.appendGenerator(generator, leadingComment);\n  }\n\n  // This function gets the evaluated effects with a collection of\n  // prior nested affects applied (and their canBeApplied flag reset)\n  // We can safely do this as we've wrapped the effects in evaluated\n  // effects, meaning all the effects applied to Realm get restored\n  evaluateForEffectsWithPriorEffects(\n    priorEffects: Array<Effects>,\n    f: () => AbruptCompletion | Value,\n    generatorName: string\n  ): Effects {\n    return this.evaluateForEffects(\n      () => {\n        for (let priorEffect of priorEffects) this.applyEffects(priorEffect);\n        try {\n          return f();\n        } finally {\n          for (let priorEffect of priorEffects) {\n            invariant(!priorEffect.canBeApplied);\n            priorEffect.canBeApplied = true;\n          }\n        }\n      },\n      undefined,\n      generatorName\n    );\n  }\n\n  evaluateWithIncreasedMaxStackDepth<T>(increaseRemainingCallsBy: number, f: () => T): T {\n    invariant(increaseRemainingCallsBy > 0);\n    this.remainingCalls += increaseRemainingCallsBy;\n    try {\n      return f();\n    } finally {\n      this.remainingCalls -= increaseRemainingCallsBy;\n    }\n  }\n\n  // Pass the error to the realm's error-handler\n  // Return value indicates whether the caller should try to recover from the error or not.\n  handleError(diagnostic: CompilerDiagnostic): ErrorHandlerResult {\n    if (!diagnostic.callStack && this.contextStack.length > 0) {\n      let error = this.evaluateWithIncreasedMaxStackDepth(1, () =>\n        this.evaluateWithoutEffects(() => Construct(this, this.intrinsics.Error).throwIfNotConcreteObject())\n      );\n      let stack = error._SafeGetDataPropertyValue(\"stack\");\n      if (stack instanceof StringValue) diagnostic.callStack = stack.value;\n    }\n\n    // If debugger is attached, give it a first crack so that it can\n    // stop execution for debugging before PP exits.\n    if (this.debuggerInstance && this.debuggerInstance.shouldStopForSeverity(diagnostic.severity)) {\n      this.debuggerInstance.handlePrepackError(diagnostic);\n    }\n\n    // If we're creating a DebugRepro, attach the sourceFile names to the error that is returned.\n    if (this.debugReproManager !== undefined) {\n      let manager = this.debugReproManager;\n      let sourcePaths = {\n        sourceFiles: manager.getSourceFilePaths(),\n        sourceMaps: manager.getSourceMapPaths(),\n      };\n      diagnostic.sourceFilePaths = sourcePaths;\n    }\n\n    // Default behaviour is to bail on the first error\n    let errorHandler = this.errorHandler;\n    if (!errorHandler) {\n      let msg = `${diagnostic.errorCode}: ${diagnostic.message}`;\n      if (diagnostic.location) {\n        let loc_start = diagnostic.location.start;\n        let loc_end = diagnostic.location.end;\n        msg += ` at ${loc_start.line}:${loc_start.column} to ${loc_end.line}:${loc_end.column}`;\n      }\n      try {\n        switch (diagnostic.severity) {\n          case \"Information\":\n            console.log(`Info: ${msg}`);\n            return \"Recover\";\n          case \"Warning\":\n            console.warn(`Warn: ${msg}`);\n            return \"Recover\";\n          case \"RecoverableError\":\n            console.error(`Error: ${msg}`);\n            return \"Fail\";\n          case \"FatalError\":\n            console.error(`Fatal Error: ${msg}`);\n            return \"Fail\";\n          default:\n            invariant(false, \"Unexpected error type\");\n        }\n      } finally {\n        console.log(diagnostic.callStack);\n      }\n    }\n    return errorHandler(diagnostic, this.suppressDiagnostics);\n  }\n\n  saveNameString(nameString: string): void {\n    this._abstractValuesDefined.add(nameString);\n  }\n\n  isNameStringUnique(nameString: string): boolean {\n    return !this._abstractValuesDefined.has(nameString);\n  }\n\n  getTemporalOperationEntryFromDerivedValue(value: Value): void | TemporalOperationEntry {\n    let name = value.intrinsicName;\n    if (!name) {\n      return undefined;\n    }\n    let temporalOperationEntry = value.$Realm.derivedIds.get(name);\n    return temporalOperationEntry;\n  }\n\n  getTemporalGeneratorEntriesReferencingArg(arg: AbstractValue | ObjectValue): void | Set<TemporalOperationEntry> {\n    return this.temporalEntryArgToEntries.get(arg);\n  }\n\n  saveTemporalGeneratorEntryArgs(temporalOperationEntry: TemporalOperationEntry): void {\n    let args = temporalOperationEntry.args;\n    for (let arg of args) {\n      let temporalEntries = this.temporalEntryArgToEntries.get(arg);\n\n      if (temporalEntries === undefined) {\n        temporalEntries = new Set();\n        this.temporalEntryArgToEntries.set(arg, temporalEntries);\n      }\n      temporalEntries.add(temporalOperationEntry);\n    }\n  }\n}\n"],"file":"realm.js"}