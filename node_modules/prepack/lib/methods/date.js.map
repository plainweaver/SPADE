{"version":3,"sources":["../../src/methods/date.js"],"names":["SecondsPerMinute","MinutesPerHour","HoursPerDay","msPerSecond","msPerMinute","msPerHour","msPerDay","LocalTZA","Date","getTimezoneOffset","Day","realm","t","Math","floor","TimeWithinDay","DaysInYear","y","DayFromYear","TimeFromYear","YearFromTime","t2","InLeapYear","daysInYear","MonthFromTime","step","d","DayWithinYear","DateFromTime","next","WeekDay","DaylightSavingTA","LocalTime","UTC","_t","Value","throwIfNotConcreteNumber","value","NumberValue","HourFromTime","MinFromTime","SecFromTime","msFromTime","MakeTime","hour","min","sec","ms","isFinite","NaN","h","To","ToInteger","m","s","milli","MakeDay","year","month","date","dt","ym","mn","abs","yearDelta","baseDay","MakeDate","day","time","TimeClip","_time","intrinsics","clippedTime","Object","is","thisTimeValue","ObjectValue","$DateValue","undefined","createErrorThrowCompletion","TypeError","ToDateString","tv","isNaN","toString"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow strict-local */\n\nimport { NumberValue, Value, ObjectValue } from \"../values/index.js\";\nimport type { Realm } from \"../realm.js\";\nimport { To } from \"../singletons.js\";\nimport invariant from \"../invariant.js\";\n\n// Constants\nexport const SecondsPerMinute = 60;\nexport const MinutesPerHour = 60;\nexport const HoursPerDay = 24;\nexport const msPerSecond = 1000;\nexport const msPerMinute = msPerSecond * SecondsPerMinute;\nexport const msPerHour = msPerMinute * MinutesPerHour;\nexport const msPerDay = msPerHour * HoursPerDay;\n\nlet LocalTZA = -new Date(0).getTimezoneOffset() * msPerMinute;\n\n// ECMA262 20.3.1.2\nexport function Day(realm: Realm, t: number): number {\n  return Math.floor(t / msPerDay);\n}\n\n// ECMA262 20.3.1.2\nexport function TimeWithinDay(realm: Realm, t: number): number {\n  return t % msPerDay;\n}\n\n// ECMA262 20.3.1.3\nexport function DaysInYear(realm: Realm, y: number): 365 | 366 {\n  if (y % 4 !== 0) return 365;\n  if (y % 4 === 0 && y % 100 !== 0) return 366;\n  if (y % 100 === 0 && y % 400 !== 0) return 365;\n  if (y % 400 === 0) return 366;\n\n  invariant(false, \"Invalid condition\");\n}\n\n// ECMA262 20.3.1.3\nexport function DayFromYear(realm: Realm, y: number): number {\n  return 365 * (y - 1970) + Math.floor((y - 1969) / 4) - Math.floor((y - 1901) / 100) + Math.floor((y - 1601) / 400);\n}\n\n// ECMA262 20.3.1.3\nexport function TimeFromYear(realm: Realm, y: number): number {\n  return msPerDay * DayFromYear(realm, y);\n}\n\n// ECMA262 20.3.1.3\nexport function YearFromTime(realm: Realm, t: number): number {\n  let y = Math.floor(t / (msPerDay * 365.2425)) + 1970;\n  let t2 = TimeFromYear(realm, y);\n\n  if (t2 > t) {\n    y--;\n  } else {\n    if (t2 + msPerDay * DaysInYear(realm, y) <= t) {\n      y++;\n    }\n  }\n  return y;\n}\n\n// ECMA262 20.3.1.3\nexport function InLeapYear(realm: Realm, t: number): number {\n  let daysInYear = DaysInYear(realm, YearFromTime(realm, t));\n  if (daysInYear === 365) return 0;\n  if (daysInYear === 366) return 1;\n  invariant(false, \"invalid condition\");\n}\n\n// ECMA262 20.3.1.4\nexport function MonthFromTime(realm: Realm, t: number): number {\n  let step: ?number;\n  let d = DayWithinYear(realm, t);\n\n  if (d < (step = 31)) return 0;\n\n  step += InLeapYear(realm, t) ? 29 : 28;\n  if (d < step) return 1;\n  if (d < (step += 31)) return 2;\n  if (d < (step += 30)) return 3;\n  if (d < (step += 31)) return 4;\n  if (d < (step += 30)) return 5;\n  if (d < (step += 31)) return 6;\n  if (d < (step += 31)) return 7;\n  if (d < (step += 30)) return 8;\n  if (d < (step += 31)) return 9;\n  if (d < (step += 30)) return 10;\n  return 11;\n}\n\n// ECMA262 20.3.1.4\nexport function DayWithinYear(realm: Realm, t: number): number {\n  return Day(realm, t) - DayFromYear(realm, YearFromTime(realm, t));\n}\n\n// ECMA262 20.3.1.5\nexport function DateFromTime(realm: Realm, t: number): number {\n  let step: ?number;\n  let next: ?number;\n  let d = DayWithinYear(realm, t);\n\n  if (d <= (next = 30)) return d + 1;\n\n  step = next;\n  next += InLeapYear(realm, t) ? 29 : 28;\n  if (d <= next) return d - step;\n\n  step = next;\n  if (d <= (next += 31)) return d - step;\n\n  step = next;\n  if (d <= (next += 30)) return d - step;\n\n  step = next;\n  if (d <= (next += 31)) return d - step;\n\n  step = next;\n  if (d <= (next += 30)) return d - step;\n\n  step = next;\n  if (d <= (next += 31)) return d - step;\n\n  step = next;\n  if (d <= (next += 31)) return d - step;\n\n  step = next;\n  if (d <= (next += 30)) return d - step;\n\n  step = next;\n  if (d <= (next += 31)) return d - step;\n\n  step = next;\n  if (d <= (next += 30)) return d - step;\n\n  step = next;\n  return d - step;\n}\n\n// ECMA262 20.3.1.6\nexport function WeekDay(realm: Realm, t: number): number {\n  return (Day(realm, t) + 4) % 7;\n}\n\n// ECMA262 20.3.1.7\nexport function DaylightSavingTA(realm: Realm, t: number): number {\n  // TODO #1014: Implement DaylightSavingTA\n  return 0;\n}\n\n// ECMA262 20.3.1.9\nexport function LocalTime(realm: Realm, t: number): number {\n  // 1. Return t + LocalTZA + DaylightSavingTA(t).\n  return t + LocalTZA + DaylightSavingTA(realm, t);\n}\n\n// ECMA262 20.3.1.10\nexport function UTC(realm: Realm, _t: number | Value): NumberValue {\n  let t = _t;\n  if (t instanceof Value) t = t.throwIfNotConcreteNumber().value;\n\n  // 1. Return t - LocalTZA - DaylightSavingTA(t - LocalTZA).\n  return new NumberValue(realm, (t: number) - LocalTZA - DaylightSavingTA(realm, (t: number) - LocalTZA));\n}\n\n// ECMA262 20.3.1.11\nexport function HourFromTime(realm: Realm, t: number): number {\n  return Math.floor(t / msPerHour) % HoursPerDay;\n}\n\n// ECMA262 20.3.1.11\nexport function MinFromTime(realm: Realm, t: number): number {\n  return Math.floor(t / msPerMinute) % MinutesPerHour;\n}\n\n// ECMA262 20.3.1.11\nexport function SecFromTime(realm: Realm, t: number): number {\n  return Math.floor(t / msPerSecond) % SecondsPerMinute;\n}\n\n// ECMA262 20.3.1.11\nexport function msFromTime(realm: Realm, t: number): number {\n  return t % msPerSecond;\n}\n\n// ECMA262 20.3.1.12\nexport function MakeTime(realm: Realm, hour: number, min: number, sec: number, ms: number): number {\n  // 1. If hour is not finite or min is not finite or sec is not finite or ms is not finite, return NaN.\n  if (!isFinite(hour) || !isFinite(min) || !isFinite(sec) || !isFinite(ms)) return NaN;\n\n  // 2. Let h be ToInteger(hour).\n  let h = To.ToInteger(realm, new NumberValue(realm, hour));\n\n  // 3. Let m be ToInteger(min).\n  let m = To.ToInteger(realm, new NumberValue(realm, min));\n\n  // 4. Let s be ToInteger(sec).\n  let s = To.ToInteger(realm, new NumberValue(realm, sec));\n\n  // 5. Let milli be ToInteger(ms).\n  let milli = To.ToInteger(realm, new NumberValue(realm, ms));\n\n  // 6. Let t be h * msPerHour + m * msPerMinute + s * msPerSecond + milli, performing the arithmetic\n  //    according to IEEE 754-2008 rules (that is, as if using the ECMAScript operators * and +).\n  let t = h * msPerHour + m * msPerMinute + s * msPerSecond + milli;\n\n  // 7. Return t.\n  return t;\n}\n\n// ECMA262 20.3.1.13\nexport function MakeDay(realm: Realm, year: number, month: number, date: number): number {\n  // 1. If year is not finite or month is not finite or date is not finite, return NaN.\n  if (!isFinite(year) || !isFinite(month) || !isFinite(date)) return NaN;\n\n  // 2. Let y be ToInteger(year).\n  let y = To.ToInteger(realm, new NumberValue(realm, year));\n\n  // 3. Let m be ToInteger(month).\n  let m = To.ToInteger(realm, new NumberValue(realm, month));\n\n  // 4. Let dt be ToInteger(date).\n  let dt = To.ToInteger(realm, new NumberValue(realm, date));\n\n  // 5. Let ym be y + floor(m / 12).\n  let ym = y + Math.floor(m / 12);\n\n  // 6. Let mn be m modulo 12.\n  let mn = m < 0 ? (m % 12) + 12 : m % 12;\n\n  // 7. Find a value t such that YearFromTime(t) is ym and MonthFromTime(t) is mn and DateFromTime(t) is 1;\n  //    but if this is not possible (because some argument is out of range), return NaN.\n  //    Inspired by the V8 implementation.\n  if (Math.abs(ym) >= 1000000.0 || Math.abs(mn) >= 1000000.0) {\n    return NaN;\n  }\n  const yearDelta = 399999;\n  const baseDay =\n    365 * (1970 + yearDelta) +\n    Math.floor((1970 + yearDelta) / 4) -\n    Math.floor((1970 + yearDelta) / 100) +\n    Math.floor((1970 + yearDelta) / 400);\n  let t =\n    365 * (ym + yearDelta) +\n    Math.floor((ym + yearDelta) / 4) -\n    Math.floor((ym + yearDelta) / 100) +\n    Math.floor((ym + yearDelta) / 400) -\n    baseDay;\n\n  if (ym % 4 !== 0 || (ym % 100 === 0 && ym % 400 !== 0)) {\n    t += [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334][mn];\n  } else {\n    t += [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335][mn];\n  }\n\n  // 8. Return Day(t) + dt - 1.\n  return t + dt - 1;\n}\n\n// ECMA262 20.3.1.14\nexport function MakeDate(realm: Realm, day: number, time: number): number {\n  // 1. If day is not finite or time is not finite, return NaN.\n  if (!isFinite(day) || !isFinite(time)) return NaN;\n\n  // 2. Return day × msPerDay + time.\n  return day * msPerDay + time;\n}\n\n// ECMA262 20.3.1.15\nexport function TimeClip(realm: Realm, _time: number | Value): NumberValue {\n  let time = _time;\n  if (time instanceof Value) time = time.throwIfNotConcreteNumber().value;\n  // 1. If time is not finite, return NaN.\n  if (!isFinite(time)) return realm.intrinsics.NaN;\n\n  // 2. If abs(time) > 8.64 × 10^15, return NaN.\n  if (Math.abs((time: number)) > 8640000000000000) {\n    return realm.intrinsics.NaN;\n  }\n\n  // 3. Let clippedTime be ToInteger(time).\n  let clippedTime = To.ToInteger(realm, new NumberValue(realm, (time: number)));\n\n  // 4. If clippedTime is -0, let clippedTime be +0.\n  if (Object.is(clippedTime, -0)) clippedTime = +0;\n\n  // 5. Return clippedTime.\n  return new NumberValue(realm, clippedTime);\n}\n\n// ECMA262 20.3.4\nexport function thisTimeValue(realm: Realm, value: Value): Value {\n  // 1. If Type(value) is Object and value has a [[DateValue]] internal slot, then\n  if (value instanceof ObjectValue && value.$DateValue !== undefined) {\n    // a. Return the value of value's [[DateValue]] internal slot.\n    return value.$DateValue;\n  }\n\n  // 2. Throw a TypeError exception.\n  throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n}\n\n// ECMA262 20.3.4.41.1\nexport function ToDateString(realm: Realm, tv: number): string {\n  // 1. Assert: Type(tv) is Number.\n  invariant(typeof tv === \"number\", \"expected tv to be a number\");\n\n  // 2. If tv is NaN, return \"Invalid Date\".\n  if (isNaN(tv)) return \"Invalid Date\";\n\n  // 3. Return an implementation-dependent String value that represents tv as a date and time in the current\n  //    time zone using a convenient, human-readable form.\n  return new Date(tv).toString();\n}\n"],"file":"date.js"}