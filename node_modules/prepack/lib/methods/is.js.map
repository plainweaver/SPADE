{"version":3,"sources":["../../src/methods/is.js"],"names":["IsConcatSpreadable","realm","_O","O","mightBeObject","throwIfNotObject","spreadable","intrinsics","SymbolIsConcatSpreadable","mightBeUndefined","To","ToBooleanPartial","throwIfNotConcrete","IsArray","IsGenericDescriptorInternal","Desc","IsAccessorDescriptor","IsDataDescriptor","IsAccessorDescriptorInternal","get","undefined","set","IsDataDescriptorInternal","value","writable","IsGenericDescriptor","PropertyDescriptor","OrdinaryIsExtensible","getExtensible","IsExtensible","$IsExtensible","IsCallable","_func","func","FunctionValue","isSimpleObject","AbstractObjectValue","values","isTop","result","element","getElements","isCallable","throwIfNotConcreteObject","$Call","IsConstructor","_argument","argument","$Construct","IsInteger","isNaN","Infinity","Math","floor","abs","IsPropertyKey","arg","StringValue","SymbolValue","AbstractValue","reportIntrospectionError","FatalError","ArrayValue","ArrayPrototype","ProxyValue","$ProxyHandler","NullValue","createErrorThrowCompletion","TypeError","target","$ProxyTarget","IsInTailPosition","node","IsRegExp","isRegExp","SymbolMatch","$RegExpMatcher","IsIdentifierRef","type","Error","IsFunctionDefinition","IsAnonymousFunctionDefinition","hasName","IsArrayIndex","P","key","i","ToUint32","pow","ToString","NumberValue","IsPromise","_x","x","$PromiseState","IsDetachedBuffer","arrayBuffer","ObjectValue","$ArrayBufferData","IsIntrospectionError","_value","$GetPrototypeOf","__IntrospectionErrorPrototype","IsStatic","classElement","static"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA;;AAIA;;AACA;;AAYA;;AAEA;;AACA;;AAEA;;;;AAjCA;;;;;;;;AAmCA;AACO,SAASA,kBAAT,CAA4BC,KAA5B,EAA0CC,EAA1C,EAA8D;AACnE,MAAIC,CAAC,GAAGD,EAAR,CADmE,CAEnE;;AACA,MAAI,CAACC,CAAC,CAACC,aAAF,EAAL,EAAwB,OAAO,KAAP;AACxBD,EAAAA,CAAC,GAAGA,CAAC,CAACE,gBAAF,EAAJ,CAJmE,CAMnE;;AACA,MAAIC,UAAU,GAAG,cAAIL,KAAJ,EAAWE,CAAX,EAAcF,KAAK,CAACM,UAAN,CAAiBC,wBAA/B,CAAjB,CAPmE,CASnE;;AACA,MAAI,CAACF,UAAU,CAACG,gBAAX,EAAL,EAAoC,OAAOC,eAAGC,gBAAH,CAAoBV,KAApB,EAA2BK,UAA3B,CAAP;AACpCA,EAAAA,UAAU,CAACM,kBAAX,GAXmE,CAanE;;AACA,SAAOC,OAAO,CAACZ,KAAD,EAAQE,CAAR,CAAd;AACD,C,CAED;;;AACA,SAASW,2BAAT,CAAqCb,KAArC,EAAmDc,IAAnD,EAA+E;AAC7E;AACA,MAAI,CAACA,IAAL,EAAW,OAAO,KAAP,CAFkE,CAI7E;;AACA,MAAI,CAACC,oBAAoB,CAACf,KAAD,EAAQc,IAAR,CAArB,IAAsC,CAACE,gBAAgB,CAAChB,KAAD,EAAQc,IAAR,CAA3D,EAA0E,OAAO,IAAP,CALG,CAO7E;;AACA,SAAO,KAAP;AACD,C,CAED;;;AACA,SAASG,4BAAT,CAAsCjB,KAAtC,EAAoDc,IAApD,EAAgF;AAC9E;AACA,MAAI,CAACA,IAAL,EAAW,OAAO,KAAP,CAFmE,CAI9E;;AACAA,EAAAA,IAAI,GAAGA,IAAI,CAACH,kBAAL,CAAwBX,KAAxB,CAAP;AACA,MAAIc,IAAI,CAACI,GAAL,KAAaC,SAAb,IAA0BL,IAAI,CAACM,GAAL,KAAaD,SAA3C,EAAsD,OAAO,KAAP,CANwB,CAQ9E;;AACA,SAAO,IAAP;AACD,C,CAED;;;AACA,SAASE,wBAAT,CAAkCrB,KAAlC,EAAgDc,IAAhD,EAA4E;AAC1E;AACA,MAAI,CAACA,IAAL,EAAW,OAAO,KAAP,CAF+D,CAI1E;;AACAA,EAAAA,IAAI,GAAGA,IAAI,CAACH,kBAAL,CAAwBX,KAAxB,CAAP;AACA,MAAIc,IAAI,CAACQ,KAAL,KAAeH,SAAf,IAA4BL,IAAI,CAACS,QAAL,KAAkBJ,SAAlD,EAA6D,OAAO,KAAP,CANa,CAQ1E;;AACA,SAAO,IAAP;AACD,C,CAED;AACA;AACA;;;AAEO,SAASK,mBAAT,CAA6BxB,KAA7B,EAA2Cc,IAA3C,EAA+E;AACpF,SAAOD,2BAA2B,CAACb,KAAD,EAAQc,IAAR,CAA3B,IAA4CA,IAAI,YAAYW,+BAAnE;AACD;;AAEM,SAASV,oBAAT,CAA8Bf,KAA9B,EAA4Cc,IAA5C,EAAgF;AACrF,SAAOG,4BAA4B,CAACjB,KAAD,EAAQc,IAAR,CAA5B,IAA6CA,IAAI,YAAYW,+BAApE;AACD;;AAEM,SAAST,gBAAT,CAA0BhB,KAA1B,EAAwCc,IAAxC,EAA4E;AACjF,SAAOO,wBAAwB,CAACrB,KAAD,EAAQc,IAAR,CAAxB,IAAyCA,IAAI,YAAYW,+BAAhE;AACD,C,CAED;;;AACO,SAASC,oBAAT,CAA8B1B,KAA9B,EAA4CE,CAA5C,EAAqE;AAC1E;AACA,SAAOA,CAAC,CAACyB,aAAF,EAAP;AACD,C,CAED;;;AACO,SAASC,YAAT,CAAsB5B,KAAtB,EAAoCE,CAApC,EAAmF;AACxF;AAEA;AACA,SAAOA,CAAC,CAAC2B,aAAF,EAAP;AACD,C,CAED;;;AACO,SAASC,UAAT,CAAoB9B,KAApB,EAAkC+B,KAAlC,EAAyD;AAC9D,MAAIC,IAAI,GAAGD,KAAX,CAD8D,CAE9D;;AACA,MAAI,CAACC,IAAI,CAAC7B,aAAL,EAAL,EAA2B,OAAO,KAAP;AAC3B,MAAI,4BAAkB6B,IAAlB,EAAwBC,oBAAxB,CAAJ,EAA4C,OAAO,IAAP;AAC5C,MAAID,IAAI,CAACE,cAAL,EAAJ,EAA2B,OAAO,KAAP;;AAE3B,MAAIF,IAAI,YAAYG,0BAAhB,IAAuC,CAACH,IAAI,CAACI,MAAL,CAAYC,KAAZ,EAA5C,EAAiE;AAC/D,QAAIC,MAAJ;;AACA,SAAK,IAAIC,OAAT,IAAoBP,IAAI,CAACI,MAAL,CAAYI,WAAZ,EAApB,EAA+C;AAC7C,UAAIC,UAAU,GAAGX,UAAU,CAAC9B,KAAD,EAAQuC,OAAR,CAA3B;AACA,UAAID,MAAM,KAAKnB,SAAf,EAA0BmB,MAAM,GAAGG,UAAT,CAA1B,KACK,IAAIH,MAAM,KAAKG,UAAf,EAA2BT,IAAI,CAACU,wBAAL;AACjC;;AACD,QAAIJ,MAAM,KAAKnB,SAAf,EAA0B,OAAOmB,MAAP;AAC3B,GAf6D,CAiB9D;;;AACAN,EAAAA,IAAI,GAAGA,IAAI,CAACU,wBAAL,EAAP;AACA,MAAIV,IAAI,CAACW,KAAT,EAAgB,OAAO,IAAP,CAnB8C,CAqB9D;;AACA,SAAO,KAAP;AACD,C,CAED;;;AACO,SAASC,aAAT,CAAuB5C,KAAvB,EAAqC6C,SAArC,EAAgE;AACrE,MAAIC,QAAQ,GAAGD,SAAf,CADqE,CAErE;;AACA,MAAI,CAACC,QAAQ,CAAC3C,aAAT,EAAL,EAA+B,OAAO,KAAP,CAHsC,CAKrE;;AACA2C,EAAAA,QAAQ,GAAGA,QAAQ,CAACJ,wBAAT,EAAX;AACA,MAAII,QAAQ,CAACC,UAAb,EAAyB,OAAO,IAAP,CAP4C,CASrE;;AACA,SAAO,KAAP;AACD,C,CAED;;;AACO,SAASC,SAAT,CAAmBhD,KAAnB,EAAiC8C,QAAjC,EAA4D;AACjE;AACA,0BAAU,OAAOA,QAAP,KAAoB,QAA9B,EAAwC,8BAAxC,EAFiE,CAIjE;;AACA,MAAIG,KAAK,CAACH,QAAD,CAAL,IAAmBA,QAAQ,KAAK,CAACI,QAAjC,IAA6CJ,QAAQ,KAAK,CAACI,QAA/D,EAAyE,OAAO,KAAP,CALR,CAOjE;;AACA,MAAIC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,GAAL,CAASP,QAAT,CAAX,MAAmCK,IAAI,CAACE,GAAL,CAASP,QAAT,CAAvC,EAA2D,OAAO,KAAP,CARM,CAUjE;;AACA,SAAO,IAAP;AACD,C,CAED;;;AACO,SAASQ,aAAT,CAAuBtD,KAAvB,EAAqCuD,GAArC,EAAmE;AACxE;AACA,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B,OAAO,IAAP,CAF2C,CAIxE;;AACA,MAAIA,GAAG,YAAYC,kBAAnB,EAAgC,OAAO,IAAP,CALwC,CAOxE;;AACA,MAAID,GAAG,YAAYE,kBAAnB,EAAgC,OAAO,IAAP;;AAEhC,MAAIF,GAAG,YAAYG,oBAAnB,EAAkC;AAChCA,yBAAcC,wBAAd,CAAuCJ,GAAvC;;AACA,UAAM,IAAIK,kBAAJ,EAAN;AACD,GAbuE,CAexE;;;AACA,SAAO,KAAP;AACD,C,CAED;;;AACO,SAAShD,OAAT,CAAiBZ,KAAjB,EAA+B8C,QAA/B,EAAyD;AAC9D;AACA,MAAI,CAACA,QAAQ,CAAC3C,aAAT,EAAL,EAA+B,OAAO,KAAP,CAF+B,CAI9D;;AACA,MAAI2C,QAAQ,YAAYe,iBAApB,IAAkCf,QAAQ,KAAK9C,KAAK,CAACM,UAAN,CAAiBwD,cAApE,EAAoF,OAAO,IAAP,CALtB,CAO9D;;AACA,MAAIhB,QAAQ,YAAYiB,iBAAxB,EAAoC;AAClC;AACA,QAAI,CAACjB,QAAQ,CAACkB,aAAV,IAA2BlB,QAAQ,CAACkB,aAAT,YAAkCC,gBAAjE,EAA4E;AAC1E,YAAMjE,KAAK,CAACkE,0BAAN,CAAiClE,KAAK,CAACM,UAAN,CAAiB6D,SAAlD,CAAN;AACD,KAJiC,CAMlC;;;AACA,QAAIC,MAAM,GAAGtB,QAAQ,CAACuB,YAAtB,CAPkC,CASlC;;AACA,WAAOzD,OAAO,CAACZ,KAAD,EAAQoE,MAAR,CAAd;AACD,GAnB6D,CAqB9D;;;AACA,MAAItB,QAAQ,YAAYY,oBAApB,IAAqC,CAACZ,QAAQ,CAACZ,cAAT,EAA1C,EAAqEY,QAAQ,CAACnC,kBAAT;AACrE,SAAO,KAAP;AACD,C,CAED;;;AACO,SAAS2D,gBAAT,CAA0BtE,KAA1B,EAAwCuE,IAAxC,EAAgF;AACrF;AACA,SAAO,KAAP;AACD,C,CAED;;;AACO,SAASC,QAAT,CAAkBxE,KAAlB,EAAgC6C,SAAhC,EAA2D;AAChE,MAAIC,QAAQ,GAAGD,SAAf,CADgE,CAEhE;;AACA,MAAI,CAACC,QAAQ,CAAC3C,aAAT,EAAL,EAA+B,OAAO,KAAP;AAC/B2C,EAAAA,QAAQ,GAAGA,QAAQ,CAAC1C,gBAAT,EAAX,CAJgE,CAMhE;;AACA,MAAIqE,QAAQ,GAAG,cAAIzE,KAAJ,EAAW8C,QAAX,EAAqB9C,KAAK,CAACM,UAAN,CAAiBoE,WAAtC,CAAf,CAPgE,CAShE;;AACA,MAAID,QAAQ,KAAKtD,SAAjB,EAA4B,OAAOV,eAAGC,gBAAH,CAAoBV,KAApB,EAA2ByE,QAA3B,MAAyC,IAAhD,CAVoC,CAYhE;;AACA,MAAI3B,QAAQ,CAAC6B,cAAT,KAA4BxD,SAAhC,EAA2C,OAAO,IAAP,CAbqB,CAehE;;AACA,SAAO,KAAP;AACD,C,CAED;AACA;;;AACO,SAASyD,eAAT,CAAyB5E,KAAzB,EAAuCuE,IAAvC,EAAqE;AAC1E,UAAQA,IAAI,CAACM,IAAb;AACE;AACA,SAAK,YAAL;AACE,aAAO,IAAP;AACF;;AACA,SAAK,kBAAL;AACE,aAAO,KAAP;;AACF;AACE,YAAMC,KAAK,CAAC,2BAA2BP,IAAI,CAACM,IAAjC,CAAX;AARJ;AAUD,C,CAED;AACA;AACA;AACA;AACA;;;AACO,SAASE,oBAAT,CAA8B/E,KAA9B,EAA4CuE,IAA5C,EAAgF;AACrF,UAAQA,IAAI,CAACM,IAAb;AACE;AACA,SAAK,gBAAL;AACA,SAAK,YAAL;AACA,SAAK,eAAL;AACA,SAAK,gBAAL;AACA,SAAK,gBAAL;AACA,SAAK,aAAL;AACA,SAAK,eAAL;AACA,SAAK,iBAAL;AACA,SAAK,kBAAL;AACA,SAAK,iBAAL;AACA,SAAK,uBAAL;AACE,aAAO,KAAP;AACF;;AACA,SAAK,kBAAL;AACE,aAAO,KAAP;AACF;;AACA,SAAK,kBAAL;AACA,SAAK,mBAAL;AACE,aAAO,KAAP;AACF;;AACA,SAAK,kBAAL;AACA,SAAK,gBAAL;AACA,SAAK,eAAL;AACA,SAAK,cAAL;AACA,SAAK,0BAAL;AACE,aAAO,KAAP;AACF;;AACA,SAAK,iBAAL;AACE,aAAO,KAAP;AACF;;AACA,SAAK,sBAAL;AACE,aAAO,KAAP;AACF;;AACA,SAAK,oBAAL;AACE,aAAO,KAAP;;AACF,SAAK,yBAAL;AACA,SAAK,oBAAL;AACE,aAAO,IAAP;AACF;;AACA,SAAK,iBAAL;AACE,aAAO,IAAP;AACF;;AACA,SAAK,YAAL;AACE,aAAO,KAAP;;AACF;AACE,YAAMC,KAAK,CAAC,2BAA2BP,IAAI,CAACM,IAAjC,CAAX;AA/CJ;AAiDD,C,CAED;;;AACO,SAASG,6BAAT,CAAuChF,KAAvC,EAAqDuE,IAArD,EAAyF;AAC9F;AACA,MAAI,CAACQ,oBAAoB,CAAC/E,KAAD,EAAQuE,IAAR,CAAzB,EAAwC,OAAO,KAAP,CAFsD,CAI9F;;AACA,MAAIU,OAAO,GAAG,kBAAQjF,KAAR,EAAeuE,IAAf,CAAd,CAL8F,CAO9F;;AACA,MAAIU,OAAO,KAAK,IAAhB,EAAsB,OAAO,KAAP,CARwE,CAU9F;;AACA,SAAO,IAAP;AACD,C,CAED;;;AACO,SAASC,YAAT,CAAsBlF,KAAtB,EAAoCmF,CAApC,EAAkE;AACvE,MAAIC,GAAJ;;AACA,MAAI,OAAOD,CAAP,KAAa,QAAjB,EAA2B;AACzBC,IAAAA,GAAG,GAAGD,CAAN;AACD,GAFD,MAEO,IAAIA,CAAC,YAAY3B,kBAAjB,EAA8B;AACnC4B,IAAAA,GAAG,GAAGD,CAAC,CAAC7D,KAAR;AACD,GAFM,MAEA;AACL,WAAO,KAAP;AACD;;AAED,MAAI+D,CAAC,GAAG5E,eAAG6E,QAAH,CAAYtF,KAAZ,EAAmB,IAAIwD,kBAAJ,CAAgBxD,KAAhB,EAAuBoF,GAAvB,CAAnB,CAAR;;AACA,SAAOC,CAAC,KAAKlC,IAAI,CAACoC,GAAL,CAAS,CAAT,EAAY,EAAZ,IAAkB,CAAxB,IAA6B9E,eAAG+E,QAAH,CAAYxF,KAAZ,EAAmB,IAAIyF,kBAAJ,CAAgBzF,KAAhB,EAAuBqF,CAAvB,CAAnB,MAAkDD,GAAtF;AACD,C,CAED;;;AACO,SAASM,SAAT,CAAmB1F,KAAnB,EAAiC2F,EAAjC,EAAqD;AAC1D,MAAIC,CAAC,GAAGD,EAAR,CAD0D,CAE1D;;AACA,MAAI,CAACC,CAAC,CAACzF,aAAF,EAAL,EAAwB,OAAO,KAAP,CAHkC,CAK1D;;AACAyF,EAAAA,CAAC,GAAGA,CAAC,CAAClD,wBAAF,EAAJ;AACA,MAAIkD,CAAC,CAACC,aAAF,KAAoB1E,SAAxB,EAAmC,OAAO,KAAP,CAPuB,CAS1D;;AACA,SAAO,IAAP;AACD,C,CAED;;;AACO,SAAS2E,gBAAT,CAA0B9F,KAA1B,EAAwC+F,WAAxC,EAA2E;AAChF;AACA,0BAAUA,WAAW,YAAYC,kBAAvB,IAAsC,sBAAsBD,WAAtE,EAFgF,CAIhF;;AACA,MAAIA,WAAW,CAACE,gBAAZ,KAAiC,IAArC,EAA2C,OAAO,IAAP,CALqC,CAOhF;;AACA,SAAO,KAAP;AACD;;AAEM,SAASC,oBAAT,CAA8BlG,KAA9B,EAA4CmG,MAA5C,EAAoE;AACzE,MAAI7E,KAAK,GAAG6E,MAAZ;AACA,MAAI,CAAC7E,KAAK,CAACnB,aAAN,EAAL,EAA4B,OAAO,KAAP;AAC5BmB,EAAAA,KAAK,GAAGA,KAAK,CAACoB,wBAAN,EAAR;AACA,SAAOpB,KAAK,CAAC8E,eAAN,OAA4BpG,KAAK,CAACM,UAAN,CAAiB+F,6BAApD;AACD;;AAEM,SAASC,QAAT,CAAkBC,YAAlB,EAA+D;AACpE;AACA,SAAOA,YAAY,CAACC,MAApB;AACD","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport { FatalError } from \"../errors.js\";\nimport type { PropertyKeyValue } from \"../types.js\";\nimport type { Realm } from \"../realm.js\";\nimport type { Descriptor } from \"../types.js\";\nimport { Get } from \"./get.js\";\nimport {\n  FunctionValue,\n  NullValue,\n  ProxyValue,\n  ArrayValue,\n  StringValue,\n  SymbolValue,\n  ObjectValue,\n  NumberValue,\n  AbstractValue,\n  AbstractObjectValue,\n} from \"../values/index.js\";\nimport { To } from \"../singletons.js\";\nimport { Value } from \"../values/index.js\";\nimport invariant from \"../invariant.js\";\nimport { HasName, HasCompatibleType } from \"./has.js\";\nimport type { BabelNodeExpression, BabelNodeCallExpression, BabelNodeLVal, BabelNodeClassMethod } from \"@babel/types\";\nimport { PropertyDescriptor } from \"../descriptors.js\";\n\n// ECMA262 22.1.3.1.1\nexport function IsConcatSpreadable(realm: Realm, _O: Value): boolean {\n  let O = _O;\n  // 1. If Type(O) is not Object, return false.\n  if (!O.mightBeObject()) return false;\n  O = O.throwIfNotObject();\n\n  // 2. Let spreadable be ? Get(O, @@isConcatSpreadable).\n  let spreadable = Get(realm, O, realm.intrinsics.SymbolIsConcatSpreadable);\n\n  // 3. If spreadable is not undefined, return ToBoolean(spreadable).\n  if (!spreadable.mightBeUndefined()) return To.ToBooleanPartial(realm, spreadable);\n  spreadable.throwIfNotConcrete();\n\n  // 4. Return ? IsArray(O).\n  return IsArray(realm, O);\n}\n\n// ECMA262 6.2.4.3\nfunction IsGenericDescriptorInternal(realm: Realm, Desc: ?Descriptor): boolean {\n  // 1. If Desc is undefined, return false.\n  if (!Desc) return false;\n\n  // 2. If IsAccessorDescriptor(Desc) and IsDataDescriptor(Desc) are both false, return true.\n  if (!IsAccessorDescriptor(realm, Desc) && !IsDataDescriptor(realm, Desc)) return true;\n\n  // 3. Return false.\n  return false;\n}\n\n// ECMA262 6.2.4.1\nfunction IsAccessorDescriptorInternal(realm: Realm, Desc: ?Descriptor): boolean {\n  // 1. If Desc is undefined, return false.\n  if (!Desc) return false;\n\n  // 2. If both Desc.[[Get]] and Desc.[[Set]] are absent, return false.\n  Desc = Desc.throwIfNotConcrete(realm);\n  if (Desc.get === undefined && Desc.set === undefined) return false;\n\n  // 3. Return true.\n  return true;\n}\n\n// ECMA262 6.2.4.2\nfunction IsDataDescriptorInternal(realm: Realm, Desc: ?Descriptor): boolean {\n  // If Desc is undefined, return false.\n  if (!Desc) return false;\n\n  // If both Desc.[[Value]] and Desc.[[Writable]] are absent, return false.\n  Desc = Desc.throwIfNotConcrete(realm);\n  if (Desc.value === undefined && Desc.writable === undefined) return false;\n\n  // Return true.\n  return true;\n}\n\n// Flow wrappers that provide refinements using Predicate Functions.\n// These wrappers also assert that the type is PropertyDescriptor so that if this returns\n// true, then Flow can refine that the type of Desc as PropertyDescriptor.\n\nexport function IsGenericDescriptor(realm: Realm, Desc: ?Descriptor): boolean %checks {\n  return IsGenericDescriptorInternal(realm, Desc) && Desc instanceof PropertyDescriptor;\n}\n\nexport function IsAccessorDescriptor(realm: Realm, Desc: ?Descriptor): boolean %checks {\n  return IsAccessorDescriptorInternal(realm, Desc) && Desc instanceof PropertyDescriptor;\n}\n\nexport function IsDataDescriptor(realm: Realm, Desc: ?Descriptor): boolean %checks {\n  return IsDataDescriptorInternal(realm, Desc) && Desc instanceof PropertyDescriptor;\n}\n\n// ECMA262 9.1.3.1\nexport function OrdinaryIsExtensible(realm: Realm, O: ObjectValue): boolean {\n  // 1. Return the value of the [[Extensible]] internal slot of O.\n  return O.getExtensible();\n}\n\n// ECMA262 7.2.5\nexport function IsExtensible(realm: Realm, O: ObjectValue | AbstractObjectValue): boolean {\n  // 1. Assert: Type(O) is Object.\n\n  // 2. Return ? O.[[IsExtensible]]().\n  return O.$IsExtensible();\n}\n\n// ECMA262 7.2.3\nexport function IsCallable(realm: Realm, _func: Value): boolean {\n  let func = _func;\n  // 1. If Type(argument) is not Object, return false.\n  if (!func.mightBeObject()) return false;\n  if (HasCompatibleType(func, FunctionValue)) return true;\n  if (func.isSimpleObject()) return false;\n\n  if (func instanceof AbstractObjectValue && !func.values.isTop()) {\n    let result;\n    for (let element of func.values.getElements()) {\n      let isCallable = IsCallable(realm, element);\n      if (result === undefined) result = isCallable;\n      else if (result !== isCallable) func.throwIfNotConcreteObject();\n    }\n    if (result !== undefined) return result;\n  }\n\n  // 2. If argument has a [[Call]] internal method, return true.\n  func = func.throwIfNotConcreteObject();\n  if (func.$Call) return true;\n\n  // 3. Return false.\n  return false;\n}\n\n// ECMA262 7.2.4\nexport function IsConstructor(realm: Realm, _argument: Value): boolean {\n  let argument = _argument;\n  // 1. If Type(argument) is not Object, return false.\n  if (!argument.mightBeObject()) return false;\n\n  // 2. If argument has a [[Construct]] internal method, return true.\n  argument = argument.throwIfNotConcreteObject();\n  if (argument.$Construct) return true;\n\n  // 3. Return false.\n  return false;\n}\n\n// ECMA262 7.2.6\nexport function IsInteger(realm: Realm, argument: number): boolean {\n  // 1. If Type(argument) is not Number, return false.\n  invariant(typeof argument === \"number\", \"Type(argument) is not number\");\n\n  // 2. If argument is NaN, +∞, or -∞, return false.\n  if (isNaN(argument) || argument === +Infinity || argument === -Infinity) return false;\n\n  // 3. If floor(abs(argument)) ≠ abs(argument), return false.\n  if (Math.floor(Math.abs(argument)) !== Math.abs(argument)) return false;\n\n  // 4. Return true.\n  return true;\n}\n\n// ECMA262 7.2.7\nexport function IsPropertyKey(realm: Realm, arg: string | Value): boolean {\n  // We allow native strings to be passed around to avoid constructing a StringValue\n  if (typeof arg === \"string\") return true;\n\n  // 1. If Type(argument) is String, return true.\n  if (arg instanceof StringValue) return true;\n\n  // 2. If Type(argument) is Symbol, return true.\n  if (arg instanceof SymbolValue) return true;\n\n  if (arg instanceof AbstractValue) {\n    AbstractValue.reportIntrospectionError(arg);\n    throw new FatalError();\n  }\n\n  // 3. Return false.\n  return false;\n}\n\n// ECMA262 7.2.2\nexport function IsArray(realm: Realm, argument: Value): boolean {\n  // 1. If Type(argument) is not Object, return false.\n  if (!argument.mightBeObject()) return false;\n\n  // 2. If argument is an Array exotic object, return true.\n  if (argument instanceof ArrayValue || argument === realm.intrinsics.ArrayPrototype) return true;\n\n  // 3. If argument is a Proxy exotic object, then\n  if (argument instanceof ProxyValue) {\n    // a. If the value of the [[ProxyHandler]] internal slot of argument is null, throw a TypeError exception.\n    if (!argument.$ProxyHandler || argument.$ProxyHandler instanceof NullValue) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // b. Let target be the value of the [[ProxyTarget]] internal slot of argument.\n    let target = argument.$ProxyTarget;\n\n    // c. Return ? IsArray(target).\n    return IsArray(realm, target);\n  }\n\n  // 4. Return false.\n  if (argument instanceof AbstractValue && !argument.isSimpleObject()) argument.throwIfNotConcrete();\n  return false;\n}\n\n// ECMA262 14.6.1\nexport function IsInTailPosition(realm: Realm, node: BabelNodeCallExpression): boolean {\n  // TODO #1008: implement tail calls\n  return false;\n}\n\n// ECMA262 7.2.8\nexport function IsRegExp(realm: Realm, _argument: Value): boolean {\n  let argument = _argument;\n  // 1. If Type(argument) is not Object, return false.\n  if (!argument.mightBeObject()) return false;\n  argument = argument.throwIfNotObject();\n\n  // 2. Let isRegExp be ? Get(argument, @@match).\n  let isRegExp = Get(realm, argument, realm.intrinsics.SymbolMatch);\n\n  // 3. If isRegExp is not undefined, return ToBoolean(isRegExp).\n  if (isRegExp !== undefined) return To.ToBooleanPartial(realm, isRegExp) === true;\n\n  // 4. If argument has a [[RegExpMatcher]] internal slot, return true.\n  if (argument.$RegExpMatcher !== undefined) return true;\n\n  // 5. Return false.\n  return false;\n}\n\n// ECMA262 12.2.1.4 Static Semantics: IsIdentifierRef\n// ECMA262 12.3.1.4 Static Semantics: IsIdentifierRef\nexport function IsIdentifierRef(realm: Realm, node: BabelNodeLVal): boolean {\n  switch (node.type) {\n    // ECMA262 12.2.1.4 Static Semantics: IsIdentifierRef\n    case \"Identifier\":\n      return true;\n    // ECMA262 12.3.1.4 Static Semantics: IsIdentifierRef\n    case \"MemberExpression\":\n      return false;\n    default:\n      throw Error(\"Unexpected AST form : \" + node.type);\n  }\n}\n\n// 12.2.1.3 Static Semantics: IsFunctionDefinition\n// 12.2.1.3 Static Semantics: IsFunctionDefinition\n// 12.13 Binary Logical Operators\n// 12.3.1.2 Static Semantics: IsFunctionDefinition\n// 12.15.2 Static Semantics: IsFunctionDefinition\nexport function IsFunctionDefinition(realm: Realm, node: BabelNodeExpression): boolean {\n  switch (node.type) {\n    // 12.2.1.3 Static Semantics: IsFunctionDefinition\n    case \"ThisExpression\":\n    case \"Identifier\":\n    case \"StringLiteral\":\n    case \"NumericLiteral\":\n    case \"BooleanLiteral\":\n    case \"NullLiteral\":\n    case \"RegExpLiteral\":\n    case \"ArrayExpression\":\n    case \"ObjectExpression\":\n    case \"TemplateLiteral\":\n    case \"ConditionalExpression\":\n      return false;\n    // 12.2.1.3 Static Semantics: IsFunctionDefinition\n    case \"UpdateExpression\":\n      return false;\n    // 12.13 Binary Logical Operators\n    case \"BinaryExpression\":\n    case \"LogicalExpression\":\n      return false;\n    // 12.3.1.2 Static Semantics: IsFunctionDefinition\n    case \"MemberExpression\":\n    case \"CallExpression\":\n    case \"NewExpression\":\n    case \"MetaProperty\":\n    case \"TaggedTemplateExpression\":\n      return false;\n    //12.5.1 Static Semantics: IsFunctionDefinition\n    case \"UnaryExpression\":\n      return false;\n    //12.15.2 Static Semantics: IsFunctionDefinition\n    case \"AssignmentExpression\":\n      return false;\n    //12.16.1 Static Semantics: IsFunctionDefinition\n    case \"SequenceExpression\":\n      return false;\n    case \"ArrowFunctionExpression\":\n    case \"FunctionExpression\":\n      return true;\n    // 14.5.8 Static Semantics: IsFunctionDefinition\n    case \"ClassExpression\":\n      return true;\n    // JSX Extensions: http://facebook.github.io/jsx/\n    case \"JSXElement\":\n      return false;\n    default:\n      throw Error(\"Unexpected AST form : \" + node.type);\n  }\n}\n\n// ECMA262 14.1.10\nexport function IsAnonymousFunctionDefinition(realm: Realm, node: BabelNodeExpression): boolean {\n  // 1. If IsFunctionDefinition of production is false, return false.\n  if (!IsFunctionDefinition(realm, node)) return false;\n\n  // 2. Let hasName be the result of HasName of production.\n  let hasName = HasName(realm, node);\n\n  // 3. If hasName is true, return false.\n  if (hasName === true) return false;\n\n  // 4. Return true.\n  return true;\n}\n\n// ECMA262 9.4.2\nexport function IsArrayIndex(realm: Realm, P: PropertyKeyValue): boolean {\n  let key;\n  if (typeof P === \"string\") {\n    key = P;\n  } else if (P instanceof StringValue) {\n    key = P.value;\n  } else {\n    return false;\n  }\n\n  let i = To.ToUint32(realm, new StringValue(realm, key));\n  return i !== Math.pow(2, 32) - 1 && To.ToString(realm, new NumberValue(realm, i)) === key;\n}\n\n// ECMA262 25.4.1.6\nexport function IsPromise(realm: Realm, _x: Value): boolean {\n  let x = _x;\n  // 1. If Type(x) is not Object, return false.\n  if (!x.mightBeObject()) return false;\n\n  // 2. If x does not have a [[PromiseState]] internal slot, return false.\n  x = x.throwIfNotConcreteObject();\n  if (x.$PromiseState === undefined) return false;\n\n  // 3. Return true.\n  return true;\n}\n\n// ECMA262 24.1.1.2\nexport function IsDetachedBuffer(realm: Realm, arrayBuffer: ObjectValue): boolean {\n  // 1. Assert: Type(arrayBuffer) is Object and it has an [[ArrayBufferData]] internal slot.\n  invariant(arrayBuffer instanceof ObjectValue && \"$ArrayBufferData\" in arrayBuffer);\n\n  // 2. If arrayBuffer's [[ArrayBufferData]] internal slot is null, return true.\n  if (arrayBuffer.$ArrayBufferData === null) return true;\n\n  // 3. Return false.\n  return false;\n}\n\nexport function IsIntrospectionError(realm: Realm, _value: Value): boolean {\n  let value = _value;\n  if (!value.mightBeObject()) return false;\n  value = value.throwIfNotConcreteObject();\n  return value.$GetPrototypeOf() === realm.intrinsics.__IntrospectionErrorPrototype;\n}\n\nexport function IsStatic(classElement: BabelNodeClassMethod): boolean {\n  // $FlowFixMe need to backport static property to BabelNodeClassMethod\n  return classElement.static;\n}\n"],"file":"is.js"}