{"version":3,"sources":["../../src/methods/widen.js"],"names":["WidenImplementation","_widenArrays","realm","v1","v2","Value","_widenArraysOfValues","_widenArrayOfsMapEntries","a1","a2","n","Math","max","length","result","i","$Key","key1","$Value","val1","undefined","key2","val2","key3","widenValues","val3","wv","widenEffects","e1","e2","widenResults","bindings","widenBindings","modifiedBindings","properties","widenPropertyBindings","modifiedProperties","createdObjects","Set","generator","Generator","pathConditions","Effects","result1","result2","Reference","AbruptCompletion","SimpleNormalCompletion","val","value","JoinedNormalAndAbruptCompletions","FatalError","widenMaps","m1","m2","widen","m3","Map","forEach","key","map1","get","set","map2","has","b","b1","b2","l1","hasLeaked","l2","intrinsics","AbstractValue","kind","phiNode","deriveAbstract","types","values","skipInvariant","intrinsicName","phiName","operationDescriptor","id","Array","isArray","throwIfNotConcrete","createFromWidening","c1","c2","d1","d2","object","descriptor","empty","widenDescriptors","rval","pathNode","mightNotBeString","mightNotBeNumber","createFromWidenedProperty","StringValue","initVal","EmptyValue","ArrayValue","emitVoidExpression","dc","d2value","dcValue","d1value","containsEffects","containsResults","containsBindings","containsPropertyBindings","_containsValues","containsMap","f","entries","keys","containsBinding","containsPropertyBinding","InternalSlotDescriptor","PropertyDescriptor","_containsArray","e","containsArraysOfValue","_containsArrayOfsMapEntries","equals","isTypeCompatibleWith","getType","containsValue"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { Binding } from \"../environment.js\";\nimport { FatalError } from \"../errors.js\";\nimport type { Bindings, BindingEntry, EvaluationResult, PropertyBindings, CreatedObjects, Realm } from \"../realm.js\";\nimport { Effects } from \"../realm.js\";\nimport type { Descriptor, PropertyBinding } from \"../types.js\";\nimport { cloneDescriptor, equalDescriptors, PropertyDescriptor } from \"../descriptors.js\";\n\nimport { AbruptCompletion, JoinedNormalAndAbruptCompletions, SimpleNormalCompletion } from \"../completions.js\";\nimport { Reference } from \"../environment.js\";\nimport { IsDataDescriptor, StrictEqualityComparison } from \"./index.js\";\nimport { Generator, createOperationDescriptor } from \"../utils/generator.js\";\nimport { AbstractValue, ArrayValue, EmptyValue, Value, StringValue } from \"../values/index.js\";\n\nimport invariant from \"../invariant.js\";\nimport { InternalSlotDescriptor } from \"../descriptors.js\";\n\nexport class WidenImplementation {\n  _widenArrays(\n    realm: Realm,\n    v1: Array<Value> | Array<{ $Key: void | Value, $Value: void | Value }>,\n    v2: Array<Value> | Array<{ $Key: void | Value, $Value: void | Value }>\n  ): Array<Value> | Array<{ $Key: void | Value, $Value: void | Value }> {\n    if (v1[0] instanceof Value) {\n      invariant(v2[0] instanceof Value);\n      return this._widenArraysOfValues(realm, (v1: any), (v2: any));\n    }\n    invariant(!(v2[0] instanceof Value));\n    return this._widenArrayOfsMapEntries(realm, (v1: any), (v2: any));\n  }\n\n  _widenArrayOfsMapEntries(\n    realm: Realm,\n    a1: Array<{ $Key: void | Value, $Value: void | Value }>,\n    a2: Array<{ $Key: void | Value, $Value: void | Value }>\n  ): Array<{ $Key: void | Value, $Value: void | Value }> {\n    let n = Math.max((a1 && a1.length) || 0, (a2 && a2.length) || 0);\n    let result: Array<{ $Key: void | Value, $Value: void | Value }> = [];\n    for (let i = 0; i < n; i++) {\n      let { $Key: key1, $Value: val1 } = a1[i] || { $Key: undefined, $Value: undefined };\n      let { $Key: key2, $Value: val2 } = a2[i] || { $Key: undefined, $Value: undefined };\n      if (key1 === undefined && key2 === undefined) {\n        result[i] = { $Key: undefined, $Value: undefined };\n      } else {\n        if (key1 === undefined) key1 = key2;\n        else if (key2 === undefined) key2 = key1;\n        invariant(key1 !== undefined);\n        invariant(key2 !== undefined);\n        let key3 = this.widenValues(realm, key1, key2);\n        invariant(key3 instanceof Value);\n        if (val1 === undefined && val2 === undefined) {\n          result[i] = { $Key: key3, $Value: undefined };\n        } else {\n          if (val1 === undefined) val1 = val2;\n          else if (val2 === undefined) val2 = val1;\n          invariant(val1 !== undefined);\n          invariant(val2 !== undefined);\n          let val3 = this.widenValues(realm, val1, val2);\n          invariant(val3 === undefined || val3 instanceof Value);\n          result[i] = { $Key: key3, $Value: val3 };\n        }\n      }\n    }\n    return result;\n  }\n\n  _widenArraysOfValues(realm: Realm, a1: Array<Value>, a2: Array<Value>): Array<Value> {\n    let n = Math.max((a1 && a1.length) || 0, (a2 && a2.length) || 0);\n    let result = [];\n    for (let i = 0; i < n; i++) {\n      let wv = this.widenValues(realm, a1[i], a2[i]);\n      invariant(wv === undefined || wv instanceof Value);\n      result[i] = wv;\n    }\n    return result;\n  }\n\n  // Returns a new effects summary that includes both e1 and e2.\n  widenEffects(realm: Realm, e1: Effects, e2: Effects): Effects {\n    let result = this.widenResults(realm, e1.result, e2.result);\n    let bindings = this.widenBindings(realm, e1.modifiedBindings, e2.modifiedBindings);\n    let properties = this.widenPropertyBindings(\n      realm,\n      e1.modifiedProperties,\n      e2.modifiedProperties,\n      e1.createdObjects,\n      e2.createdObjects\n    );\n    let createdObjects = new Set(); // Top, since the empty set knows nothing. There is no other choice for widen.\n    let generator = new Generator(realm, \"widen\", realm.pathConditions); // code subject to widening will be generated somewhere else\n    return new Effects(result, generator, bindings, properties, createdObjects);\n  }\n\n  widenResults(\n    realm: Realm,\n    result1: EvaluationResult,\n    result2: EvaluationResult\n  ): JoinedNormalAndAbruptCompletions | SimpleNormalCompletion {\n    invariant(!(result1 instanceof Reference || result2 instanceof Reference), \"loop bodies should not result in refs\");\n    invariant(\n      !(result1 instanceof AbruptCompletion || result2 instanceof AbruptCompletion),\n      \"if a loop iteration ends abruptly, there is no need for fixed point computation\"\n    );\n    if (result1 instanceof SimpleNormalCompletion && result2 instanceof SimpleNormalCompletion) {\n      let val = this.widenValues(realm, result1.value, result2.value);\n      invariant(val instanceof Value);\n      return new SimpleNormalCompletion(val);\n    }\n    if (result1 instanceof JoinedNormalAndAbruptCompletions || result2 instanceof JoinedNormalAndAbruptCompletions) {\n      //todo: #1174 figure out how to deal with loops that have embedded conditional exits\n      // widen join pathConditions\n      // widen normal result and Effects\n      // use abrupt part of result2, depend stability to make this safe. See below.\n      throw new FatalError();\n    }\n    invariant(false);\n  }\n\n  widenMaps<K, V>(m1: Map<K, V>, m2: Map<K, V>, widen: (K, void | V, void | V) => V): Map<K, V> {\n    let m3: Map<K, V> = new Map();\n    m1.forEach((val1, key, map1) => {\n      let val2 = m2.get(key);\n      let val3 = widen(key, val1, val2);\n      m3.set(key, val3);\n    });\n    m2.forEach((val2, key, map2) => {\n      if (!m1.has(key)) {\n        m3.set(key, widen(key, undefined, val2));\n      }\n    });\n    return m3;\n  }\n\n  widenBindings(realm: Realm, m1: Bindings, m2: Bindings): Bindings {\n    let widen = (b: Binding, b1: void | BindingEntry, b2: void | BindingEntry) => {\n      let l1 = b1 === undefined ? b.hasLeaked : b1.hasLeaked;\n      let l2 = b2 === undefined ? b.hasLeaked : b2.hasLeaked;\n      let hasLeaked = l1 || l2; // If either has leaked, then this binding has leaked.\n      let v1 = b1 === undefined || b1.value === undefined ? b.value : b1.value;\n      invariant(b2 !== undefined); // Local variables are not going to get deleted as a result of widening\n      let v2 = b2.value;\n      invariant(v2 !== undefined);\n      let result = this.widenValues(realm, v1 || realm.intrinsics.undefined, v2);\n      if (result instanceof AbstractValue && result.kind === \"widened\") {\n        let phiNode = b.phiNode;\n        if (phiNode === undefined) {\n          // Create a temporal location for binding\n          let generator = realm.generator;\n          invariant(generator !== undefined);\n          phiNode = generator.deriveAbstract(\n            result.types,\n            result.values,\n            [b.value || realm.intrinsics.undefined],\n            createOperationDescriptor(\"SINGLE_ARG\"),\n            { skipInvariant: true }\n          );\n          b.phiNode = phiNode;\n        }\n        // Let the widened value be a reference to the phiNode of the binding\n        invariant(phiNode.intrinsicName !== undefined);\n        let phiName = phiNode.intrinsicName;\n        result.intrinsicName = phiName;\n        result.operationDescriptor = createOperationDescriptor(\"WIDENED_IDENTIFIER\", { id: phiName });\n      }\n      invariant(result instanceof Value);\n      return { hasLeaked, value: result };\n    };\n    return this.widenMaps(m1, m2, widen);\n  }\n\n  // Returns an abstract value that includes both v1 and v2 as potential values.\n  widenValues(\n    realm: Realm,\n    v1: Value | Array<Value> | Array<{ $Key: void | Value, $Value: void | Value }>,\n    v2: Value | Array<Value> | Array<{ $Key: void | Value, $Value: void | Value }>\n  ): Value | Array<Value> | Array<{ $Key: void | Value, $Value: void | Value }> {\n    if (Array.isArray(v1) || Array.isArray(v2)) {\n      invariant(Array.isArray(v1));\n      invariant(Array.isArray(v2));\n      return this._widenArrays(realm, ((v1: any): Array<Value>), ((v2: any): Array<Value>));\n    }\n    invariant(v1 instanceof Value);\n    invariant(v2 instanceof Value);\n    if (\n      !(v1 instanceof AbstractValue) &&\n      !(v2 instanceof AbstractValue) &&\n      StrictEqualityComparison(realm, v1.throwIfNotConcrete(), v2.throwIfNotConcrete())\n    ) {\n      return v1; // no need to widen a loop invariant value\n    } else {\n      invariant(v1 && v2);\n      return AbstractValue.createFromWidening(realm, v1, v2);\n    }\n  }\n\n  widenPropertyBindings(\n    realm: Realm,\n    m1: PropertyBindings,\n    m2: PropertyBindings,\n    c1: CreatedObjects,\n    c2: CreatedObjects\n  ): PropertyBindings {\n    let widen = (b: PropertyBinding, d1: void | Descriptor, d2: void | Descriptor) => {\n      if (d1 === undefined && d2 === undefined) return undefined;\n      // If the PropertyBinding object has been freshly allocated do not widen (that happens in AbstractObjectValue)\n      if (d1 === undefined) {\n        invariant(d2 !== undefined);\n        if (c2.has(b.object)) return d2; // no widen\n        if (b.descriptor !== undefined && m1.has(b)) {\n          // property was present in (n-1)th iteration and deleted in nth iteration\n          d1 = cloneDescriptor(b.descriptor.throwIfNotConcrete(realm));\n          invariant(d1 !== undefined);\n          d1.value = realm.intrinsics.empty;\n        } else {\n          // no write to property in nth iteration, use the value from the (n-1)th iteration\n          d1 = b.descriptor;\n          if (d1 === undefined) {\n            d1 = cloneDescriptor(d2.throwIfNotConcrete(realm));\n            invariant(d1 !== undefined);\n            d1.value = realm.intrinsics.empty;\n          }\n        }\n      }\n      if (d2 === undefined) {\n        if (c1.has(b.object)) return d1; // no widen\n        if (m2.has(b)) {\n          // property was present in nth iteration and deleted in (n+1)th iteration\n          d2 = cloneDescriptor(d1.throwIfNotConcrete(realm));\n          invariant(d2 !== undefined);\n          d2.value = realm.intrinsics.empty;\n        } else {\n          // no write to property in (n+1)th iteration, use the value from the nth iteration\n          d2 = d1;\n        }\n        invariant(d2 !== undefined);\n      }\n      let result = this.widenDescriptors(realm, d1, d2);\n      if (result && result.value instanceof AbstractValue && result.value.kind === \"widened\") {\n        let rval = result.value;\n        let pathNode = b.pathNode;\n        if (pathNode === undefined) {\n          //Since properties already have mutable storage locations associated with them, we do not\n          //need phi nodes. What we need is an abstract value with a operation descriptor that results in a memberExpression\n          //that resolves to the storage location of the property.\n\n          // For now, we only handle loop invariant properties\n          //i.e. properties where the member expresssion does not involve any values written to inside the loop.\n          let key = b.key;\n          if (\n            typeof key === \"string\" ||\n            (key instanceof AbstractValue && !(key.mightNotBeString() && key.mightNotBeNumber()))\n          ) {\n            if (typeof key === \"string\") {\n              pathNode = AbstractValue.createFromWidenedProperty(\n                realm,\n                rval,\n                [b.object, new StringValue(realm, key)],\n                createOperationDescriptor(\"WIDEN_PROPERTY\")\n              );\n            } else {\n              invariant(key instanceof AbstractValue);\n              pathNode = AbstractValue.createFromWidenedProperty(\n                realm,\n                rval,\n                [b.object, key],\n                createOperationDescriptor(\"WIDEN_PROPERTY\")\n              );\n            }\n            // The value of the property at the start of the loop needs to be written to the property\n            // before the loop commences, otherwise the memberExpression will result in an undefined value.\n            let generator = realm.generator;\n            invariant(generator !== undefined);\n            let initVal = (b.descriptor && b.descriptor.throwIfNotConcrete(realm).value) || realm.intrinsics.empty;\n            if (!(initVal instanceof EmptyValue)) {\n              if (key === \"length\" && b.object instanceof ArrayValue) {\n                // do nothing, the array length will already be initialized\n              } else if (typeof key === \"string\") {\n                generator.emitVoidExpression(\n                  rval.types,\n                  rval.values,\n                  [b.object, new StringValue(realm, key), initVal],\n                  createOperationDescriptor(\"WIDEN_PROPERTY_ASSIGNMENT\")\n                );\n              } else {\n                invariant(key instanceof AbstractValue);\n                generator.emitVoidExpression(\n                  rval.types,\n                  rval.values,\n                  [b.object, key, initVal],\n                  createOperationDescriptor(\"WIDEN_PROPERTY_ASSIGNMENT\")\n                );\n              }\n            }\n          } else {\n            throw new FatalError(\"todo: handle the case where key is an abstract value\");\n          }\n          b.pathNode = pathNode;\n        }\n        result.value = pathNode;\n      }\n      return result;\n    };\n    return this.widenMaps(m1, m2, widen);\n  }\n\n  widenDescriptors(realm: Realm, d1: void | Descriptor, d2: Descriptor): void | PropertyDescriptor {\n    d2 = d2.throwIfNotConcrete(realm);\n    if (d1 === undefined) {\n      // d2 is a property written to only in the (n+1)th iteration\n      if (!IsDataDescriptor(realm, d2)) return d2; // accessor properties need not be widened.\n      let dc = cloneDescriptor(d2);\n      invariant(dc !== undefined);\n      let d2value = dc.value;\n      invariant(d2value !== undefined); // because IsDataDescriptor is true for d2/dc\n      let dcValue = this.widenValues(realm, d2value, d2value);\n      invariant(dcValue instanceof Value);\n      dc.value = dcValue;\n      return dc;\n    } else {\n      d1 = d1.throwIfNotConcrete(realm);\n      if (equalDescriptors(d1, d2)) {\n        if (!IsDataDescriptor(realm, d1)) return d1; // identical accessor properties need not be widened.\n        // equalDescriptors plus IsDataDescriptor guarantee that both have value props and if you have a value prop is value is defined.\n        let dc = cloneDescriptor(d1);\n        invariant(dc !== undefined);\n        let d1value = d1.value;\n        invariant(d1value !== undefined);\n        let d2value = d2.value;\n        invariant(d2value !== undefined);\n        let dcValue = this.widenValues(realm, d1value, d2value);\n        invariant(dcValue instanceof Value);\n        dc.value = dcValue;\n        return dc;\n      }\n      //todo: #1174 if we get here, the loop body contains a call to create a property and different iterations\n      // create them differently. That seems beyond what a fixpoint computation can reasonably handle without\n      // losing precision. Report an error here.\n      throw new FatalError();\n    }\n  }\n\n  // If e2 is the result of a loop iteration starting with effects e1 and it has a subset of elements of e1,\n  // then we have reached a fixed point and no further calls to widen are needed. e1/e2 represent a general\n  // summary of the loop, regardless of how many iterations will be performed at runtime.\n  containsEffects(e1: Effects, e2: Effects): boolean {\n    if (!this.containsResults(e1.result, e2.result)) return false;\n    if (!this.containsBindings(e1.modifiedBindings, e2.modifiedBindings)) return false;\n    if (\n      !this.containsPropertyBindings(e1.modifiedProperties, e2.modifiedProperties, e1.createdObjects, e2.createdObjects)\n    )\n      return false;\n    return true;\n  }\n\n  containsResults(result1: EvaluationResult, result2: EvaluationResult): boolean {\n    if (result1 instanceof SimpleNormalCompletion && result2 instanceof SimpleNormalCompletion)\n      return this._containsValues(result1.value, result2.value);\n    return false;\n  }\n\n  containsMap<K, V>(m1: Map<K, V>, m2: Map<K, V>, f: (void | V, void | V) => boolean): boolean {\n    for (const [key1, val1] of m1.entries()) {\n      if (val1 === undefined) continue; // deleted\n      let val2 = m2.get(key1);\n      if (val2 === undefined) continue; // A key that disappears has been widened away into the unknown key\n      if (!f(val1, val2)) return false;\n    }\n    for (const key2 of m2.keys()) {\n      if (!m1.has(key2)) return false;\n    }\n    return true;\n  }\n\n  containsBindings(m1: Bindings, m2: Bindings): boolean {\n    let containsBinding = (b1: void | BindingEntry, b2: void | BindingEntry) => {\n      if (\n        b1 === undefined ||\n        b2 === undefined ||\n        b1.value === undefined ||\n        b2.value === undefined ||\n        !this._containsValues(b1.value, b2.value) ||\n        b1.hasLeaked !== b2.hasLeaked\n      ) {\n        return false;\n      }\n      return true;\n    };\n    return this.containsMap(m1, m2, containsBinding);\n  }\n\n  containsPropertyBindings(\n    m1: PropertyBindings,\n    m2: PropertyBindings,\n    c1: CreatedObjects,\n    c2: CreatedObjects\n  ): boolean {\n    let containsPropertyBinding = (d1: void | Descriptor, d2: void | Descriptor) => {\n      let v1, v2;\n      if (d1 instanceof InternalSlotDescriptor || d2 instanceof InternalSlotDescriptor) {\n        if (d1 !== undefined) {\n          invariant(d1 instanceof InternalSlotDescriptor);\n          v1 = d1.value;\n        }\n        if (d2 !== undefined) {\n          invariant(d2 instanceof InternalSlotDescriptor);\n          v2 = d2.value;\n        }\n      }\n      if (d1 instanceof PropertyDescriptor) {\n        v1 = d1.value;\n      }\n      if (d2 instanceof PropertyDescriptor) {\n        v2 = d2.value;\n      }\n      if (v1 === undefined) {\n        return v2 === undefined;\n      }\n      if (v1 instanceof Value && v2 instanceof Value) return this._containsValues(v1, v2);\n      if (Array.isArray(v1) && Array.isArray(v2)) {\n        return this._containsArray(((v1: any): Array<Value>), ((v2: any): Array<Value>));\n      }\n      return v2 === undefined;\n    };\n    for (const [key1, val1] of m1.entries()) {\n      if (val1 === undefined) continue; // deleted\n      let val2 = m2.get(key1);\n      if (val2 === undefined) continue; // A key that disappears has been widened away into the unknown key\n      if (c1.has(key1.object)) {\n        continue;\n      }\n      if (!containsPropertyBinding(val1, val2)) return false;\n    }\n    for (const key2 of m2.keys()) {\n      if (c2.has(key2.object)) {\n        continue;\n      }\n      if (!m1.has(key2)) return false;\n    }\n    return true;\n  }\n\n  _containsArray(\n    v1: void | Array<Value> | Array<{ $Key: void | Value, $Value: void | Value }>,\n    v2: void | Array<Value> | Array<{ $Key: void | Value, $Value: void | Value }>\n  ): boolean {\n    let e = (v1 && v1[0]) || (v2 && v2[0]);\n    if (e instanceof Value) return this.containsArraysOfValue((v1: any), (v2: any));\n    else return this._containsArrayOfsMapEntries((v1: any), (v2: any));\n  }\n\n  _containsArrayOfsMapEntries(\n    realm: Realm,\n    a1: void | Array<{ $Key: void | Value, $Value: void | Value }>,\n    a2: void | Array<{ $Key: void | Value, $Value: void | Value }>\n  ): boolean {\n    let empty = realm.intrinsics.empty;\n    let n = Math.max((a1 && a1.length) || 0, (a2 && a2.length) || 0);\n    for (let i = 0; i < n; i++) {\n      let { $Key: key1, $Value: val1 } = (a1 && a1[i]) || { $Key: empty, $Value: empty };\n      let { $Key: key2, $Value: val2 } = (a2 && a2[i]) || { $Key: empty, $Value: empty };\n      if (key1 === undefined) {\n        if (key2 !== undefined) return false;\n      } else {\n        if (key1 instanceof Value && key2 instanceof Value && key1.equals(key2)) {\n          if (val1 instanceof Value && val2 instanceof Value && this._containsValues(val1, val2)) continue;\n        }\n        return false;\n      }\n    }\n    return true;\n  }\n\n  containsArraysOfValue(realm: Realm, a1: void | Array<Value>, a2: void | Array<Value>): boolean {\n    let n = Math.max((a1 && a1.length) || 0, (a2 && a2.length) || 0);\n    for (let i = 0; i < n; i++) {\n      let [val1, val2] = [a1 && a1[i], a2 && a2[i]];\n      if (val1 instanceof Value && val2 instanceof Value && !this._containsValues(val1, val2)) return false;\n    }\n    return true;\n  }\n\n  _containsValues(val1: Value, val2: Value) {\n    if (val1 instanceof AbstractValue) {\n      if (\n        !Value.isTypeCompatibleWith(val2.getType(), val1.getType()) &&\n        !Value.isTypeCompatibleWith(val1.getType(), val2.getType())\n      )\n        return false;\n      return val1.values.containsValue(val2);\n    }\n    return val1.equals(val2);\n  }\n}\n"],"file":"widen.js"}