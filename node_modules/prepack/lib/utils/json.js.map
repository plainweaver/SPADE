{"version":3,"sources":["../../src/utils/json.js"],"names":["mergeAdjacentJSONTextNodes","node","removeFunctions","visitedNodes","undefined","Set","has","add","Array","isArray","arr","length","concatString","i","child","push","key","value"],"mappings":";;;;;;;AAAA;;;;;;;;AAaA;AACO,SAASA,0BAAT,CAAoCC,IAApC,EAAgDC,eAAhD,EAA0EC,YAA1E,EAA+G;AACpH,MAAIA,YAAY,KAAKC,SAArB,EAAgC;AAC9BD,IAAAA,YAAY,GAAG,IAAIE,GAAJ,EAAf;AACD;;AACD,MAAIF,YAAY,CAACG,GAAb,CAAiBL,IAAjB,CAAJ,EAA4B;AAC1B,WAAOA,IAAP;AACD;;AACDE,EAAAA,YAAY,CAACI,GAAb,CAAiBN,IAAjB,EAPoH,CASpH;;AACA,MAAIO,KAAK,CAACC,OAAN,CAAcR,IAAd,CAAJ,EAAyB;AACvB;AACA,QAAIS,GAAG,GAAG,EAAV;AACA,QAAIC,MAAM,GAAGV,IAAI,CAACU,MAAlB;AACA,QAAIC,YAAY,GAAG,IAAnB;AACA,QAAIC,CAAC,GAAG,CAAC,CAAT;;AACA,WAAOA,CAAC,KAAKF,MAAb,EAAqB;AACnB,UAAIG,KAAK,GAAGb,IAAI,CAACY,CAAD,CAAhB;;AACA,UAAI,OAAOC,KAAP,KAAiB,QAAjB,IAA6B,OAAOA,KAAP,KAAiB,QAAlD,EAA4D;AAC1D,YAAIF,YAAY,KAAK,IAArB,EAA2B;AACzBA,UAAAA,YAAY,IAAIE,KAAhB;AACD,SAFD,MAEO;AACLF,UAAAA,YAAY,GAAGE,KAAf;AACD;AACF,OAND,MAMO,IAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,KAAK,IAA3C,EAAiD;AACtD,YAAIF,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,EAA9C,EAAkD;AAChDF,UAAAA,GAAG,CAACK,IAAJ,CAASH,YAAT;AACAA,UAAAA,YAAY,GAAG,IAAf;AACD;;AACDF,QAAAA,GAAG,CAACK,IAAJ,CAAWf,0BAA0B,CAACc,KAAD,EAAQZ,eAAR,EAAyBC,YAAzB,CAArC;AACD;AACF;;AACD,QAAIS,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,EAA9C,EAAkD;AAChDF,MAAAA,GAAG,CAACK,IAAJ,CAASH,YAAT;AACD;;AACD,WAAOF,GAAP;AACD,GA1BD,MA0BO;AACL,SAAK,IAAIM,GAAT,IAAgBf,IAAhB,EAAsB;AACpB,UAAIgB,KAAK,GAAGhB,IAAI,CAACe,GAAD,CAAhB;;AACA,UAAI,OAAOC,KAAP,KAAiB,UAArB,EAAiC;AAC/B,YAAIf,eAAJ,EAAqB;AACnB,iBAAOD,IAAI,CAACe,GAAD,CAAX;AACD,SAFD,MAEO;AACLf,UAAAA,IAAI,CAACe,GAAD,CAAJ,GAAY,UAAZ;AACD;AACF,OAND,MAMO,IAAI,OAAOC,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,KAAK,IAA3C,EAAiD;AACtDhB,QAAAA,IAAI,CAACe,GAAD,CAAJ,GAAchB,0BAA0B,CAAGiB,KAAH,EAAuBf,eAAvB,EAAwCC,YAAxC,CAAxC;AACD;AACF;AACF;;AACD,SAAOF,IAAP;AACD","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\ntype JSONValue = Array<JSONValue> | string | number | JSON;\ntype JSON = { [key: string]: JSONValue };\n\n// this will mutate the original JSON object\nexport function mergeAdjacentJSONTextNodes(node: JSON, removeFunctions: boolean, visitedNodes?: Set<JSON>): JSONValue {\n  if (visitedNodes === undefined) {\n    visitedNodes = new Set();\n  }\n  if (visitedNodes.has(node)) {\n    return node;\n  }\n  visitedNodes.add(node);\n\n  // we merge adjacent text nodes\n  if (Array.isArray(node)) {\n    // we create a new array rather than mutating the original\n    let arr = [];\n    let length = node.length;\n    let concatString = null;\n    let i = -1;\n    while (i++ < length) {\n      let child = node[i];\n      if (typeof child === \"string\" || typeof child === \"number\") {\n        if (concatString !== null) {\n          concatString += child;\n        } else {\n          concatString = child;\n        }\n      } else if (typeof child === \"object\" && child !== null) {\n        if (concatString !== null && concatString !== \"\") {\n          arr.push(concatString);\n          concatString = null;\n        }\n        arr.push(((mergeAdjacentJSONTextNodes(child, removeFunctions, visitedNodes): any): JSON));\n      }\n    }\n    if (concatString !== null && concatString !== \"\") {\n      arr.push(concatString);\n    }\n    return arr;\n  } else {\n    for (let key in node) {\n      let value = node[key];\n      if (typeof value === \"function\") {\n        if (removeFunctions) {\n          delete node[key];\n        } else {\n          node[key] = \"function\";\n        }\n      } else if (typeof value === \"object\" && value !== null) {\n        node[key] = ((mergeAdjacentJSONTextNodes(((value: any): JSON), removeFunctions, visitedNodes): any): JSON);\n      }\n    }\n  }\n  return node;\n}\n"],"file":"json.js"}