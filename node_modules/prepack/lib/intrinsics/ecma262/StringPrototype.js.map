{"version":3,"sources":["../../../src/intrinsics/ecma262/StringPrototype.js"],"names":["sliceTemplateSrc","splitTemplateSrc","realm","obj","$StringData","intrinsics","emptyString","defineNativeProperty","zero","defineNativeMethod","context","pos","O","S","To","ToString","throwIfNotConcrete","position","ToInteger","size","length","StringValue","charAt","NaN","NumberValue","charCodeAt","isCompatibleWith","MOBILE_JSC_VERSION","undefined","codePointAt","args","argCount","R","next","shift","nextString","ToStringPartial","searchString","endPosition","isRegExp","createErrorThrowCompletion","TypeError","searchStr","len","UndefinedValue","end","Math","min","max","searchLength","start","false","substr","true","searchLen","k","found","j","indexOf","numPos","ToNumber","isNaN","Infinity","lastIndexOf","that","That","localeCompare","regexp","NullValue","matcher","SymbolMatch","mightBeUndefined","rx","form","f","RangeError","normalize","maxLength","fillString","intMaxLength","ToLength","stringLength","filler","fillLen","truncatedStringFiller","repeat","ceil","count","n","isFinite","T","searchValue","replaceValue","replStr","replacer","SymbolReplace","string","functionalReplace","replaceValueString","matched","replValue","captures","tailPos","newString","searcher","SymbolSearch","AbstractValue","getType","absVal","createFromTemplate","convertToTemporalIfArgsAreTemporal","intStart","intEnd","from","to","span","separator","limit","ObjectValue","splitter","SymbolSplit","A","Create","ArrayCreate","lengthA","lim","pow","ToUint32","s","p","CreateDataProperty","z","q","e","substring","finalStart","finalEnd","frm","slice","toCase","type","locales","serialize","useAbstractInterpretation","reportIntrospectionError","FatalError","target","thisStringValue","trim","SymbolIterator","CreateStringIterator","resultLength","name","CreateHTML","color","url"],"mappings":";;;;;;;AAWA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AArBA;;;;;;;;AAuBA,MAAMA,gBAAgB,GAAG,gBAAzB;AACA,MAAMC,gBAAgB,GAAG,gBAAzB;;AAEe,kBAASC,KAAT,EAAuBC,GAAvB,EAAsD;AACnE;AACAA,EAAAA,GAAG,CAACC,WAAJ,GAAkBF,KAAK,CAACG,UAAN,CAAiBC,WAAnC,CAFmE,CAInE;;AACAH,EAAAA,GAAG,CAACI,oBAAJ,CAAyB,QAAzB,EAAmCL,KAAK,CAACG,UAAN,CAAiBG,IAApD,EALmE,CAOnE;;AACAL,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,QAAvB,EAAiC,CAAjC,EAAoC,CAACC,OAAD,EAAU,CAACC,GAAD,CAAV,KAAoB;AACtD;AACA,QAAIC,CAAC,GAAG,sCAAuBV,KAAvB,EAA8BQ,OAA9B,CAAR,CAFsD,CAItD;;AACA,QAAIG,CAAC,GAAGC,eAAGC,QAAH,CAAYb,KAAZ,EAAmBU,CAAC,CAACI,kBAAF,EAAnB,CAAR,CALsD,CAOtD;;;AACA,QAAIC,QAAQ,GAAGH,eAAGI,SAAH,CAAahB,KAAb,EAAoBS,GAApB,CAAf,CARsD,CAUtD;;;AACA,QAAIQ,IAAI,GAAGN,CAAC,CAACO,MAAb,CAXsD,CAatD;;AACA,QAAIH,QAAQ,GAAG,CAAX,IAAgBA,QAAQ,IAAIE,IAAhC,EAAsC,OAAOjB,KAAK,CAACG,UAAN,CAAiBC,WAAxB,CAdgB,CAgBtD;;AACA,WAAO,IAAIe,kBAAJ,CAAgBnB,KAAhB,EAAuBW,CAAC,CAACS,MAAF,CAASL,QAAT,CAAvB,CAAP;AACD,GAlBD,EARmE,CA4BnE;;AACAd,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,YAAvB,EAAqC,CAArC,EAAwC,CAACC,OAAD,EAAU,CAACC,GAAD,CAAV,KAAoB;AAC1D;AACA,QAAIC,CAAC,GAAG,sCAAuBV,KAAvB,EAA8BQ,OAA9B,CAAR,CAF0D,CAI1D;;AACA,QAAIG,CAAC,GAAGC,eAAGC,QAAH,CAAYb,KAAZ,EAAmBU,CAAC,CAACI,kBAAF,EAAnB,CAAR,CAL0D,CAO1D;;;AACA,QAAIC,QAAQ,GAAGH,eAAGI,SAAH,CAAahB,KAAb,EAAoBS,GAApB,CAAf,CAR0D,CAU1D;;;AACA,QAAIQ,IAAI,GAAGN,CAAC,CAACO,MAAb,CAX0D,CAa1D;;AACA,QAAIH,QAAQ,GAAG,CAAX,IAAgBA,QAAQ,IAAIE,IAAhC,EAAsC,OAAOjB,KAAK,CAACG,UAAN,CAAiBkB,GAAxB,CAdoB,CAgB1D;AACA;;AACA,WAAO,IAAIC,kBAAJ,CAAgBtB,KAAhB,EAAuBW,CAAC,CAACY,UAAF,CAAaR,QAAb,CAAvB,CAAP;AACD,GAnBD,EA7BmE,CAkDnE;;AACA,MAAI,CAACf,KAAK,CAACwB,gBAAN,CAAuBxB,KAAK,CAACyB,kBAA7B,CAAD,IAAqD,CAACzB,KAAK,CAACwB,gBAAN,CAAuB,QAAvB,CAA1D,EACEvB,GAAG,CAACM,kBAAJ,CAAuB,aAAvB,EAAsC,CAAtC,EAAyC,CAACC,OAAD,EAAU,CAACC,GAAD,CAAV,KAAoB;AAC3D;AACA,QAAIC,CAAC,GAAG,sCAAuBV,KAAvB,EAA8BQ,OAA9B,CAAR,CAF2D,CAI3D;;AACA,QAAIG,CAAC,GAAGC,eAAGC,QAAH,CAAYb,KAAZ,EAAmBU,CAAC,CAACI,kBAAF,EAAnB,CAAR,CAL2D,CAO3D;;;AACA,QAAIC,QAAQ,GAAGH,eAAGI,SAAH,CAAahB,KAAb,EAAoBS,GAApB,CAAf,CAR2D,CAU3D;;;AACA,QAAIQ,IAAI,GAAGN,CAAC,CAACO,MAAb,CAX2D,CAa3D;;AACA,QAAIH,QAAQ,GAAG,CAAX,IAAgBA,QAAQ,IAAIE,IAAhC,EAAsC,OAAOjB,KAAK,CAACG,UAAN,CAAiBuB,SAAxB,CAdqB,CAgB3D;AACA;AACA;AACA;AACA;;AACA,WAAO,IAAIJ,kBAAJ,CAAgBtB,KAAhB,EAAuBW,CAAC,CAACgB,WAAF,CAAcZ,QAAd,CAAvB,CAAP;AACD,GAtBD,EApDiE,CA4EnE;;AACAd,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,QAAvB,EAAiC,CAAjC,EAAoC,CAACC,OAAD,EAAUoB,IAAV,EAAgBC,QAAhB,KAA6B;AAC/D;AACA,QAAInB,CAAC,GAAG,sCAAuBV,KAAvB,EAA8BQ,OAA9B,CAAR,CAF+D,CAI/D;;AACA,QAAIG,CAAC,GAAGC,eAAGC,QAAH,CAAYb,KAAZ,EAAmBU,CAAC,CAACI,kBAAF,EAAnB,CAAR,CAL+D,CAO/D;;;AACAc,IAAAA,IAAI,GAAGC,QAAQ,KAAK,CAAb,GAAiB,EAAjB,GAAsBD,IAA7B,CAR+D,CAU/D;;AACA,QAAIE,CAAC,GAAGnB,CAAR,CAX+D,CAa/D;;AACA,WAAOiB,IAAI,CAACV,MAAZ,EAAoB;AAClB;AACA,UAAIa,IAAI,GAAGH,IAAI,CAACI,KAAL,EAAX,CAFkB,CAIlB;;AACA,UAAIC,UAAU,GAAGrB,eAAGsB,eAAH,CAAmBlC,KAAnB,EAA0B+B,IAA1B,CAAjB,CALkB,CAOlB;;;AACAD,MAAAA,CAAC,GAAGA,CAAC,GAAGG,UAAR;AACD,KAvB8D,CAyB/D;;;AACA,WAAO,IAAId,kBAAJ,CAAgBnB,KAAhB,EAAuB8B,CAAvB,CAAP;AACD,GA3BD,EA7EmE,CA0GnE;;AACA,MAAI,CAAC9B,KAAK,CAACwB,gBAAN,CAAuBxB,KAAK,CAACyB,kBAA7B,CAAD,IAAqD,CAACzB,KAAK,CAACwB,gBAAN,CAAuB,QAAvB,CAA1D,EACEvB,GAAG,CAACM,kBAAJ,CAAuB,UAAvB,EAAmC,CAAnC,EAAsC,CAACC,OAAD,EAAU,CAAC2B,YAAD,EAAeC,WAAf,CAAV,KAA0C;AAC9E;AACA,QAAI1B,CAAC,GAAG,sCAAuBV,KAAvB,EAA8BQ,OAA9B,CAAR,CAF8E,CAI9E;;AACA,QAAIG,CAAC,GAAGC,eAAGC,QAAH,CAAYb,KAAZ,EAAmBU,CAAC,CAACI,kBAAF,EAAnB,CAAR,CAL8E,CAO9E;;;AACA,QAAIuB,QAAQ,GAAG,kBAASrC,KAAT,EAAgBmC,YAAhB,CAAf,CAR8E,CAU9E;;AACA,QAAIE,QAAJ,EAAc;AACZ,YAAMrC,KAAK,CAACsC,0BAAN,CAAiCtC,KAAK,CAACG,UAAN,CAAiBoC,SAAlD,EAA6D,kBAA7D,CAAN;AACD,KAb6E,CAe9E;;;AACA,QAAIC,SAAS,GAAG5B,eAAGsB,eAAH,CAAmBlC,KAAnB,EAA0BmC,YAA1B,CAAhB,CAhB8E,CAkB9E;;;AACA,QAAIM,GAAG,GAAG9B,CAAC,CAACO,MAAZ,CAnB8E,CAqB9E;;AACA,QAAIT,GAAJ;;AACA,QAAI,CAAC2B,WAAD,IAAgBA,WAAW,YAAYM,qBAA3C,EAA2D;AACzDjC,MAAAA,GAAG,GAAGgC,GAAN;AACD,KAFD,MAEO;AACLhC,MAAAA,GAAG,GAAGG,eAAGI,SAAH,CAAahB,KAAb,EAAoBoC,WAAW,CAACtB,kBAAZ,EAApB,CAAN;AACD,KA3B6E,CA6B9E;;;AACA,QAAI6B,GAAG,GAAGC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASrC,GAAT,EAAc,CAAd,CAAT,EAA2BgC,GAA3B,CAAV,CA9B8E,CAgC9E;;AACA,QAAIM,YAAY,GAAGP,SAAS,CAACtB,MAA7B,CAjC8E,CAmC9E;;AACA,QAAI8B,KAAK,GAAGL,GAAG,GAAGI,YAAlB,CApC8E,CAsC9E;;AACA,QAAIC,KAAK,GAAG,CAAZ,EAAe,OAAOhD,KAAK,CAACG,UAAN,CAAiB8C,KAAxB,CAvC+D,CAyC9E;AACA;;AACA,QAAItC,CAAC,CAACuC,MAAF,CAASF,KAAT,EAAgBD,YAAhB,MAAkCP,SAAtC,EAAiD,OAAOxC,KAAK,CAACG,UAAN,CAAiBgD,IAAxB,CA3C6B,CA6C9E;;AACA,WAAOnD,KAAK,CAACG,UAAN,CAAiB8C,KAAxB;AACD,GA/CD,EA5GiE,CA6JnE;;AACA,MAAI,CAACjD,KAAK,CAACwB,gBAAN,CAAuBxB,KAAK,CAACyB,kBAA7B,CAAD,IAAqD,CAACzB,KAAK,CAACwB,gBAAN,CAAuB,QAAvB,CAA1D,EACEvB,GAAG,CAACM,kBAAJ,CAAuB,UAAvB,EAAmC,CAAnC,EAAsC,CAACC,OAAD,EAAU,CAAC2B,YAAD,EAAepB,QAAf,CAAV,KAAuC;AAC3E;AACA,QAAIL,CAAC,GAAG,sCAAuBV,KAAvB,EAA8BQ,OAA9B,CAAR,CAF2E,CAI3E;;AACA,QAAIG,CAAC,GAAGC,eAAGC,QAAH,CAAYb,KAAZ,EAAmBU,CAAC,CAACI,kBAAF,EAAnB,CAAR,CAL2E,CAO3E;;;AACA,QAAIuB,QAAQ,GAAG,kBAASrC,KAAT,EAAgBmC,YAAhB,CAAf,CAR2E,CAU3E;;AACA,QAAIE,QAAJ,EAAc;AACZ,YAAMrC,KAAK,CAACsC,0BAAN,CAAiCtC,KAAK,CAACG,UAAN,CAAiBoC,SAAlD,EAA6D,kBAA7D,CAAN;AACD,KAb0E,CAe3E;;;AACA,QAAIC,SAAS,GAAG5B,eAAGsB,eAAH,CAAmBlC,KAAnB,EAA0BmC,YAA1B,CAAhB,CAhB2E,CAkB3E;;;AACA,QAAI1B,GAAG,GAAGG,eAAGI,SAAH,CAAahB,KAAb,EAAoBe,QAAQ,IAAIf,KAAK,CAACG,UAAN,CAAiBuB,SAAjD,CAAV,CAnB2E,CAqB3E;;;AACA,QAAIe,GAAG,GAAG9B,CAAC,CAACO,MAAZ,CAtB2E,CAwB3E;;AACA,QAAI8B,KAAK,GAAGJ,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASrC,GAAT,EAAc,CAAd,CAAT,EAA2BgC,GAA3B,CAAZ,CAzB2E,CA2B3E;;AACA,QAAIW,SAAS,GAAGZ,SAAS,CAACtB,MAA1B,CA5B2E,CA8B3E;AACA;AACA;AACA;;AACA,QAAIkC,SAAS,KAAK,CAAlB,EAAqB;AACnB,aAAOpD,KAAK,CAACG,UAAN,CAAiBgD,IAAxB;AACD,KAFD,MAEO;AACL,WAAK,IAAIE,CAAC,GAAGL,KAAb,EAAoBK,CAAC,GAAGD,SAAJ,IAAiBX,GAArC,EAA0C,EAAEY,CAA5C,EAA+C;AAC7C,YAAIC,KAAK,GAAG,IAAZ;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAApB,EAA+B,EAAEG,CAAjC,EAAoC;AAClC,cAAI5C,CAAC,CAACY,UAAF,CAAa8B,CAAC,GAAGE,CAAjB,MAAwBf,SAAS,CAACjB,UAAV,CAAqBgC,CAArB,CAA5B,EAAqD;AACnDD,YAAAA,KAAK,GAAG,KAAR;AACD;AACF;;AACD,YAAIA,KAAJ,EAAW,OAAOtD,KAAK,CAACG,UAAN,CAAiBgD,IAAxB;AACZ;;AACD,aAAOnD,KAAK,CAACG,UAAN,CAAiB8C,KAAxB;AACD;AACF,GAhDD,EA/JiE,CAiNnE;;AACAhD,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,SAAvB,EAAkC,CAAlC,EAAqC,CAACC,OAAD,EAAU,CAAC2B,YAAD,EAAepB,QAAf,CAAV,KAAuC;AAC1E;AACA,QAAIL,CAAC,GAAG,sCAAuBV,KAAvB,EAA8BQ,OAA9B,CAAR,CAF0E,CAI1E;;AACA,QAAIG,CAAC,GAAGC,eAAGC,QAAH,CAAYb,KAAZ,EAAmBU,CAAC,CAACI,kBAAF,EAAnB,CAAR,CAL0E,CAO1E;;;AACA,QAAI0B,SAAS,GAAG5B,eAAGsB,eAAH,CAAmBlC,KAAnB,EAA0BmC,YAA1B,CAAhB,CAR0E,CAU1E;;;AACA,QAAI1B,GAAG,GAAGM,QAAQ,GAAGH,eAAGI,SAAH,CAAahB,KAAb,EAAoBe,QAApB,CAAH,GAAmC,CAArD,CAX0E,CAa1E;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,WAAO,IAAIO,kBAAJ,CAAgBtB,KAAhB,EAAuBW,CAAC,CAAC6C,OAAF,CAAUhB,SAAV,EAAqB/B,GAArB,CAAvB,CAAP;AACD,GArBD,EAlNmE,CAyOnE;;AACAR,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,aAAvB,EAAsC,CAAtC,EAAyC,CAACC,OAAD,EAAU,CAAC2B,YAAD,EAAepB,QAAf,CAAV,KAAuC;AAC9E;AACA,QAAIL,CAAC,GAAG,sCAAuBV,KAAvB,EAA8BQ,OAA9B,CAAR,CAF8E,CAI9E;;AACA,QAAIG,CAAC,GAAGC,eAAGC,QAAH,CAAYb,KAAZ,EAAmBU,CAAC,CAACI,kBAAF,EAAnB,CAAR,CAL8E,CAO9E;;;AACA,QAAI0B,SAAS,GAAG5B,eAAGsB,eAAH,CAAmBlC,KAAnB,EAA0BmC,YAA1B,CAAhB,CAR8E,CAU9E;;;AACA,QAAIsB,MAAM,GAAG7C,eAAG8C,QAAH,CAAY1D,KAAZ,EAAmBe,QAAQ,IAAIf,KAAK,CAACG,UAAN,CAAiBuB,SAAhD,CAAb,CAX8E,CAa9E;;;AACA,QAAIjB,GAAJ;;AACA,QAAIkD,KAAK,CAACF,MAAD,CAAT,EAAmB;AACjBhD,MAAAA,GAAG,GAAGmD,QAAN;AACD,KAFD,MAEO;AACLnD,MAAAA,GAAG,GAAGG,eAAGI,SAAH,CAAahB,KAAb,EAAoByD,MAApB,CAAN;AACD,KAnB6E,CAqB9E;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,WAAO,IAAInC,kBAAJ,CAAgBtB,KAAhB,EAAuBW,CAAC,CAACkD,WAAF,CAAcrB,SAAd,EAAyB/B,GAAzB,CAAvB,CAAP;AACD,GA7BD,EA1OmE,CAyQnE;;AACAR,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,eAAvB,EAAwC,CAAxC,EAA2C,CAACC,OAAD,EAAU,CAACsD,IAAD,CAAV,KAAqB;AAC9D;AACA,QAAIpD,CAAC,GAAG,sCAAuBV,KAAvB,EAA8BQ,OAA9B,CAAR,CAF8D,CAI9D;;AACA,QAAIG,CAAC,GAAGC,eAAGC,QAAH,CAAYb,KAAZ,EAAmBU,CAAC,CAACI,kBAAF,EAAnB,CAAR,CAL8D,CAO9D;;;AACA,QAAIiD,IAAI,GAAGnD,eAAGsB,eAAH,CAAmBlC,KAAnB,EAA0B8D,IAA1B,CAAX;;AAEA,WAAO,IAAIxC,kBAAJ,CAAgBtB,KAAhB,EAAuBW,CAAC,CAACqD,aAAF,CAAgBD,IAAhB,CAAvB,CAAP;AACD,GAXD,EA1QmE,CAuRnE;;AACA9D,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,OAAvB,EAAgC,CAAhC,EAAmC,CAACC,OAAD,EAAU,CAACyD,MAAD,CAAV,KAAuB;AACxD;AACA,QAAIvD,CAAC,GAAG,sCAAuBV,KAAvB,EAA8BQ,OAA9B,CAAR,CAFwD,CAIxD;;AACA,QAAI,CAAC,gCAAsByD,MAAtB,EAA8BvB,qBAA9B,EAA8CwB,gBAA9C,CAAL,EAA+D;AAC7D;AACA,UAAIC,OAAO,GAAG,oBAAUnE,KAAV,EAAiBiE,MAAjB,EAAyBjE,KAAK,CAACG,UAAN,CAAiBiE,WAA1C,CAAd,CAF6D,CAI7D;;AACA,UAAI,CAACD,OAAO,CAACE,gBAAR,EAAL,EAAiC;AAC/B;AACA,eAAO,gBAAKrE,KAAL,EAAYmE,OAAZ,EAAqBF,MAArB,EAA6B,CAACvD,CAAD,CAA7B,CAAP;AACD;;AACDyD,MAAAA,OAAO,CAACrD,kBAAR;AACD,KAfuD,CAiBxD;;;AACA,QAAIH,CAAC,GAAG,IAAIQ,kBAAJ,CAAgBnB,KAAhB,EAAuBY,eAAGsB,eAAH,CAAmBlC,KAAnB,EAA0BU,CAA1B,CAAvB,CAAR,CAlBwD,CAoBxD;;AACA,QAAI4D,EAAE,GAAG,0BAAatE,KAAb,EAAoBiE,MAApB,EAA4BvC,SAA5B,CAAT,CArBwD,CAuBxD;;AACA,WAAO,kBAAO1B,KAAP,EAAcsE,EAAd,EAAkBtE,KAAK,CAACG,UAAN,CAAiBiE,WAAnC,EAAgD,CAACzD,CAAD,CAAhD,CAAP;AACD,GAzBD,EAxRmE,CAmTnE;;AACA,MAAI,CAACX,KAAK,CAACwB,gBAAN,CAAuBxB,KAAK,CAACyB,kBAA7B,CAAD,IAAqD,CAACzB,KAAK,CAACwB,gBAAN,CAAuB,QAAvB,CAA1D,EACEvB,GAAG,CAACM,kBAAJ,CAAuB,WAAvB,EAAoC,CAApC,EAAuC,CAACC,OAAD,EAAU,CAAC+D,IAAD,CAAV,KAAqB;AAC1D;AACA,QAAI7D,CAAC,GAAG,sCAAuBV,KAAvB,EAA8BQ,OAA9B,CAAR,CAF0D,CAI1D;;AACA,QAAIG,CAAC,GAAGC,eAAGC,QAAH,CAAYb,KAAZ,EAAmBU,CAAC,CAACI,kBAAF,EAAnB,CAAR,CAL0D,CAO1D;;;AACA,QAAI,CAACyD,IAAD,IAASA,IAAI,YAAY7B,qBAA7B,EAA6C6B,IAAI,GAAG,IAAIpD,kBAAJ,CAAgBnB,KAAhB,EAAuB,KAAvB,CAAP,CARa,CAU1D;;AACA,QAAIwE,CAAC,GAAG5D,eAAGsB,eAAH,CAAmBlC,KAAnB,EAA0BuE,IAA1B,CAAR,CAX0D,CAa1D;;;AACA,QAAIC,CAAC,KAAK,KAAN,IAAeA,CAAC,KAAK,KAArB,IAA8BA,CAAC,KAAK,MAApC,IAA8CA,CAAC,KAAK,MAAxD,EAAgE;AAC9D,YAAMxE,KAAK,CAACsC,0BAAN,CAAiCtC,KAAK,CAACG,UAAN,CAAiBsE,UAAlD,CAAN;AACD,KAhByD,CAkB1D;AACA;AACA;;;AACA,WAAO,IAAItD,kBAAJ,CAAgBnB,KAAhB,EAAuBW,CAAC,CAAC+D,SAAF,CAAYF,CAAZ,CAAvB,CAAP;AACD,GAtBD,EArTiE,CA6UnE;;AACA,MAAI,CAACxE,KAAK,CAACwB,gBAAN,CAAuBxB,KAAK,CAACyB,kBAA7B,CAAD,IAAqD,CAACzB,KAAK,CAACwB,gBAAN,CAAuB,QAAvB,CAA1D,EACEvB,GAAG,CAACM,kBAAJ,CAAuB,QAAvB,EAAiC,CAAjC,EAAoC,CAACC,OAAD,EAAU,CAACmE,SAAD,EAAYC,UAAZ,CAAV,KAAsC;AACxE;AACA,QAAIlE,CAAC,GAAG,sCAAuBV,KAAvB,EAA8BQ,OAA9B,CAAR,CAFwE,CAIxE;;AACA,QAAIG,CAAC,GAAGC,eAAGC,QAAH,CAAYb,KAAZ,EAAmBU,CAAC,CAACI,kBAAF,EAAnB,CAAR,CALwE,CAOxE;;;AACA,QAAI+D,YAAY,GAAGjE,eAAGkE,QAAH,CAAY9E,KAAZ,EAAmB2E,SAAnB,CAAnB,CARwE,CAUxE;;;AACA,QAAII,YAAY,GAAGpE,CAAC,CAACO,MAArB,CAXwE,CAaxE;;AACA,QAAI2D,YAAY,IAAIE,YAApB,EAAkC,OAAO,IAAI5D,kBAAJ,CAAgBnB,KAAhB,EAAuBW,CAAvB,CAAP;AAElC,QAAIqE,MAAJ,CAhBwE,CAiBxE;;AACA,QAAI,CAACJ,UAAD,IAAeA,UAAU,YAAYlC,qBAAzC,EAAyDsC,MAAM,GAAG,GAAT,CAAzD,KACK;AACH;AACAA,MAAAA,MAAM,GAAGpE,eAAGsB,eAAH,CAAmBlC,KAAnB,EAA0B4E,UAA1B,CAAT;AACD,KAtBuE,CAuBxE;;AACA,QAAII,MAAM,KAAK,EAAf,EAAmB,OAAO,IAAI7D,kBAAJ,CAAgBnB,KAAhB,EAAuBW,CAAvB,CAAP,CAxBqD,CA0BxE;;AACA,QAAIsE,OAAO,GAAGJ,YAAY,GAAGE,YAA7B,CA3BwE,CA6BxE;;AACA,QAAIG,qBAAqB,GAAGF,MAAM,CAACG,MAAP,CAAcvC,IAAI,CAACwC,IAAL,CAAUH,OAAO,GAAGD,MAAM,CAAC9D,MAA3B,CAAd,EAAkDgC,MAAlD,CAAyD,CAAzD,EAA4D+B,OAA5D,CAA5B,CA9BwE,CAgCxE;;AACA,WAAO,IAAI9D,kBAAJ,CAAgBnB,KAAhB,EAAuBW,CAAC,GAAGuE,qBAA3B,CAAP;AACD,GAlCD,EA/UiE,CAmXnE;;AACA,MAAI,CAAClF,KAAK,CAACwB,gBAAN,CAAuBxB,KAAK,CAACyB,kBAA7B,CAAD,IAAqD,CAACzB,KAAK,CAACwB,gBAAN,CAAuB,QAAvB,CAA1D,EACEvB,GAAG,CAACM,kBAAJ,CAAuB,UAAvB,EAAmC,CAAnC,EAAsC,CAACC,OAAD,EAAU,CAACmE,SAAD,EAAYC,UAAZ,CAAV,KAAsC;AAC1E;AACA,QAAIlE,CAAC,GAAG,sCAAuBV,KAAvB,EAA8BQ,OAA9B,CAAR,CAF0E,CAI1E;;AACA,QAAIG,CAAC,GAAGC,eAAGC,QAAH,CAAYb,KAAZ,EAAmBU,CAAC,CAACI,kBAAF,EAAnB,CAAR,CAL0E,CAO1E;;;AACA,QAAI+D,YAAY,GAAGjE,eAAGkE,QAAH,CAAY9E,KAAZ,EAAmB2E,SAAnB,CAAnB,CAR0E,CAU1E;;;AACA,QAAII,YAAY,GAAGpE,CAAC,CAACO,MAArB,CAX0E,CAa1E;;AACA,QAAI2D,YAAY,IAAIE,YAApB,EAAkC,OAAO,IAAI5D,kBAAJ,CAAgBnB,KAAhB,EAAuBW,CAAvB,CAAP;AAElC,QAAIqE,MAAJ,CAhB0E,CAiB1E;;AACA,QAAI,CAACJ,UAAD,IAAeA,UAAU,YAAYlC,qBAAzC,EAAyDsC,MAAM,GAAG,GAAT,CAAzD,KACK;AACH;AACAA,MAAAA,MAAM,GAAGpE,eAAGsB,eAAH,CAAmBlC,KAAnB,EAA0B4E,UAA1B,CAAT;AACD,KAtByE,CAuB1E;;AACA,QAAII,MAAM,KAAK,EAAf,EAAmB,OAAO,IAAI7D,kBAAJ,CAAgBnB,KAAhB,EAAuBW,CAAvB,CAAP,CAxBuD,CA0B1E;;AACA,QAAIsE,OAAO,GAAGJ,YAAY,GAAGE,YAA7B,CA3B0E,CA6B1E;;AACA,QAAIG,qBAAqB,GAAGF,MAAM,CAACG,MAAP,CAAcvC,IAAI,CAACwC,IAAL,CAAUH,OAAO,GAAGD,MAAM,CAAC9D,MAA3B,CAAd,EAAkDgC,MAAlD,CAAyD,CAAzD,EAA4D+B,OAA5D,CAA5B,CA9B0E,CAgC1E;;AACA,WAAO,IAAI9D,kBAAJ,CAAgBnB,KAAhB,EAAuBkF,qBAAqB,GAAGvE,CAA/C,CAAP;AACD,GAlCD,EArXiE,CAyZnE;;AACA,MAAI,CAACX,KAAK,CAACwB,gBAAN,CAAuBxB,KAAK,CAACyB,kBAA7B,CAAD,IAAqD,CAACzB,KAAK,CAACwB,gBAAN,CAAuB,QAAvB,CAA1D,EACEvB,GAAG,CAACM,kBAAJ,CAAuB,QAAvB,EAAiC,CAAjC,EAAoC,CAACC,OAAD,EAAU,CAAC6E,KAAD,CAAV,KAAsB;AACxD;AACA,QAAI3E,CAAC,GAAG,sCAAuBV,KAAvB,EAA8BQ,OAA9B,CAAR,CAFwD,CAIxD;;AACA,QAAIG,CAAC,GAAGC,eAAGC,QAAH,CAAYb,KAAZ,EAAmBU,CAAC,CAACI,kBAAF,EAAnB,CAAR,CALwD,CAOxD;;;AACA,QAAIwE,CAAC,GAAG1E,eAAGI,SAAH,CAAahB,KAAb,EAAoBqF,KAApB,CAAR,CARwD,CAUxD;;;AACA,QAAIC,CAAC,GAAG,CAAR,EAAW;AACT,YAAMtF,KAAK,CAACsC,0BAAN,CAAiCtC,KAAK,CAACG,UAAN,CAAiBsE,UAAlD,CAAN;AACD,KAbuD,CAexD;;;AACA,QAAI,CAACc,QAAQ,CAACD,CAAD,CAAb,EAAkB;AAChB,YAAMtF,KAAK,CAACsC,0BAAN,CAAiCtC,KAAK,CAACG,UAAN,CAAiBsE,UAAlD,CAAN;AACD,KAlBuD,CAoBxD;;;AACA,QAAIe,CAAC,GAAG,EAAR;AACA,QAAI7E,CAAJ,EAAO,OAAO2E,CAAC,EAAR,EAAYE,CAAC,IAAI7E,CAAL,CAtBqC,CAwBxD;;AACA,WAAO,IAAIQ,kBAAJ,CAAgBnB,KAAhB,EAAuBwF,CAAvB,CAAP;AACD,GA1BD,EA3ZiE,CAubnE;;AACAvF,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,SAAvB,EAAkC,CAAlC,EAAqC,CAACC,OAAD,EAAU,CAACiF,WAAD,EAAcC,YAAd,CAAV,KAA0C;AAC7E,QAAIC,OAAJ,CAD6E,CAG7E;;AACA,QAAIjF,CAAC,GAAG,sCAAuBV,KAAvB,EAA8BQ,OAA9B,CAAR,CAJ6E,CAM7E;;AACA,QAAI,CAAC,gCAAsBiF,WAAtB,EAAmCvB,gBAAnC,EAA8CxB,qBAA9C,CAAL,EAAoE;AAClE;AACA,UAAIkD,QAAQ,GAAG,oBAAU5F,KAAV,EAAiByF,WAAjB,EAA8BzF,KAAK,CAACG,UAAN,CAAiB0F,aAA/C,CAAf,CAFkE,CAIlE;;AACA,UAAI,EAAED,QAAQ,YAAYlD,qBAAtB,CAAJ,EAA2C;AACzC;AACA,eAAO,gBAAK1C,KAAL,EAAY4F,QAAZ,EAAsBH,WAAtB,EAAmC,CAAC/E,CAAD,EAAIgF,YAAJ,CAAnC,CAAP;AACD;AACF,KAhB4E,CAkB7E;;;AACA,QAAII,MAAM,GAAGlF,eAAGC,QAAH,CAAYb,KAAZ,EAAmBU,CAAC,CAACI,kBAAF,EAAnB,CAAb,CAnB6E,CAqB7E;;;AACA,QAAIqB,YAAY,GAAGvB,eAAGsB,eAAH,CAAmBlC,KAAnB,EAA0ByF,WAA1B,CAAnB,CAtB6E,CAwB7E;;;AACA,QAAIM,iBAAiB,GAAG,oBAAW/F,KAAX,EAAkB0F,YAAlB,CAAxB;AAEA,QAAIM,kBAAJ,CA3B6E,CA4B7E;;AACA,QAAID,iBAAiB,KAAK,KAA1B,EAAiC;AAC/B;AACAC,MAAAA,kBAAkB,GAAGpF,eAAGsB,eAAH,CAAmBlC,KAAnB,EAA0B0F,YAA1B,CAArB;AACD,KAhC4E,CAkC7E;AACA;;;AACA,QAAIjF,GAAG,GAAGqF,MAAM,CAACtC,OAAP,CAAerB,YAAf,CAAV,CApC6E,CAsC7E;;AACA,QAAI8D,OAAO,GAAG9D,YAAd,CAvC6E,CAyC7E;;AACA,QAAI1B,GAAG,GAAG,CAAV,EAAa,OAAO,IAAIU,kBAAJ,CAAgBnB,KAAhB,EAAuB8F,MAAvB,CAAP,CA1CgE,CA4C7E;;AACA,QAAIC,iBAAiB,KAAK,IAA1B,EAAgC;AAC9B;AACA,UAAIG,SAAS,GAAG,gBAAKlG,KAAL,EAAY0F,YAAZ,EAA0B1F,KAAK,CAACG,UAAN,CAAiBuB,SAA3C,EAAsD,CACpE,IAAIP,kBAAJ,CAAgBnB,KAAhB,EAAuBiG,OAAvB,CADoE,EAEpE,IAAI3E,kBAAJ,CAAgBtB,KAAhB,EAAuBS,GAAvB,CAFoE,EAGpE,IAAIU,kBAAJ,CAAgBnB,KAAhB,EAAuB8F,MAAvB,CAHoE,CAAtD,CAAhB,CAF8B,CAQ9B;;AACAH,MAAAA,OAAO,GAAG/E,eAAGsB,eAAH,CAAmBlC,KAAnB,EAA0BkG,SAA1B,CAAV;AACD,KAVD,MAUO;AACL;AACA;AACA,UAAIC,QAAQ,GAAG,EAAf,CAHK,CAKL;;AACA,8BAAU,OAAOH,kBAAP,KAA8B,QAAxC;AACAL,MAAAA,OAAO,GAAG/E,eAAGC,QAAH,CAAYb,KAAZ,EAAmB,0BAAgBA,KAAhB,EAAuBiG,OAAvB,EAAgCH,MAAhC,EAAwCrF,GAAxC,EAA6C0F,QAA7C,EAAuDH,kBAAvD,CAAnB,CAAV;AACD,KA/D4E,CAiE7E;;;AACA,QAAII,OAAO,GAAG3F,GAAG,GAAGwF,OAAO,CAAC/E,MAA5B,CAlE6E,CAoE7E;AACA;AACA;;AACA,QAAImF,SAAS,GAAGP,MAAM,CAAC5C,MAAP,CAAc,CAAd,EAAiBzC,GAAjB,IAAwBkF,OAAxB,GAAkCG,MAAM,CAAC5C,MAAP,CAAckD,OAAd,CAAlD,CAvE6E,CAyE7E;;AACA,WAAO,IAAIjF,kBAAJ,CAAgBnB,KAAhB,EAAuBqG,SAAvB,CAAP;AACD,GA3ED,EAxbmE,CAqgBnE;;AACApG,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,QAAvB,EAAiC,CAAjC,EAAoC,CAACC,OAAD,EAAU,CAACyD,MAAD,CAAV,KAAuB;AACzD;AACA,QAAIvD,CAAC,GAAG,sCAAuBV,KAAvB,EAA8BQ,OAA9B,CAAR,CAFyD,CAIzD;;AACA,QAAI,CAAC,gCAAsByD,MAAtB,EAA8BvB,qBAA9B,EAA8CwB,gBAA9C,CAAL,EAA+D;AAC7D;AACA,UAAIoC,QAAQ,GAAG,oBAAUtG,KAAV,EAAiBiE,MAAjB,EAAyBjE,KAAK,CAACG,UAAN,CAAiBoG,YAA1C,CAAf,CAF6D,CAI7D;;AACA,UAAI,EAAED,QAAQ,YAAY5D,qBAAtB,CAAJ,EAA2C;AACzC;AACA,eAAO,gBAAK1C,KAAL,EAAYsG,QAAZ,EAAsBrC,MAAtB,EAA8B,CAACvD,CAAD,CAA9B,CAAP;AACD;AACF,KAdwD,CAgBzD;;;AACA,QAAIoF,MAAM,GAAGlF,eAAGsB,eAAH,CAAmBlC,KAAnB,EAA0BU,CAA1B,CAAb,CAjByD,CAmBzD;;;AACA,QAAI4D,EAAE,GAAG,0BAAatE,KAAb,EAAoBiE,MAApB,EAA4BvC,SAA5B,CAAT,CApByD,CAsBzD;;AACA,WAAO,kBAAO1B,KAAP,EAAcsE,EAAd,EAAkBtE,KAAK,CAACG,UAAN,CAAiBoG,YAAnC,EAAiD,CAAC,IAAIpF,kBAAJ,CAAgBnB,KAAhB,EAAuB8F,MAAvB,CAAD,CAAjD,CAAP;AACD,GAxBD,EAtgBmE,CAgiBnE;;AACA7F,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,OAAvB,EAAgC,CAAhC,EAAmC,CAACC,OAAD,EAAU,CAACwC,KAAD,EAAQL,GAAR,CAAV,KAA2B;AAC5D;AACA,QAAIjC,CAAC,GAAG,sCAAuBV,KAAvB,EAA8BQ,OAA9B,CAAR;;AAEA,QAAIE,CAAC,YAAY8F,oBAAb,IAA8B9F,CAAC,CAAC+F,OAAF,OAAgBtF,kBAAlD,EAA+D;AAC7D;AACA;AACA,UAAIuF,MAAM,GAAGF,qBAAcG,kBAAd,CAAiC3G,KAAjC,EAAwCF,gBAAxC,EAA0DqB,kBAA1D,EAAuE,CAACT,CAAD,EAAIsC,KAAJ,EAAWL,GAAX,CAAvE,CAAb;;AACA,aAAO6D,qBAAcI,kCAAd,CAAiD5G,KAAjD,EAAwD0G,MAAxD,EAAgE,CAAChG,CAAD,CAAhE,CAAP;AACD,KAT2D,CAW5D;;;AACA,QAAIC,CAAC,GAAGC,eAAGC,QAAH,CAAYb,KAAZ,EAAmBU,CAAC,CAACI,kBAAF,EAAnB,CAAR,CAZ4D,CAc5D;;;AACA,QAAI2B,GAAG,GAAG9B,CAAC,CAACO,MAAZ,CAf4D,CAiB5D;;AACA,QAAI2F,QAAQ,GAAGjG,eAAGI,SAAH,CAAahB,KAAb,EAAoBgD,KAApB,CAAf,CAlB4D,CAoB5D;;;AACA,QAAI8D,MAAM,GAAG,CAACnE,GAAD,IAAQA,GAAG,YAAYD,qBAAvB,GAAwCD,GAAxC,GAA8C7B,eAAGI,SAAH,CAAahB,KAAb,EAAoB2C,GAAG,CAAC7B,kBAAJ,EAApB,CAA3D,CArB4D,CAuB5D;;AACA,QAAIiG,IAAI,GAAGF,QAAQ,GAAG,CAAX,GAAejE,IAAI,CAACE,GAAL,CAASL,GAAG,GAAGoE,QAAf,EAAyB,CAAzB,CAAf,GAA6CjE,IAAI,CAACC,GAAL,CAASgE,QAAT,EAAmBpE,GAAnB,CAAxD,CAxB4D,CA0B5D;;AACA,QAAIuE,EAAE,GAAGF,MAAM,GAAG,CAAT,GAAalE,IAAI,CAACE,GAAL,CAASL,GAAG,GAAGqE,MAAf,EAAuB,CAAvB,CAAb,GAAyClE,IAAI,CAACC,GAAL,CAASiE,MAAT,EAAiBrE,GAAjB,CAAlD,CA3B4D,CA6B5D;;AACA,QAAIwE,IAAI,GAAGrE,IAAI,CAACE,GAAL,CAASkE,EAAE,GAAGD,IAAd,EAAoB,CAApB,CAAX,CA9B4D,CAgC5D;;AACA,WAAO,IAAI5F,kBAAJ,CAAgBnB,KAAhB,EAAuBW,CAAC,CAACuC,MAAF,CAAS6D,IAAT,EAAeE,IAAf,CAAvB,CAAP;AACD,GAlCD,EAjiBmE,CAqkBnE;;AACAhH,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,OAAvB,EAAgC,CAAhC,EAAmC,CAACC,OAAD,EAAU,CAAC0G,SAAD,EAAYC,KAAZ,CAAV,KAAiC;AAClE;AACA,QAAIzG,CAAC,GAAG,sCAAuBV,KAAvB,EAA8BQ,OAA9B,CAAR;;AAEA,QAAIE,CAAC,YAAY8F,oBAAb,IAA8B9F,CAAC,CAAC+F,OAAF,OAAgBtF,kBAAlD,EAA+D;AAC7D;AACA;AACA,UAAIuF,MAAM,GAAGF,qBAAcG,kBAAd,CAAiC3G,KAAjC,EAAwCD,gBAAxC,EAA0DqH,kBAA1D,EAAuE,CAAC1G,CAAD,EAAIwG,SAAJ,EAAeC,KAAf,CAAvE,CAAb;;AACA,aAAOX,qBAAcI,kCAAd,CAAiD5G,KAAjD,EAAwD0G,MAAxD,EAAgE,CAAChG,CAAD,CAAhE,CAAP;AACD,KATiE,CAWlE;;;AACA,QAAI,CAAC,gCAAsBwG,SAAtB,EAAiCxE,qBAAjC,EAAiDwB,gBAAjD,CAAL,EAAkE;AAChE;AACA,UAAImD,QAAQ,GAAG,oBAAUrH,KAAV,EAAiBkH,SAAjB,EAA4BlH,KAAK,CAACG,UAAN,CAAiBmH,WAA7C,CAAf,CAFgE,CAIhE;;AACA,UAAI,EAAED,QAAQ,YAAY3E,qBAAtB,CAAJ,EAA2C;AACzC;AACA,eAAO,gBAAK1C,KAAL,EAAYqH,QAAZ,EAAsBH,SAAtB,EAAiC,CAACxG,CAAD,EAAIyG,KAAJ,CAAjC,CAAP;AACD;AACF,KArBiE,CAuBlE;;;AACA,QAAIxG,CAAC,GAAGC,eAAGC,QAAH,CAAYb,KAAZ,EAAmBU,CAAC,CAACI,kBAAF,EAAnB,CAAR,CAxBkE,CA0BlE;;;AACA,QAAIyG,CAAC,GAAGC,mBAAOC,WAAP,CAAmBzH,KAAnB,EAA0B,CAA1B,CAAR,CA3BkE,CA6BlE;;;AACA,QAAI0H,OAAO,GAAG,CAAd,CA9BkE,CAgClE;;AACA,QAAIC,GAAG,GACL,CAACR,KAAD,IAAUA,KAAK,YAAYzE,qBAA3B,GAA4CE,IAAI,CAACgF,GAAL,CAAS,CAAT,EAAY,EAAZ,IAAkB,CAA9D,GAAkEhH,eAAGiH,QAAH,CAAY7H,KAAZ,EAAmBmH,KAAK,CAACrG,kBAAN,EAAnB,CADpE,CAjCkE,CAoClE;;AACA,QAAIgH,CAAC,GAAGnH,CAAC,CAACO,MAAV,CArCkE,CAuClE;;AACA,QAAI6G,CAAC,GAAG,CAAR,CAxCkE,CA0ClE;;AACA,QAAIjG,CAAC,GAAGlB,eAAGsB,eAAH,CAAmBlC,KAAnB,EAA0BkH,SAA1B,CAAR,CA3CkE,CA6ClE;;;AACA,QAAIS,GAAG,KAAK,CAAZ,EAAe,OAAOJ,CAAP,CA9CmD,CAgDlE;;AACA,QAAI,CAACL,SAAD,IAAcA,SAAS,YAAYxE,qBAAvC,EAAuD;AACrD;AACA8E,yBAAOQ,kBAAP,CAA0BhI,KAA1B,EAAiCuH,CAAjC,EAAoC,GAApC,EAAyC,IAAIpG,kBAAJ,CAAgBnB,KAAhB,EAAuBW,CAAvB,CAAzC,EAFqD,CAIrD;;;AACA,aAAO4G,CAAP;AACD,KAvDiE,CAyDlE;;;AACA,QAAIO,CAAC,KAAK,CAAV,EAAa;AACX;AACA,UAAIG,CAAC,GAAG,0BAAWjI,KAAX,EAAkBW,CAAlB,EAAqB,CAArB,EAAwBmB,CAAxB,CAAR,CAFW,CAIX;;AACA,UAAImG,CAAC,KAAK,KAAV,EAAiB,OAAOV,CAAP,CALN,CAOX;;AACAC,yBAAOQ,kBAAP,CAA0BhI,KAA1B,EAAiCuH,CAAjC,EAAoC,GAApC,EAAyC,IAAIpG,kBAAJ,CAAgBnB,KAAhB,EAAuBW,CAAvB,CAAzC,EARW,CASX;;;AACA,aAAO4G,CAAP;AACD,KArEiE,CAuElE;;;AACA,QAAIW,CAAC,GAAGH,CAAR,CAxEkE,CA0ElE;;AACA,WAAOG,CAAC,KAAKJ,CAAb,EAAgB;AACd;AACA,UAAIK,CAAC,GAAG,0BAAWnI,KAAX,EAAkBW,CAAlB,EAAqBuH,CAArB,EAAwBpG,CAAxB,CAAR,CAFc,CAId;;AACA,UAAIqG,CAAC,KAAK,KAAV,EAAiB;AACfD,QAAAA,CAAC;AACF,OAFD,MAEO;AACL;AACA;AACA,YAAIC,CAAC,KAAKJ,CAAV,EAAa;AACXG,UAAAA,CAAC;AACF,SAFD,MAEO;AACL;AACA;AACA,cAAI1C,CAAC,GAAG7E,CAAC,CAACyH,SAAF,CAAYL,CAAZ,EAAeG,CAAf,CAAR,CAHK,CAKL;;AACAV,6BAAOQ,kBAAP,CAA0BhI,KAA1B,EAAiCuH,CAAjC,EAAoC,IAAIpG,kBAAJ,CAAgBnB,KAAhB,EAAuB0H,OAAO,GAAG,EAAjC,CAApC,EAA0E,IAAIvG,kBAAJ,CAAgBnB,KAAhB,EAAuBwF,CAAvB,CAA1E,EANK,CAQL;;;AACAkC,UAAAA,OAAO,GATF,CAWL;;AACA,cAAIA,OAAO,KAAKC,GAAhB,EAAqB,OAAOJ,CAAP,CAZhB,CAcL;;AACAQ,UAAAA,CAAC,GAAGI,CAAJ,CAfK,CAiBL;;AACAD,UAAAA,CAAC,GAAGH,CAAJ;AACD;AACF;AACF,KA5GiE,CA8GlE;;;AACA,QAAIvC,CAAC,GAAG7E,CAAC,CAACyH,SAAF,CAAYL,CAAZ,EAAeD,CAAf,CAAR,CA/GkE,CAiHlE;;AACAN,uBAAOQ,kBAAP,CAA0BhI,KAA1B,EAAiCuH,CAAjC,EAAoC,IAAIpG,kBAAJ,CAAgBnB,KAAhB,EAAuB0H,OAAO,GAAG,EAAjC,CAApC,EAA0E,IAAIvG,kBAAJ,CAAgBnB,KAAhB,EAAuBwF,CAAvB,CAA1E,EAlHkE,CAoHlE;;;AACA,WAAO+B,CAAP;AACD,GAtHD,EAtkBmE,CA8rBnE;;AACA,MAAI,CAACvH,KAAK,CAACwB,gBAAN,CAAuBxB,KAAK,CAACyB,kBAA7B,CAAD,IAAqD,CAACzB,KAAK,CAACwB,gBAAN,CAAuB,QAAvB,CAA1D,EACEvB,GAAG,CAACM,kBAAJ,CAAuB,YAAvB,EAAqC,CAArC,EAAwC,CAACC,OAAD,EAAU,CAAC2B,YAAD,EAAepB,QAAf,CAAV,KAAuC;AAC7E;AACA,QAAIL,CAAC,GAAG,sCAAuBV,KAAvB,EAA8BQ,OAA9B,CAAR,CAF6E,CAI7E;;AACA,QAAIG,CAAC,GAAGC,eAAGC,QAAH,CAAYb,KAAZ,EAAmBU,CAAC,CAACI,kBAAF,EAAnB,CAAR,CAL6E,CAO7E;;;AACA,QAAIuB,QAAQ,GAAG,kBAASrC,KAAT,EAAgBmC,YAAhB,CAAf,CAR6E,CAU7E;;AACA,QAAIE,QAAJ,EAAc;AACZ,YAAMrC,KAAK,CAACsC,0BAAN,CAAiCtC,KAAK,CAACG,UAAN,CAAiBoC,SAAlD,EAA6D,kBAA7D,CAAN;AACD,KAb4E,CAe7E;;;AACA,QAAIC,SAAS,GAAG5B,eAAGsB,eAAH,CAAmBlC,KAAnB,EAA0BmC,YAA1B,CAAhB,CAhB6E,CAkB7E;;;AACA,QAAI1B,GAAG,GAAGG,eAAGI,SAAH,CAAahB,KAAb,EAAoBe,QAAQ,IAAIf,KAAK,CAACG,UAAN,CAAiBuB,SAAjD,CAAV,CAnB6E,CAqB7E;;;AACA,QAAIe,GAAG,GAAG9B,CAAC,CAACO,MAAZ,CAtB6E,CAwB7E;;AACA,QAAI8B,KAAK,GAAGJ,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASrC,GAAT,EAAc,CAAd,CAAT,EAA2BgC,GAA3B,CAAZ,CAzB6E,CA2B7E;;AACA,QAAIM,YAAY,GAAGP,SAAS,CAACtB,MAA7B,CA5B6E,CA8B7E;;AACA,QAAI6B,YAAY,GAAGC,KAAf,GAAuBP,GAA3B,EAAgC,OAAOzC,KAAK,CAACG,UAAN,CAAiB8C,KAAxB,CA/B6C,CAiC7E;;AACA,QAAItC,CAAC,CAACuC,MAAF,CAASF,KAAT,EAAgBD,YAAhB,MAAkCP,SAAtC,EAAiD,OAAOxC,KAAK,CAACG,UAAN,CAAiBgD,IAAxB,CAlC4B,CAoC7E;;AACA,WAAOnD,KAAK,CAACG,UAAN,CAAiB8C,KAAxB;AACD,GAtCD,EAhsBiE,CAwuBnE;;AACAhD,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,WAAvB,EAAoC,CAApC,EAAuC,CAACC,OAAD,EAAU,CAACwC,KAAD,EAAQL,GAAR,CAAV,KAA2B;AAChE;AACA,QAAIjC,CAAC,GAAG,sCAAuBV,KAAvB,EAA8BQ,OAA9B,CAAR,CAFgE,CAIhE;;AACA,QAAIG,CAAC,GAAGC,eAAGC,QAAH,CAAYb,KAAZ,EAAmBU,CAAC,CAACI,kBAAF,EAAnB,CAAR,CALgE,CAOhE;;;AACA,QAAI2B,GAAG,GAAG9B,CAAC,CAACO,MAAZ,CARgE,CAUhE;;AACA,QAAI2F,QAAQ,GAAGjG,eAAGI,SAAH,CAAahB,KAAb,EAAoBgD,KAApB,CAAf,CAXgE,CAahE;;;AACA,QAAI8D,MAAM,GAAG,CAACnE,GAAD,IAAQA,GAAG,YAAYD,qBAAvB,GAAwCD,GAAxC,GAA8C7B,eAAGI,SAAH,CAAahB,KAAb,EAAoB2C,GAAG,CAAC7B,kBAAJ,EAApB,CAA3D,CAdgE,CAgBhE;;AACA,QAAIuH,UAAU,GAAGzF,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAAS+D,QAAT,EAAmB,CAAnB,CAAT,EAAgCpE,GAAhC,CAAjB,CAjBgE,CAmBhE;;AACA,QAAI6F,QAAQ,GAAG1F,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASgE,MAAT,EAAiB,CAAjB,CAAT,EAA8BrE,GAA9B,CAAf,CApBgE,CAsBhE;;AACA,QAAI8F,GAAG,GAAG3F,IAAI,CAACC,GAAL,CAASwF,UAAT,EAAqBC,QAArB,CAAV,CAvBgE,CAyBhE;;AACA,QAAItB,EAAE,GAAGpE,IAAI,CAACE,GAAL,CAASuF,UAAT,EAAqBC,QAArB,CAAT,CA1BgE,CA4BhE;;AACA,WAAO,IAAInH,kBAAJ,CAAgBnB,KAAhB,EAAuBW,CAAC,CAAC6H,KAAF,CAAQD,GAAR,EAAavB,EAAb,CAAvB,CAAP;AACD,GA9BD;;AAiCA,WAASyB,MAAT,CAAgBC,IAAhB,EAAmClI,OAAnC,EAA4CmI,OAA5C,EAAqD;AACnD;AACA,QAAIjI,CAAC,GAAG,sCAAuBV,KAAvB,EAA8BQ,OAA9B,CAAR,CAFmD,CAInD;;AACA,QAAIG,CAAC,GAAGC,eAAGC,QAAH,CAAYb,KAAZ,EAAmBU,CAAC,CAACI,kBAAF,EAAnB,CAAR;;AAEA,QAAId,KAAK,CAACwB,gBAAN,CAAuBxB,KAAK,CAACyB,kBAA7B,KAAoDzB,KAAK,CAACwB,gBAAN,CAAuB,QAAvB,CAAxD,EAA0F;AACxFmH,MAAAA,OAAO,GAAGjH,SAAV;AACD,KAFD,MAEO;AACL;AACA,UAAIiH,OAAJ,EAAaA,OAAO,GAAGA,OAAO,CAACC,SAAR,EAAV;AACd;;AAED,QAAI5I,KAAK,CAAC6I,yBAAN,KAAoCH,IAAI,KAAK,aAAT,IAA0BA,IAAI,KAAK,aAAvE,CAAJ,EAA2F;AACzF;AACAlC,2BAAcsC,wBAAd,CAAuCpI,CAAvC;;AACA,YAAM,IAAIqI,kBAAJ,EAAN;AACD,KAlBkD,CAoBnD;;;AACA,WAAO,IAAI5H,kBAAJ,CAAgBnB,KAAhB,EAAwBW,CAAD,CAAU,KAAI+H,IAAK,MAAnB,EAA0BC,OAA1B,CAAvB,CAAP;AACD,GAhyBkE,CAkyBnE;AACA;;;AACA1I,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,mBAAvB,EAA4C,CAA5C,EAA+C,CAACC,OAAD,EAAU,CAACmI,OAAD,CAAV,KAAwB;AACrE,WAAOF,MAAM,CAAC,aAAD,EAAgBjI,OAAhB,EAAyBmI,OAAzB,CAAb;AACD,GAFD,EApyBmE,CAwyBnE;AACA;;AACA1I,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,mBAAvB,EAA4C,CAA5C,EAA+C,CAACC,OAAD,EAAU,CAACmI,OAAD,CAAV,KAAwB;AACrE,WAAOF,MAAM,CAAC,aAAD,EAAgBjI,OAAhB,EAAyBmI,OAAzB,CAAb;AACD,GAFD,EA1yBmE,CA8yBnE;;AACA1I,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,aAAvB,EAAsC,CAAtC,EAAyCC,OAAO,IAAI;AAClD,WAAOiI,MAAM,CAAC,OAAD,EAAUjI,OAAV,CAAb;AACD,GAFD,EA/yBmE,CAmzBnE;;AACAP,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,UAAvB,EAAmC,CAAnC,EAAsCC,OAAO,IAAI;AAC/C,UAAMwI,MAAM,GAAGxI,OAAO,YAAY4G,kBAAnB,GAAiC5G,OAAO,CAACN,WAAzC,GAAuDM,OAAtE;;AACA,QAAIwI,MAAM,YAAYxC,oBAAlB,IAAmCwC,MAAM,CAACvC,OAAP,OAAqBtF,kBAA5D,EAAyE;AACvE,aAAO6H,MAAP;AACD,KAJ8C,CAK/C;;;AACA,WAAOpI,eAAGqI,eAAH,CAAmBjJ,KAAnB,EAA0BQ,OAA1B,CAAP;AACD,GAPD,EApzBmE,CA6zBnE;;AACAP,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,aAAvB,EAAsC,CAAtC,EAAyCC,OAAO,IAAI;AAClD,WAAOiI,MAAM,CAAC,OAAD,EAAUjI,OAAV,CAAb;AACD,GAFD,EA9zBmE,CAk0BnE;;AACAP,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,MAAvB,EAA+B,CAA/B,EAAkCC,OAAO,IAAI;AAC3C;AACA,QAAIE,CAAC,GAAG,sCAAuBV,KAAvB,EAA8BQ,OAA9B,CAAR,CAF2C,CAI3C;;AACA,QAAIG,CAAC,GAAGC,eAAGC,QAAH,CAAYb,KAAZ,EAAmBU,CAAC,CAACI,kBAAF,EAAnB,CAAR,CAL2C,CAO3C;;;AACA,QAAI0E,CAAC,GAAG7E,CAAC,CAACuI,IAAF,EAAR,CAR2C,CAU3C;;AACA,WAAO,IAAI/H,kBAAJ,CAAgBnB,KAAhB,EAAuBwF,CAAvB,CAAP;AACD,GAZD,EAn0BmE,CAi1BnE;;AACAvF,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,SAAvB,EAAkC,CAAlC,EAAqCC,OAAO,IAAI;AAC9C;AACA,WAAOI,eAAGqI,eAAH,CAAmBjJ,KAAnB,EAA0BQ,OAA1B,CAAP;AACD,GAHD,EAl1BmE,CAu1BnE;;AACAP,EAAAA,GAAG,CAACM,kBAAJ,CAAuBP,KAAK,CAACG,UAAN,CAAiBgJ,cAAxC,EAAwD,CAAxD,EAA2D3I,OAAO,IAAI;AACpE;AACA,QAAIE,CAAC,GAAG,sCAAuBV,KAAvB,EAA8BQ,OAA9B,CAAR,CAFoE,CAIpE;;AACA,QAAIG,CAAC,GAAGC,eAAGC,QAAH,CAAYb,KAAZ,EAAmBU,CAAC,CAACI,kBAAF,EAAnB,CAAR,CALoE,CAOpE;;;AACA,WAAO0G,mBAAO4B,oBAAP,CAA4BpJ,KAA5B,EAAmC,IAAImB,kBAAJ,CAAgBnB,KAAhB,EAAuBW,CAAvB,CAAnC,CAAP;AACD,GATD,EAx1BmE,CAm2BnE;;AACAV,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,QAAvB,EAAiC,CAAjC,EAAoC,CAACC,OAAD,EAAU,CAACwC,KAAD,EAAQ9B,MAAR,CAAV,KAA8B;AAChE;AACA,QAAIR,CAAC,GAAG,sCAAuBV,KAAvB,EAA8BQ,OAA9B,CAAR,CAFgE,CAIhE;;AACA,QAAIG,CAAC,GAAGC,eAAGsB,eAAH,CAAmBlC,KAAnB,EAA0BU,CAA1B,CAAR,CALgE,CAOhE;AAEA;;;AACA,QAAImG,QAAQ,GAAGjG,eAAGI,SAAH,CAAahB,KAAb,EAAoBgD,KAApB,CAAf,CAVgE,CAYhE;AAEA;;;AACA,QAAIL,GAAJ;;AACA,QAAI,CAACzB,MAAD,IAAWA,MAAM,YAAYwB,qBAAjC,EAAiD;AAC/CC,MAAAA,GAAG,GAAGiB,QAAN;AACD,KAFD,MAEO;AACLjB,MAAAA,GAAG,GAAG/B,eAAGI,SAAH,CAAahB,KAAb,EAAoBkB,MAAM,CAACJ,kBAAP,EAApB,CAAN;AACD,KApB+D,CAsBhE;AAEA;;;AACA,QAAIG,IAAI,GAAGN,CAAC,CAACO,MAAb,CAzBgE,CA2BhE;;AACA,QAAI2F,QAAQ,GAAG,CAAf,EAAkBA,QAAQ,GAAGjE,IAAI,CAACE,GAAL,CAAS7B,IAAI,GAAG4F,QAAhB,EAA0B,CAA1B,CAAX,CA5B8C,CA8BhE;;AACA,QAAIwC,YAAY,GAAGzG,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASH,GAAT,EAAc,CAAd,CAAT,EAA2B1B,IAAI,GAAG4F,QAAlC,CAAnB,CA/BgE,CAiChE;;AACA,QAAIwC,YAAY,IAAI,CAApB,EAAuB,OAAOrJ,KAAK,CAACG,UAAN,CAAiBC,WAAxB,CAlCyC,CAoChE;;AACA,WAAO,IAAIe,kBAAJ,CAAgBnB,KAAhB,EAAuBW,CAAC,CAAC6H,KAAF,CAAQ3B,QAAR,EAAkBA,QAAQ,GAAGwC,YAA7B,CAAvB,CAAP;AACD,GAtCD,EAp2BmE,CA44BnE;;AACApJ,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,QAAvB,EAAiC,CAAjC,EAAoC,CAACC,OAAD,EAAU,CAAC8I,IAAD,CAAV,KAAqB;AACvD;AACA,QAAI3I,CAAC,GAAGH,OAAR,CAFuD,CAIvD;;AACA,WAAOgH,mBAAO+B,UAAP,CAAkBvJ,KAAlB,EAAyBW,CAAzB,EAA4B,GAA5B,EAAiC,MAAjC,EAAyC2I,IAAzC,CAAP;AACD,GAND,EA74BmE,CAq5BnE;;AACArJ,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,KAAvB,EAA8B,CAA9B,EAAiCC,OAAO,IAAI;AAC1C;AACA,QAAIG,CAAC,GAAGH,OAAR,CAF0C,CAI1C;;AACA,WAAOgH,mBAAO+B,UAAP,CAAkBvJ,KAAlB,EAAyBW,CAAzB,EAA4B,KAA5B,EAAmC,EAAnC,EAAuC,EAAvC,CAAP;AACD,GAND,EAt5BmE,CA85BnE;;AACAV,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,OAAvB,EAAgC,CAAhC,EAAmCC,OAAO,IAAI;AAC5C;AACA,QAAIG,CAAC,GAAGH,OAAR,CAF4C,CAI5C;;AACA,WAAOgH,mBAAO+B,UAAP,CAAkBvJ,KAAlB,EAAyBW,CAAzB,EAA4B,OAA5B,EAAqC,EAArC,EAAyC,EAAzC,CAAP;AACD,GAND,EA/5BmE,CAu6BnE;;AACAV,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,MAAvB,EAA+B,CAA/B,EAAkCC,OAAO,IAAI;AAC3C;AACA,QAAIG,CAAC,GAAGH,OAAR,CAF2C,CAI3C;;AACA,WAAOgH,mBAAO+B,UAAP,CAAkBvJ,KAAlB,EAAyBW,CAAzB,EAA4B,GAA5B,EAAiC,EAAjC,EAAqC,EAArC,CAAP;AACD,GAND,EAx6BmE,CAg7BnE;;AACAV,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,OAAvB,EAAgC,CAAhC,EAAmCC,OAAO,IAAI;AAC5C;AACA,QAAIG,CAAC,GAAGH,OAAR,CAF4C,CAI5C;;AACA,WAAOgH,mBAAO+B,UAAP,CAAkBvJ,KAAlB,EAAyBW,CAAzB,EAA4B,IAA5B,EAAkC,EAAlC,EAAsC,EAAtC,CAAP;AACD,GAND,EAj7BmE,CAy7BnE;;AACAV,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,WAAvB,EAAoC,CAApC,EAAuC,CAACC,OAAD,EAAU,CAACgJ,KAAD,CAAV,KAAsB;AAC3D;AACA,QAAI7I,CAAC,GAAGH,OAAR,CAF2D,CAI3D;;AACA,WAAOgH,mBAAO+B,UAAP,CAAkBvJ,KAAlB,EAAyBW,CAAzB,EAA4B,MAA5B,EAAoC,OAApC,EAA6C6I,KAA7C,CAAP;AACD,GAND,EA17BmE,CAk8BnE;;AACAvJ,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,UAAvB,EAAmC,CAAnC,EAAsC,CAACC,OAAD,EAAU,CAACS,IAAD,CAAV,KAAqB;AACzD;AACA,QAAIN,CAAC,GAAGH,OAAR,CAFyD,CAIzD;;AACA,WAAOgH,mBAAO+B,UAAP,CAAkBvJ,KAAlB,EAAyBW,CAAzB,EAA4B,MAA5B,EAAoC,MAApC,EAA4CM,IAA5C,CAAP;AACD,GAND,EAn8BmE,CA28BnE;;AACAhB,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,SAAvB,EAAkC,CAAlC,EAAqCC,OAAO,IAAI;AAC9C;AACA,QAAIG,CAAC,GAAGH,OAAR,CAF8C,CAI9C;;AACA,WAAOgH,mBAAO+B,UAAP,CAAkBvJ,KAAlB,EAAyBW,CAAzB,EAA4B,GAA5B,EAAiC,EAAjC,EAAqC,EAArC,CAAP;AACD,GAND,EA58BmE,CAo9BnE;;AACAV,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,MAAvB,EAA+B,CAA/B,EAAkC,CAACC,OAAD,EAAU,CAACiJ,GAAD,CAAV,KAAoB;AACpD;AACA,QAAI9I,CAAC,GAAGH,OAAR,CAFoD,CAIpD;;AACA,WAAOgH,mBAAO+B,UAAP,CAAkBvJ,KAAlB,EAAyBW,CAAzB,EAA4B,GAA5B,EAAiC,MAAjC,EAAyC8I,GAAzC,CAAP;AACD,GAND,EAr9BmE,CA69BnE;;AACAxJ,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,OAAvB,EAAgC,CAAhC,EAAmCC,OAAO,IAAI;AAC5C;AACA,QAAIG,CAAC,GAAGH,OAAR,CAF4C,CAI5C;;AACA,WAAOgH,mBAAO+B,UAAP,CAAkBvJ,KAAlB,EAAyBW,CAAzB,EAA4B,OAA5B,EAAqC,EAArC,EAAyC,EAAzC,CAAP;AACD,GAND,EA99BmE,CAs+BnE;;AACAV,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,QAAvB,EAAiC,CAAjC,EAAoCC,OAAO,IAAI;AAC7C;AACA,QAAIG,CAAC,GAAGH,OAAR,CAF6C,CAI7C;;AACA,WAAOgH,mBAAO+B,UAAP,CAAkBvJ,KAAlB,EAAyBW,CAAzB,EAA4B,QAA5B,EAAsC,EAAtC,EAA0C,EAA1C,CAAP;AACD,GAND,EAv+BmE,CA++BnE;;AACAV,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,KAAvB,EAA8B,CAA9B,EAAiCC,OAAO,IAAI;AAC1C;AACA,QAAIG,CAAC,GAAGH,OAAR,CAF0C,CAI1C;;AACA,WAAOgH,mBAAO+B,UAAP,CAAkBvJ,KAAlB,EAAyBW,CAAzB,EAA4B,KAA5B,EAAmC,EAAnC,EAAuC,EAAvC,CAAP;AACD,GAND,EAh/BmE,CAw/BnE;;AACAV,EAAAA,GAAG,CAACM,kBAAJ,CAAuB,KAAvB,EAA8B,CAA9B,EAAiCC,OAAO,IAAI;AAC1C;AACA,QAAIG,CAAC,GAAGH,OAAR,CAF0C,CAI1C;;AACA,WAAOgH,mBAAO+B,UAAP,CAAkBvJ,KAAlB,EAAyBW,CAAzB,EAA4B,KAA5B,EAAmC,EAAnC,EAAuC,EAAvC,CAAP;AACD,GAND;AAQA,SAAOV,GAAP;AACD","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport { Realm } from \"../../realm.js\";\nimport { FatalError } from \"../../errors.js\";\nimport { AbstractValue, NullValue, NumberValue, ObjectValue, StringValue, UndefinedValue } from \"../../values/index.js\";\nimport { IsCallable, IsRegExp } from \"../../methods/is.js\";\nimport { GetMethod, GetSubstitution } from \"../../methods/get.js\";\nimport { Call, Invoke } from \"../../methods/call.js\";\nimport { Create, To } from \"../../singletons.js\";\nimport { RegExpCreate } from \"../../methods/regexp.js\";\nimport { SplitMatch, RequireObjectCoercible } from \"../../methods/abstract.js\";\nimport { HasSomeCompatibleType } from \"../../methods/has.js\";\nimport invariant from \"../../invariant.js\";\n\nconst sliceTemplateSrc = \"(A).slice(B,C)\";\nconst splitTemplateSrc = \"(A).split(B,C)\";\n\nexport default function(realm: Realm, obj: ObjectValue): ObjectValue {\n  // ECMA262 21.1.3\n  obj.$StringData = realm.intrinsics.emptyString;\n\n  // ECMA262 21.1.3\n  obj.defineNativeProperty(\"length\", realm.intrinsics.zero);\n\n  // ECMA262 21.1.3.1\n  obj.defineNativeMethod(\"charAt\", 1, (context, [pos]) => {\n    // 1. Let O be ? RequireObjectCoercible(this value).\n    let O = RequireObjectCoercible(realm, context);\n\n    // 2. Let S be ? ToString(O).\n    let S = To.ToString(realm, O.throwIfNotConcrete());\n\n    // 3. Let position be ? ToInteger(pos).\n    let position = To.ToInteger(realm, pos);\n\n    // 4. Let size be the number of elements in S.\n    let size = S.length;\n\n    // 5. If position < 0 or position ≥ size, return the empty String.\n    if (position < 0 || position >= size) return realm.intrinsics.emptyString;\n\n    // 6. Return a String of length 1, containing one code unit from S, namely the code unit at index position.\n    return new StringValue(realm, S.charAt(position));\n  });\n\n  // ECMA262 21.1.3.2\n  obj.defineNativeMethod(\"charCodeAt\", 1, (context, [pos]) => {\n    // 1. Let O be ? RequireObjectCoercible(this value).\n    let O = RequireObjectCoercible(realm, context);\n\n    // 2. Let S be ? ToString(O).\n    let S = To.ToString(realm, O.throwIfNotConcrete());\n\n    // 3. Let position be ? ToInteger(pos).\n    let position = To.ToInteger(realm, pos);\n\n    // 4. Let size be the number of elements in S.\n    let size = S.length;\n\n    // 5. If position < 0 or position ≥ size, return NaN.\n    if (position < 0 || position >= size) return realm.intrinsics.NaN;\n\n    // 6. Return a value of Number type, whose value is the code unit value of the element at index position\n    //    in the String S.\n    return new NumberValue(realm, S.charCodeAt(position));\n  });\n\n  // ECMA262 21.1.3.3\n  if (!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION) && !realm.isCompatibleWith(\"mobile\"))\n    obj.defineNativeMethod(\"codePointAt\", 1, (context, [pos]) => {\n      // 1. Let O be ? RequireObjectCoercible(this value).\n      let O = RequireObjectCoercible(realm, context);\n\n      // 2. Let S be ? ToString(O).\n      let S = To.ToString(realm, O.throwIfNotConcrete());\n\n      // 3. Let position be ? ToInteger(pos).\n      let position = To.ToInteger(realm, pos);\n\n      // 4. Let size be the number of elements in S.\n      let size = S.length;\n\n      // 5. If position < 0 or position ≥ size, return undefined.\n      if (position < 0 || position >= size) return realm.intrinsics.undefined;\n\n      // 6. Let first be the code unit value of the element at index position in the String S.\n      // 7. If first < 0xD800 or first > 0xDBFF or position+1 = size, return first.\n      // 8. Let second be the code unit value of the element at index position+1 in the String S.\n      // 9. If second < 0xDC00 or second > 0xDFFF, return first.\n      // 10. Return UTF16Decode(first, second).\n      return new NumberValue(realm, S.codePointAt(position));\n    });\n\n  // ECMA262 21.1.3.4\n  obj.defineNativeMethod(\"concat\", 1, (context, args, argCount) => {\n    // 1. Let O be ? RequireObjectCoercible(this value).\n    let O = RequireObjectCoercible(realm, context);\n\n    // 2. Let S be ? ToString(O).\n    let S = To.ToString(realm, O.throwIfNotConcrete());\n\n    // 3. Let args be a List whose elements are the arguments passed to this function.\n    args = argCount === 0 ? [] : args;\n\n    // 4. Let R be S.\n    let R = S;\n\n    // 5. Repeat, while args is not empty\n    while (args.length) {\n      // a. Remove the first element from args and let next be the value of that element.\n      let next = args.shift();\n\n      // b. Let nextString be ? ToString(next).\n      let nextString = To.ToStringPartial(realm, next);\n\n      // c. Let R be the String value consisting of the code units of the previous value of R followed by the code units of nextString.\n      R = R + nextString;\n    }\n\n    // 6. Return R.\n    return new StringValue(realm, R);\n  });\n\n  // ECMA262 21.1.3.6\n  if (!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION) && !realm.isCompatibleWith(\"mobile\"))\n    obj.defineNativeMethod(\"endsWith\", 1, (context, [searchString, endPosition]) => {\n      // 1. Let O be ? RequireObjectCoercible(this value).\n      let O = RequireObjectCoercible(realm, context);\n\n      // 2. Let S be ? ToString(O).\n      let S = To.ToString(realm, O.throwIfNotConcrete());\n\n      // 3. Let isRegExp be ? IsRegExp(searchString).\n      let isRegExp = IsRegExp(realm, searchString);\n\n      // 4. If isRegExp is true, throw a TypeError exception.\n      if (isRegExp) {\n        throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"String.prototype\");\n      }\n\n      // 5. Let searchStr be ? ToString(searchString).\n      let searchStr = To.ToStringPartial(realm, searchString);\n\n      // 6. Let len be the number of elements in S.\n      let len = S.length;\n\n      // 7. If endPosition is undefined, let pos be len, else let pos be ? ToInteger(endPosition).)\n      let pos;\n      if (!endPosition || endPosition instanceof UndefinedValue) {\n        pos = len;\n      } else {\n        pos = To.ToInteger(realm, endPosition.throwIfNotConcrete());\n      }\n\n      // 8. Let end be min(max(pos, 0), len).\n      let end = Math.min(Math.max(pos, 0), len);\n\n      // 9. Let searchLength be the number of elements in searchStr.\n      let searchLength = searchStr.length;\n\n      // 10. Let start be end - searchLength.\n      let start = end - searchLength;\n\n      // 11. If start is less than 0, return false.\n      if (start < 0) return realm.intrinsics.false;\n\n      // 12. If the sequence of elements of S starting at start of length searchLength is the same as the full\n      //     element sequence of searchStr, return true.\n      if (S.substr(start, searchLength) === searchStr) return realm.intrinsics.true;\n\n      // 13. Otherwise, return false.\n      return realm.intrinsics.false;\n    });\n\n  // ECMA262 21.1.3.7\n  if (!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION) && !realm.isCompatibleWith(\"mobile\"))\n    obj.defineNativeMethod(\"includes\", 1, (context, [searchString, position]) => {\n      // 1. Let O be ? RequireObjectCoercible(this value).\n      let O = RequireObjectCoercible(realm, context);\n\n      // 2. Let S be ? ToString(O).\n      let S = To.ToString(realm, O.throwIfNotConcrete());\n\n      // 3. Let isRegExp be ? IsRegExp(searchString).\n      let isRegExp = IsRegExp(realm, searchString);\n\n      // 4. If isRegExp is true, throw a TypeError exception.\n      if (isRegExp) {\n        throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"String.prototype\");\n      }\n\n      // 5. Let searchStr be ? ToString(searchString).\n      let searchStr = To.ToStringPartial(realm, searchString);\n\n      // 6. Let pos be ? ToInteger(position). (If position is undefined, this step produces the value 0.)\n      let pos = To.ToInteger(realm, position || realm.intrinsics.undefined);\n\n      // 7. Let len be the number of elements in S.\n      let len = S.length;\n\n      // 8. Let start be min(max(pos, 0), len).\n      let start = Math.min(Math.max(pos, 0), len);\n\n      // 9. Let searchLen be the number of elements in searchStr.\n      let searchLen = searchStr.length;\n\n      // 10. If there exists any integer k not smaller than start such that k + searchLen is not greater than\n      //     len, and for all nonnegative integers j less than searchLen, the code unit at index k+j of S is the\n      //     same as the code unit at index j of searchStr, return true; but if there is no such integer k,\n      //     return false.\n      if (searchLen === 0) {\n        return realm.intrinsics.true;\n      } else {\n        for (let k = start; k + searchLen <= len; ++k) {\n          let found = true;\n          for (let j = 0; j < searchLen; ++j) {\n            if (S.charCodeAt(k + j) !== searchStr.charCodeAt(j)) {\n              found = false;\n            }\n          }\n          if (found) return realm.intrinsics.true;\n        }\n        return realm.intrinsics.false;\n      }\n    });\n\n  // ECMA262 21.1.3.8\n  obj.defineNativeMethod(\"indexOf\", 1, (context, [searchString, position]) => {\n    // 1. Let O be ? RequireObjectCoercible(this value).\n    let O = RequireObjectCoercible(realm, context);\n\n    // 2. Let S be ? ToString(O).\n    let S = To.ToString(realm, O.throwIfNotConcrete());\n\n    // 3. Let searchStr be ? ToString(searchString).\n    let searchStr = To.ToStringPartial(realm, searchString);\n\n    // 4. Let pos be ? ToInteger(position). (If position is undefined, this step produces the value 0.)\n    let pos = position ? To.ToInteger(realm, position) : 0;\n\n    // 5. Let len be the number of elements in S.\n    // 6. Let start be min(max(pos, 0), len).\n    // 7. Let searchLen be the number of elements in searchStr.\n    // 8. Return the smallest possible integer k not smaller than start such that k+searchLen is not greater\n    //    than len, and for all nonnegative integers j less than searchLen, the code unit at index k+j of S is\n    //    the same as the code unit at index j of searchStr; but if there is no such integer k, return the\n    //    value -1.\n    return new NumberValue(realm, S.indexOf(searchStr, pos));\n  });\n\n  // ECMA262 21.1.3.9\n  obj.defineNativeMethod(\"lastIndexOf\", 1, (context, [searchString, position]) => {\n    // 1. Let O be ? RequireObjectCoercible(this value).\n    let O = RequireObjectCoercible(realm, context);\n\n    // 2. Let S be ? ToString(O).\n    let S = To.ToString(realm, O.throwIfNotConcrete());\n\n    // 3. Let searchStr be ? ToString(searchString).\n    let searchStr = To.ToStringPartial(realm, searchString);\n\n    // 4. Let numPos be ? ToNumber(position). (If position is undefined, this step produces the value NaN.)\n    let numPos = To.ToNumber(realm, position || realm.intrinsics.undefined);\n\n    // 5. If numPos is NaN, let pos be +∞; otherwise, let pos be ToInteger(numPos).\n    let pos;\n    if (isNaN(numPos)) {\n      pos = Infinity;\n    } else {\n      pos = To.ToInteger(realm, numPos);\n    }\n\n    // 6. Let len be the number of elements in S.\n    // 7. Let start be min(max(pos, 0), len).\n    // 8. Let searchLen be the number of elements in searchStr.\n    // 9. Return the largest possible nonnegative integer k not larger than start such that k+searchLen is not\n    //    greater than len, and for all nonnegative integers j less than searchLen, the code unit at index k+j\n    //    of S is the same as the code unit at index j of searchStr; but if there is no such integer k, return\n    //    the value -1.\n    return new NumberValue(realm, S.lastIndexOf(searchStr, pos));\n  });\n\n  // ECMA262 21.1.3.10\n  obj.defineNativeMethod(\"localeCompare\", 1, (context, [that]) => {\n    // 1. Let O be ? RequireObjectCoercible(this value).\n    let O = RequireObjectCoercible(realm, context);\n\n    // 2. Let S be ? ToString(O).\n    let S = To.ToString(realm, O.throwIfNotConcrete());\n\n    // 3. Let That be ? ToString(that).\n    let That = To.ToStringPartial(realm, that);\n\n    return new NumberValue(realm, S.localeCompare(That));\n  });\n\n  // ECMA262 21.1.3.11\n  obj.defineNativeMethod(\"match\", 1, (context, [regexp]) => {\n    // 1. Let O be ? RequireObjectCoercible(this value).\n    let O = RequireObjectCoercible(realm, context);\n\n    // 2. If regexp is neither undefined nor null, then\n    if (!HasSomeCompatibleType(regexp, UndefinedValue, NullValue)) {\n      // a. Let matcher be ? GetMethod(regexp, @@match).\n      let matcher = GetMethod(realm, regexp, realm.intrinsics.SymbolMatch);\n\n      // b. If matcher is not undefined, then\n      if (!matcher.mightBeUndefined()) {\n        // i. Return ? Call(matcher, regexp, « O »).\n        return Call(realm, matcher, regexp, [O]);\n      }\n      matcher.throwIfNotConcrete();\n    }\n\n    // 3. Let S be ? ToString(O).\n    let S = new StringValue(realm, To.ToStringPartial(realm, O));\n\n    // 4. Let rx be ? RegExpCreate(regexp, undefined).\n    let rx = RegExpCreate(realm, regexp, undefined);\n\n    // 5. Return ? Invoke(rx, @@match, « S »).\n    return Invoke(realm, rx, realm.intrinsics.SymbolMatch, [S]);\n  });\n\n  // ECMA262 21.1.3.12\n  if (!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION) && !realm.isCompatibleWith(\"mobile\"))\n    obj.defineNativeMethod(\"normalize\", 0, (context, [form]) => {\n      // 1. Let O be ? RequireObjectCoercible(this value).\n      let O = RequireObjectCoercible(realm, context);\n\n      // 2. Let S be ? ToString(O).\n      let S = To.ToString(realm, O.throwIfNotConcrete());\n\n      // 3. If form is not provided or form is undefined, let form be \"NFC\".\n      if (!form || form instanceof UndefinedValue) form = new StringValue(realm, \"NFC\");\n\n      // 4. Let f be ? ToString(form).\n      let f = To.ToStringPartial(realm, form);\n\n      // 5. If f is not one of \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", throw a RangeError exception.\n      if (f !== \"NFC\" && f !== \"NFD\" && f !== \"NFKC\" && f !== \"NFKD\") {\n        throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError);\n      }\n\n      // 6. Let ns be the String value that is the result of normalizing S into the normalization form named by\n      //    f as specified in http://www.unicode.org/reports/tr15/tr15-29.html.\n      // 7. Return ns.\n      return new StringValue(realm, S.normalize(f));\n    });\n\n  // ECMA262 21.1.3.13\n  if (!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION) && !realm.isCompatibleWith(\"mobile\"))\n    obj.defineNativeMethod(\"padEnd\", 1, (context, [maxLength, fillString]) => {\n      // 1. Let O be ? RequireObjectCoercible(this value).\n      let O = RequireObjectCoercible(realm, context);\n\n      // 2. Let S be ? ToString(O).\n      let S = To.ToString(realm, O.throwIfNotConcrete());\n\n      // 3. Let intMaxLength be ? ToLength(maxLength).\n      let intMaxLength = To.ToLength(realm, maxLength);\n\n      // 4. Let stringLength be the number of elements in S.\n      let stringLength = S.length;\n\n      // 5. If intMaxLength is not greater than stringLength, return S.\n      if (intMaxLength <= stringLength) return new StringValue(realm, S);\n\n      let filler;\n      // 6. If fillString is undefined, let filler be a String consisting solely of the code unit 0x0020 (SPACE).\n      if (!fillString || fillString instanceof UndefinedValue) filler = \" \";\n      else {\n        // 7. Else, let filler be ? ToString(fillString).\n        filler = To.ToStringPartial(realm, fillString);\n      }\n      // 8. If filler is the empty String, return S.\n      if (filler === \"\") return new StringValue(realm, S);\n\n      // 9. Let fillLen be intMaxLength - stringLength.\n      let fillLen = intMaxLength - stringLength;\n\n      // 10. Let truncatedStringFiller be a new String value consisting of repeated concatenations of filler truncated to length fillLen.\n      let truncatedStringFiller = filler.repeat(Math.ceil(fillLen / filler.length)).substr(0, fillLen);\n\n      // 11. Return a new String value computed by the concatenation of S and truncatedStringFiller.\n      return new StringValue(realm, S + truncatedStringFiller);\n    });\n\n  // ECMA262 21.1.3.14\n  if (!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION) && !realm.isCompatibleWith(\"mobile\"))\n    obj.defineNativeMethod(\"padStart\", 1, (context, [maxLength, fillString]) => {\n      // 1. Let O be ? RequireObjectCoercible(this value).\n      let O = RequireObjectCoercible(realm, context);\n\n      // 2. Let S be ? ToString(O).\n      let S = To.ToString(realm, O.throwIfNotConcrete());\n\n      // 3. Let intMaxLength be ? ToLength(maxLength).\n      let intMaxLength = To.ToLength(realm, maxLength);\n\n      // 4. Let stringLength be the number of elements in S.\n      let stringLength = S.length;\n\n      // 5. If intMaxLength is not greater than stringLength, return S.\n      if (intMaxLength <= stringLength) return new StringValue(realm, S);\n\n      let filler;\n      // 6. If fillString is undefined, let filler be a String consisting solely of the code unit 0x0020 (SPACE).\n      if (!fillString || fillString instanceof UndefinedValue) filler = \" \";\n      else {\n        // 7. Else, let filler be ? ToString(fillString).\n        filler = To.ToStringPartial(realm, fillString);\n      }\n      // 8. If filler is the empty String, return S.\n      if (filler === \"\") return new StringValue(realm, S);\n\n      // 9. Let fillLen be intMaxLength - stringLength.\n      let fillLen = intMaxLength - stringLength;\n\n      // 10. Let truncatedStringFiller be a new String value consisting of repeated concatenations of filler truncated to length fillLen.\n      let truncatedStringFiller = filler.repeat(Math.ceil(fillLen / filler.length)).substr(0, fillLen);\n\n      // 11. Return a new String value computed by the concatenation of truncatedStringFiller and S.\n      return new StringValue(realm, truncatedStringFiller + S);\n    });\n\n  // ECMA262 21.1.3.13\n  if (!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION) && !realm.isCompatibleWith(\"mobile\"))\n    obj.defineNativeMethod(\"repeat\", 1, (context, [count]) => {\n      // 1. Let O be ? RequireObjectCoercible(this value).\n      let O = RequireObjectCoercible(realm, context);\n\n      // 2. Let S be ? ToString(O).\n      let S = To.ToString(realm, O.throwIfNotConcrete());\n\n      // 3. Let n be ? ToInteger(count).\n      let n = To.ToInteger(realm, count);\n\n      // 4. If n < 0, throw a RangeError exception.\n      if (n < 0) {\n        throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError);\n      }\n\n      // 5. If n is +∞, throw a RangeError exception.\n      if (!isFinite(n)) {\n        throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError);\n      }\n\n      // 6. Let T be a String value that is made from n copies of S appended together. If n is 0, T is the empty String.\n      let T = \"\";\n      if (S) while (n--) T += S;\n\n      // 7. Return T.\n      return new StringValue(realm, T);\n    });\n\n  // ECMA262 21.1.3.14\n  obj.defineNativeMethod(\"replace\", 2, (context, [searchValue, replaceValue]) => {\n    let replStr;\n\n    // 1. Let O be ? RequireObjectCoercible(this value).\n    let O = RequireObjectCoercible(realm, context);\n\n    // 2. If searchValue is neither undefined nor null, then\n    if (!HasSomeCompatibleType(searchValue, NullValue, UndefinedValue)) {\n      // a. Let replacer be ? GetMethod(searchValue, @@replace).\n      let replacer = GetMethod(realm, searchValue, realm.intrinsics.SymbolReplace);\n\n      // b. If replacer is not undefined, then\n      if (!(replacer instanceof UndefinedValue)) {\n        // i. Return ? Call(replacer, searchValue, « O, replaceValue »).\n        return Call(realm, replacer, searchValue, [O, replaceValue]);\n      }\n    }\n\n    // 3. Let string be ? ToString(O).\n    let string = To.ToString(realm, O.throwIfNotConcrete());\n\n    // 4. Let searchString be ? ToString(searchValue).\n    let searchString = To.ToStringPartial(realm, searchValue);\n\n    // 5. Let functionalReplace be IsCallable(replaceValue).\n    let functionalReplace = IsCallable(realm, replaceValue);\n\n    let replaceValueString;\n    // 6. If functionalReplace is false, then\n    if (functionalReplace === false) {\n      // a. Let replaceValue be ? ToString(replaceValue).\n      replaceValueString = To.ToStringPartial(realm, replaceValue);\n    }\n\n    // 7. Search string for the first occurrence of searchString and\n    //    let pos be the index within string of the first code unit of the matched substring and\n    let pos = string.indexOf(searchString);\n\n    //    let matched be searchString.\n    let matched = searchString;\n\n    //    If no occurrences of searchString were found, return string.\n    if (pos < 0) return new StringValue(realm, string);\n\n    // 8. If functionalReplace is true, then\n    if (functionalReplace === true) {\n      // a. Let replValue be ? Call(replaceValue, undefined, « matched, pos, string »).\n      let replValue = Call(realm, replaceValue, realm.intrinsics.undefined, [\n        new StringValue(realm, matched),\n        new NumberValue(realm, pos),\n        new StringValue(realm, string),\n      ]);\n\n      // b. Let replStr be ? ToString(replValue).\n      replStr = To.ToStringPartial(realm, replValue);\n    } else {\n      // 9. Else,\n      // a. Let captures be an empty List.\n      let captures = [];\n\n      // b. Let replStr be GetSubstitution(matched, string, pos, captures, replaceValue).\n      invariant(typeof replaceValueString === \"string\");\n      replStr = To.ToString(realm, GetSubstitution(realm, matched, string, pos, captures, replaceValueString));\n    }\n\n    // 10. Let tailPos be pos + the number of code units in matched.\n    let tailPos = pos + matched.length;\n\n    // 11. Let newString be the String formed by concatenating the first pos code units of string,\n    //     replStr, and the trailing substring of string starting at index tailPos. If pos is 0,\n    //     the first element of the concatenation will be the empty String.\n    let newString = string.substr(0, pos) + replStr + string.substr(tailPos);\n\n    // 12. Return newString.\n    return new StringValue(realm, newString);\n  });\n\n  // ECMA262 21.1.3.15\n  obj.defineNativeMethod(\"search\", 1, (context, [regexp]) => {\n    // 1. Let O be ? RequireObjectCoercible(this value).\n    let O = RequireObjectCoercible(realm, context);\n\n    // 2. If regexp is neither undefined nor null, then\n    if (!HasSomeCompatibleType(regexp, UndefinedValue, NullValue)) {\n      // a. Let searcher be ? GetMethod(regexp, @@search).\n      let searcher = GetMethod(realm, regexp, realm.intrinsics.SymbolSearch);\n\n      // b. If searcher is not undefined, then\n      if (!(searcher instanceof UndefinedValue)) {\n        // i. Return ? Call(searcher, regexp, « O »).\n        return Call(realm, searcher, regexp, [O]);\n      }\n    }\n\n    // 3. Let string be ? ToString(O).\n    let string = To.ToStringPartial(realm, O);\n\n    // 4. Let rx be ? RegExpCreate(regexp, undefined).\n    let rx = RegExpCreate(realm, regexp, undefined);\n\n    // 5. Return ? Invoke(rx, @@search, « string »).\n    return Invoke(realm, rx, realm.intrinsics.SymbolSearch, [new StringValue(realm, string)]);\n  });\n\n  // ECMA262 21.1.3.16\n  obj.defineNativeMethod(\"slice\", 2, (context, [start, end]) => {\n    // 1. Let O be ? RequireObjectCoercible(this value).\n    let O = RequireObjectCoercible(realm, context);\n\n    if (O instanceof AbstractValue && O.getType() === StringValue) {\n      // This operation is a conditional atemporal\n      // See #2327\n      let absVal = AbstractValue.createFromTemplate(realm, sliceTemplateSrc, StringValue, [O, start, end]);\n      return AbstractValue.convertToTemporalIfArgsAreTemporal(realm, absVal, [O]);\n    }\n\n    // 2. Let S be ? ToString(O).\n    let S = To.ToString(realm, O.throwIfNotConcrete());\n\n    // 3. Let len be the number of elements in S.\n    let len = S.length;\n\n    // 4. Let intStart be ? ToInteger(start).\n    let intStart = To.ToInteger(realm, start);\n\n    // 5. If end is undefined, let intEnd be len; else let intEnd be ? ToInteger(end).\n    let intEnd = !end || end instanceof UndefinedValue ? len : To.ToInteger(realm, end.throwIfNotConcrete());\n\n    // 6. If intStart < 0, let from be max(len + intStart, 0); otherwise let from be min(intStart, len).\n    let from = intStart < 0 ? Math.max(len + intStart, 0) : Math.min(intStart, len);\n\n    // 7. If intEnd < 0, let to be max(len + intEnd, 0); otherwise let to be min(intEnd, len).\n    let to = intEnd < 0 ? Math.max(len + intEnd, 0) : Math.min(intEnd, len);\n\n    // 8. Let span be max(to - from, 0).\n    let span = Math.max(to - from, 0);\n\n    // 9. Return a String value containing span consecutive elements from S beginning with the element at index from.\n    return new StringValue(realm, S.substr(from, span));\n  });\n\n  // ECMA262 21.1.3.17\n  obj.defineNativeMethod(\"split\", 2, (context, [separator, limit]) => {\n    // 1. Let O be ? RequireObjectCoercible(this value).\n    let O = RequireObjectCoercible(realm, context);\n\n    if (O instanceof AbstractValue && O.getType() === StringValue) {\n      // This operation is a conditional atemporal\n      // See #2327\n      let absVal = AbstractValue.createFromTemplate(realm, splitTemplateSrc, ObjectValue, [O, separator, limit]);\n      return AbstractValue.convertToTemporalIfArgsAreTemporal(realm, absVal, [O]);\n    }\n\n    // 2. If separator is neither undefined nor null, then\n    if (!HasSomeCompatibleType(separator, UndefinedValue, NullValue)) {\n      // a. Let splitter be ? GetMethod(separator, @@split).\n      let splitter = GetMethod(realm, separator, realm.intrinsics.SymbolSplit);\n\n      // b. If splitter is not undefined, then\n      if (!(splitter instanceof UndefinedValue)) {\n        // i. Return ? Call(splitter, separator, « O, limit »).\n        return Call(realm, splitter, separator, [O, limit]);\n      }\n    }\n\n    // 3. Let S be ? ToString(O).\n    let S = To.ToString(realm, O.throwIfNotConcrete());\n\n    // 4. Let A be ArrayCreate(0).\n    let A = Create.ArrayCreate(realm, 0);\n\n    // 5. Let lengthA be 0.\n    let lengthA = 0;\n\n    // 6. If limit is undefined, let lim be 232-1; else let lim be ? ToUint32(limit).\n    let lim =\n      !limit || limit instanceof UndefinedValue ? Math.pow(2, 32) - 1 : To.ToUint32(realm, limit.throwIfNotConcrete());\n\n    // 7. Let s be the number of elements in S.\n    let s = S.length;\n\n    // 8. Let p be 0.\n    let p = 0;\n\n    // 9. Let R be ? ToString(separator).\n    let R = To.ToStringPartial(realm, separator);\n\n    // 10. If lim = 0, return A.\n    if (lim === 0) return A;\n\n    // 11. If separator is undefined, then\n    if (!separator || separator instanceof UndefinedValue) {\n      // a. Perform ! CreateDataProperty(A, \"0\", S).\n      Create.CreateDataProperty(realm, A, \"0\", new StringValue(realm, S));\n\n      // b. Return A.\n      return A;\n    }\n\n    // 12. If s = 0, then\n    if (s === 0) {\n      // a. Let z be SplitMatch(S, 0, R).\n      let z = SplitMatch(realm, S, 0, R);\n\n      // b. If z is not false, return A.\n      if (z !== false) return A;\n\n      // c. Perform ! CreateDataProperty(A, \"0\", S).\n      Create.CreateDataProperty(realm, A, \"0\", new StringValue(realm, S));\n      // d. Return A.\n      return A;\n    }\n\n    // 13. Let q be p.\n    let q = p;\n\n    // 14. Repeat, while q ≠ s\n    while (q !== s) {\n      // a. Let e be SplitMatch(S, q, R).\n      let e = SplitMatch(realm, S, q, R);\n\n      // b. If e is false, let q be q+1.\n      if (e === false) {\n        q++;\n      } else {\n        // c. Else e is an integer index ≤ s,\n        // i. If e = p, let q be q+1.\n        if (e === p) {\n          q++;\n        } else {\n          // ii. Else e ≠ p,\n          // 1. Let T be a String value equal to the substring of S consisting of the code units at indices p (inclusive) through q (exclusive).\n          let T = S.substring(p, q);\n\n          // 2. Perform ! CreateDataProperty(A, ! ToString(lengthA), T).\n          Create.CreateDataProperty(realm, A, new StringValue(realm, lengthA + \"\"), new StringValue(realm, T));\n\n          // 3. Increment lengthA by 1.\n          lengthA++;\n\n          // 4. If lengthA = lim, return A.\n          if (lengthA === lim) return A;\n\n          // 5. Let p be e.\n          p = e;\n\n          // 6. Let q be p.\n          q = p;\n        }\n      }\n    }\n\n    // 15. Let T be a String value equal to the substring of S consisting of the code units at indices p (inclusive) through s (exclusive).\n    let T = S.substring(p, s);\n\n    // 16. Perform ! CreateDataProperty(A, ! ToString(lengthA), T).\n    Create.CreateDataProperty(realm, A, new StringValue(realm, lengthA + \"\"), new StringValue(realm, T));\n\n    // 17. Return A.\n    return A;\n  });\n\n  // ECMA262 21.1.3.18\n  if (!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION) && !realm.isCompatibleWith(\"mobile\"))\n    obj.defineNativeMethod(\"startsWith\", 1, (context, [searchString, position]) => {\n      // 1. Let O be ? RequireObjectCoercible(this value).\n      let O = RequireObjectCoercible(realm, context);\n\n      // 2. Let S be ? ToString(O).\n      let S = To.ToString(realm, O.throwIfNotConcrete());\n\n      // 3. Let isRegExp be ? IsRegExp(searchString).\n      let isRegExp = IsRegExp(realm, searchString);\n\n      // 4. If isRegExp is true, throw a TypeError exception.\n      if (isRegExp) {\n        throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"String.prototype\");\n      }\n\n      // 5. Let searchStr be ? ToString(searchString).\n      let searchStr = To.ToStringPartial(realm, searchString);\n\n      // 6. Let pos be ? ToInteger(position). (If position is undefined, this step produces the value 0.)\n      let pos = To.ToInteger(realm, position || realm.intrinsics.undefined);\n\n      // 7. Let len be the number of elements in S.\n      let len = S.length;\n\n      // 8. Let start be min(max(pos, 0), len).\n      let start = Math.min(Math.max(pos, 0), len);\n\n      // 9. Let searchLength be the number of elements in searchStr.\n      let searchLength = searchStr.length;\n\n      // 10. If searchLength+start is greater than len, return false.\n      if (searchLength + start > len) return realm.intrinsics.false;\n\n      // 11. If the sequence of elements of S starting at start of length searchLength is the same as the full element sequence of searchStr, return true.\n      if (S.substr(start, searchLength) === searchStr) return realm.intrinsics.true;\n\n      // 12. Otherwise, return false.\n      return realm.intrinsics.false;\n    });\n\n  // ECMA262 21.1.3.19\n  obj.defineNativeMethod(\"substring\", 2, (context, [start, end]) => {\n    // 1. Let O be ? RequireObjectCoercible(this value).\n    let O = RequireObjectCoercible(realm, context);\n\n    // 2. Let S be ? ToString(O).\n    let S = To.ToString(realm, O.throwIfNotConcrete());\n\n    // 3. Let len be the number of elements in S.\n    let len = S.length;\n\n    // 4. Let intStart be ? ToInteger(start).\n    let intStart = To.ToInteger(realm, start);\n\n    // 5. If end is undefined, let intEnd be len; else let intEnd be ? ToInteger(end).\n    let intEnd = !end || end instanceof UndefinedValue ? len : To.ToInteger(realm, end.throwIfNotConcrete());\n\n    // 6. Let finalStart be min(max(intStart, 0), len).\n    let finalStart = Math.min(Math.max(intStart, 0), len);\n\n    // 7. Let finalEnd be min(max(intEnd, 0), len).\n    let finalEnd = Math.min(Math.max(intEnd, 0), len);\n\n    // 8. Let from be min(finalStart, finalEnd).\n    let frm = Math.min(finalStart, finalEnd);\n\n    // 9. Let to be max(finalStart, finalEnd).\n    let to = Math.max(finalStart, finalEnd);\n\n    // 10. Return a String whose length is to - from, containing code units from S, namely the code units with indices from through to - 1, in ascending order.\n    return new StringValue(realm, S.slice(frm, to));\n  });\n\n  type toCaseTypes = \"LocaleLower\" | \"LocaleUpper\" | \"Lower\" | \"Upper\";\n  function toCase(type: toCaseTypes, context, locales) {\n    // 1. Let O be RequireObjectCoercible(this value).\n    let O = RequireObjectCoercible(realm, context);\n\n    // 2. Let S be ToString(O)\n    let S = To.ToString(realm, O.throwIfNotConcrete());\n\n    if (realm.isCompatibleWith(realm.MOBILE_JSC_VERSION) || realm.isCompatibleWith(\"mobile\")) {\n      locales = undefined;\n    } else {\n      // TODO #1013 filter locales for only serialisable values\n      if (locales) locales = locales.serialize();\n    }\n\n    if (realm.useAbstractInterpretation && (type === \"LocaleUpper\" || type === \"LocaleLower\")) {\n      // The locale is environment-dependent\n      AbstractValue.reportIntrospectionError(O);\n      throw new FatalError();\n    }\n\n    // Omit the rest of the arguments. Just use the native impl.\n    return new StringValue(realm, (S: any)[`to${type}Case`](locales));\n  }\n\n  // ECMA-262 21.1.3.20\n  // ECMA-402 13.1.2\n  obj.defineNativeMethod(\"toLocaleLowerCase\", 0, (context, [locales]) => {\n    return toCase(\"LocaleLower\", context, locales);\n  });\n\n  // ECMA-262 21.1.3.21\n  // ECMA-402 13.1.3\n  obj.defineNativeMethod(\"toLocaleUpperCase\", 0, (context, [locales]) => {\n    return toCase(\"LocaleUpper\", context, locales);\n  });\n\n  // ECMA262 21.1.3.22\n  obj.defineNativeMethod(\"toLowerCase\", 0, context => {\n    return toCase(\"Lower\", context);\n  });\n\n  // ECMA262 21.1.3.23\n  obj.defineNativeMethod(\"toString\", 0, context => {\n    const target = context instanceof ObjectValue ? context.$StringData : context;\n    if (target instanceof AbstractValue && target.getType() === StringValue) {\n      return target;\n    }\n    // 1. Return ? thisStringValue(this value).\n    return To.thisStringValue(realm, context);\n  });\n\n  // ECMA262 21.1.3.24\n  obj.defineNativeMethod(\"toUpperCase\", 0, context => {\n    return toCase(\"Upper\", context);\n  });\n\n  // ECMA262 21.1.3.25\n  obj.defineNativeMethod(\"trim\", 0, context => {\n    // 1. Let O be ? RequireObjectCoercible(this value).\n    let O = RequireObjectCoercible(realm, context);\n\n    // 2. Let S be ? ToString(O).\n    let S = To.ToString(realm, O.throwIfNotConcrete());\n\n    // 3. Let T be a String value that is a copy of S with both leading and trailing white space removed. The definition of white space is the union of WhiteSpace and LineTerminator. When determining whether a Unicode code point is in Unicode general category “Zs”, code unit sequences are interpreted as UTF-16 encoded code point sequences as specified in 6.1.4.\n    let T = S.trim();\n\n    // 4. Return T.\n    return new StringValue(realm, T);\n  });\n\n  // ECMA262 21.1.3.26\n  obj.defineNativeMethod(\"valueOf\", 0, context => {\n    // 1. Return ? thisStringValue(this value).\n    return To.thisStringValue(realm, context);\n  });\n\n  // ECMA262 21.1.3.27\n  obj.defineNativeMethod(realm.intrinsics.SymbolIterator, 0, context => {\n    // 1. Let O be ? RequireObjectCoercible(this value).\n    let O = RequireObjectCoercible(realm, context);\n\n    // 2. Let S be ? ToString(O).\n    let S = To.ToString(realm, O.throwIfNotConcrete());\n\n    // 3. Return CreateStringIterator(S).\n    return Create.CreateStringIterator(realm, new StringValue(realm, S));\n  });\n\n  // B.2.3.1\n  obj.defineNativeMethod(\"substr\", 2, (context, [start, length]) => {\n    // 1. Let O be RequireObjectCoercible(this value).\n    let O = RequireObjectCoercible(realm, context);\n\n    // 2. Let S be ToString(O).\n    let S = To.ToStringPartial(realm, O);\n\n    // 3. ReturnIfAbrupt(S).\n\n    // 4. Let intStart be ToInteger(start).\n    let intStart = To.ToInteger(realm, start);\n\n    // 5. ReturnIfAbrupt(intStart).\n\n    // 6. If length is undefined, let end be +∞; otherwise let end be ToInteger(length).\n    let end;\n    if (!length || length instanceof UndefinedValue) {\n      end = Infinity;\n    } else {\n      end = To.ToInteger(realm, length.throwIfNotConcrete());\n    }\n\n    // 7. ReturnIfAbrupt(end).\n\n    // 8. Let size be the number of code units in S.\n    let size = S.length;\n\n    // 9. If intStart < 0, let intStart be max(size + intStart,0).\n    if (intStart < 0) intStart = Math.max(size + intStart, 0);\n\n    // 10. Let resultLength be min(max(end,0), size – intStart).\n    let resultLength = Math.min(Math.max(end, 0), size - intStart);\n\n    // 11. If resultLength ≤ 0, return the empty String \"\".\n    if (resultLength <= 0) return realm.intrinsics.emptyString;\n\n    // 12. Return a String containing resultLength consecutive code units from S beginning with the code unit at index intStart.\n    return new StringValue(realm, S.slice(intStart, intStart + resultLength));\n  });\n\n  // B.2.3.2\n  obj.defineNativeMethod(\"anchor\", 1, (context, [name]) => {\n    // 1. Let S be the this value.\n    let S = context;\n\n    // 2. // 2. Return ? CreateHTML(S, \"a\", \"name\", name).\n    return Create.CreateHTML(realm, S, \"a\", \"name\", name);\n  });\n\n  // B.2.3.3\n  obj.defineNativeMethod(\"big\", 0, context => {\n    // 1. Let S be the this value.\n    let S = context;\n\n    // 2. Return ? CreateHTML(S, \"big\", \"\", \"\").\n    return Create.CreateHTML(realm, S, \"big\", \"\", \"\");\n  });\n\n  // B.2.3.4\n  obj.defineNativeMethod(\"blink\", 0, context => {\n    // 1. Let S be the this value.\n    let S = context;\n\n    // 2. Return ? CreateHTML(S, \"blink\", \"\", \"\").\n    return Create.CreateHTML(realm, S, \"blink\", \"\", \"\");\n  });\n\n  // B.2.3.5\n  obj.defineNativeMethod(\"bold\", 0, context => {\n    // 1. Let S be the this value.\n    let S = context;\n\n    // 2. Return ? CreateHTML(S, \"b\", \"\", \"\").\n    return Create.CreateHTML(realm, S, \"b\", \"\", \"\");\n  });\n\n  // B.2.3.6\n  obj.defineNativeMethod(\"fixed\", 0, context => {\n    // 1. Let S be the this value.\n    let S = context;\n\n    // 2. Return ? CreateHTML(S, \"tt\", \"\", \"\").\n    return Create.CreateHTML(realm, S, \"tt\", \"\", \"\");\n  });\n\n  // B.2.3.7\n  obj.defineNativeMethod(\"fontcolor\", 1, (context, [color]) => {\n    // 1. Let S be the this value.\n    let S = context;\n\n    // 2. Return ? CreateHTML(S, \"font\", \"color\", color).\n    return Create.CreateHTML(realm, S, \"font\", \"color\", color);\n  });\n\n  // B.2.3.8\n  obj.defineNativeMethod(\"fontsize\", 1, (context, [size]) => {\n    // 1. Let S be the this value.\n    let S = context;\n\n    // 2. Return ? CreateHTML(S, \"font\", \"size\", size).\n    return Create.CreateHTML(realm, S, \"font\", \"size\", size);\n  });\n\n  // B.2.3.9\n  obj.defineNativeMethod(\"italics\", 0, context => {\n    // 1. Let S be the this value.\n    let S = context;\n\n    // 2. Return ? CreateHTML(S, \"i\", \"\", \"\").\n    return Create.CreateHTML(realm, S, \"i\", \"\", \"\");\n  });\n\n  // B.2.3.10\n  obj.defineNativeMethod(\"link\", 1, (context, [url]) => {\n    // 1. Let S be the this value.\n    let S = context;\n\n    // 2. Return ? CreateHTML(S, \"a\", \"href\", url).\n    return Create.CreateHTML(realm, S, \"a\", \"href\", url);\n  });\n\n  // B.2.3.11\n  obj.defineNativeMethod(\"small\", 0, context => {\n    // 1. Let S be the this value.\n    let S = context;\n\n    // 2. Return ? CreateHTML(S, \"small\", \"\", \"\").\n    return Create.CreateHTML(realm, S, \"small\", \"\", \"\");\n  });\n\n  // B.2.3.12\n  obj.defineNativeMethod(\"strike\", 0, context => {\n    // 1. Let S be the this value.\n    let S = context;\n\n    // 2. Return ? CreateHTML(S, \"strike\", \"\", \"\").\n    return Create.CreateHTML(realm, S, \"strike\", \"\", \"\");\n  });\n\n  // B.2.3.13\n  obj.defineNativeMethod(\"sub\", 0, context => {\n    // 1. Let S be the this value.\n    let S = context;\n\n    // 2. Return ? CreateHTML(S, \"sub\", \"\", \"\").\n    return Create.CreateHTML(realm, S, \"sub\", \"\", \"\");\n  });\n\n  // B.2.3.14\n  obj.defineNativeMethod(\"sup\", 0, context => {\n    // 1. Let S be the this value.\n    let S = context;\n\n    // 2. Return ? CreateHTML(S, \"sup\", \"\", \"\").\n    return Create.CreateHTML(realm, S, \"sup\", \"\", \"\");\n  });\n\n  return obj;\n}\n"],"file":"StringPrototype.js"}