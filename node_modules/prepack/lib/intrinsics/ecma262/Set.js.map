{"version":3,"sources":["../../../src/intrinsics/ecma262/Set.js"],"names":["realm","func","NativeFunctionValue","context","_iterable","argCount","NewTarget","iterable","createErrorThrowCompletion","intrinsics","TypeError","set","Create","OrdinaryCreateFromConstructor","$SetData","undefined","isCompatibleWith","MOBILE_JSC_VERSION","loc","currentLocation","error","CompilerDiagnostic","handleError","iter","adder","UndefinedValue","NullValue","next","nextValue","status","AbruptCompletion","defineNativeGetter","SymbolSpecies"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow strict-local */\n\nimport type { Realm } from \"../../realm.js\";\nimport { NativeFunctionValue, NullValue, UndefinedValue } from \"../../values/index.js\";\nimport { AbruptCompletion } from \"../../completions.js\";\nimport {\n  IsCallable,\n  Call,\n  GetIterator,\n  IteratorStep,\n  IteratorValue,\n  IteratorClose,\n  Get,\n  HasSomeCompatibleType,\n} from \"../../methods/index.js\";\nimport { Create } from \"../../singletons.js\";\nimport invariant from \"../../invariant.js\";\nimport { CompilerDiagnostic } from \"../../errors.js\";\n\nexport default function(realm: Realm): NativeFunctionValue {\n  // ECMA262 23.2.1.1\n  let func = new NativeFunctionValue(realm, \"Set\", \"Set\", 0, (context, [_iterable], argCount, NewTarget) => {\n    let iterable = _iterable;\n    // 1. If NewTarget is undefined, throw a TypeError exception.\n    if (!NewTarget) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 2. Let set be ? OrdinaryCreateFromConstructor(NewTarget, \"%SetPrototype%\", « [[SetData]] »).\n    let set = Create.OrdinaryCreateFromConstructor(realm, NewTarget, \"SetPrototype\", {\n      $SetData: undefined,\n    });\n\n    // 3. Set set's [[SetData]] internal slot to a new empty List.\n    set.$SetData = [];\n\n    // 4. If iterable is not present, let iterable be undefined.\n    if (iterable && realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)) {\n      let loc = realm.currentLocation;\n      let error = new CompilerDiagnostic(\n        \"This version of JSC ignores the argument to Set, require the polyfill before doing this\",\n        loc,\n        \"PP0001\",\n        \"RecoverableError\"\n      );\n      realm.handleError(error);\n    }\n    if (!iterable) iterable = realm.intrinsics.undefined;\n\n    // 5. If iterable is either undefined or null, let iter be undefined.\n    let iter, adder;\n    if (HasSomeCompatibleType(iterable, UndefinedValue, NullValue)) {\n      adder = realm.intrinsics.undefined;\n      iter = realm.intrinsics.undefined;\n    } else {\n      // 6. Else,\n      // a. Let adder be ? Get(set, \"add\").\n      adder = Get(realm, set, \"add\");\n\n      // b. If IsCallable(adder) is false, throw a TypeError exception.\n      if (!IsCallable(realm, adder)) {\n        throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n      }\n\n      // c. Let iter be ? GetIterator(iterable).\n      iter = GetIterator(realm, iterable);\n    }\n\n    // 7. If iter is undefined, return set.\n    if (iter instanceof UndefinedValue) {\n      return set;\n    }\n\n    // 8. Repeat\n    while (true) {\n      // a. Let next be ? IteratorStep(iter).\n      let next = IteratorStep(realm, iter);\n\n      // b. If next is false, return set.\n      if (!next) return set;\n\n      // c. Let nextValue be ? IteratorValue(next).\n      let nextValue = IteratorValue(realm, next);\n\n      // d. Let status be Call(adder, set, « nextValue.[[Value]] »).\n      try {\n        Call(realm, adder, set, [nextValue]);\n      } catch (status) {\n        if (status instanceof AbruptCompletion) {\n          // e. If status is an abrupt completion, return ? IteratorClose(iter, status).\n          throw IteratorClose(realm, iter, status);\n        } else throw status;\n      }\n    }\n\n    invariant(false);\n  });\n\n  // ECMA262 23.2.2.2\n  func.defineNativeGetter(realm.intrinsics.SymbolSpecies, context => {\n    // 1. Return the this value\n    return context;\n  });\n\n  return func;\n}\n"],"file":"Set.js"}