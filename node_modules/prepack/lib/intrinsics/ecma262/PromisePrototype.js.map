{"version":3,"sources":["../../../src/intrinsics/ecma262/PromisePrototype.js"],"names":["realm","obj","defineNativeMethod","context","onRejected","promise","intrinsics","undefined","onFulfilled","createErrorThrowCompletion","TypeError","ObjectValue","C","Promise","resultCapability","defineNativeProperty","SymbolToStringTag","StringValue","writable"],"mappings":";;;;;;;AAYA;;AACA;;AACA;;AACA;;;;AAfA;;;;;;;;;AASA;AAQe,kBAASA,KAAT,EAAuBC,GAAvB,EAA+C;AAC5D;AACAA,EAAAA,GAAG,CAACC,kBAAJ,CAAuB,OAAvB,EAAgC,CAAhC,EAAmC,CAACC,OAAD,EAAU,CAACC,UAAD,CAAV,KAA2B;AAC5D;AACA,QAAIC,OAAO,GAAGF,OAAd,CAF4D,CAI5D;;AACA,WAAO,oBAAOH,KAAP,EAAcK,OAAd,EAAuB,MAAvB,EAA+B,CAACL,KAAK,CAACM,UAAN,CAAiBC,SAAlB,EAA6BH,UAA7B,CAA/B,CAAP;AACD,GAND,EAF4D,CAU5D;;AACAH,EAAAA,GAAG,CAACC,kBAAJ,CAAuB,MAAvB,EAA+B,CAA/B,EAAkC,CAACC,OAAD,EAAU,CAACK,WAAD,EAAcJ,UAAd,CAAV,KAAwC;AACxE;AACA,QAAIC,OAAO,GAAGF,OAAd,CAFwE,CAIxE;;AACA,QAAI,CAAC,uBAAUH,KAAV,EAAiBK,OAAjB,CAAL,EAAgC;AAC9B,YAAML,KAAK,CAACS,0BAAN,CAAiCT,KAAK,CAACM,UAAN,CAAiBI,SAAlD,CAAN;AACD;;AACD,4BAAUL,OAAO,YAAYM,kBAA7B,EARwE,CAUxE;;AACA,QAAIC,CAAC,GAAG,gCAAmBZ,KAAnB,EAA0BK,OAA1B,EAAmCL,KAAK,CAACM,UAAN,CAAiBO,OAApD,CAAR,CAXwE,CAaxE;;AACA,QAAIC,gBAAgB,GAAG,mCAAqBd,KAArB,EAA4BY,CAA5B,CAAvB,CAdwE,CAgBxE;;AACA,WAAO,iCAAmBZ,KAAnB,EAA0BK,OAA1B,EAAmCG,WAAnC,EAAgDJ,UAAhD,EAA4DU,gBAA5D,CAAP;AACD,GAlBD,EAX4D,CA+B5D;;AACAb,EAAAA,GAAG,CAACc,oBAAJ,CAAyBf,KAAK,CAACM,UAAN,CAAiBU,iBAA1C,EAA6D,IAAIC,kBAAJ,CAAgBjB,KAAhB,EAAuB,SAAvB,CAA7D,EAAgG;AAAEkB,IAAAA,QAAQ,EAAE;AAAZ,GAAhG;AACD","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow strict-local */\n\nimport type { Realm } from \"../../realm.js\";\nimport { StringValue, ObjectValue } from \"../../values/index.js\";\nimport { IsPromise, Invoke, SpeciesConstructor } from \"../../methods/index.js\";\nimport { NewPromiseCapability, PerformPromiseThen } from \"../../methods/promise.js\";\nimport invariant from \"../../invariant.js\";\n\nexport default function(realm: Realm, obj: ObjectValue): void {\n  // ECMA262 25.4.5.1\n  obj.defineNativeMethod(\"catch\", 1, (context, [onRejected]) => {\n    // 1. Let promise be the this value.\n    let promise = context;\n\n    // 2. Return ? Invoke(promise, \"then\", « undefined, onRejected »).\n    return Invoke(realm, promise, \"then\", [realm.intrinsics.undefined, onRejected]);\n  });\n\n  // ECMA262 25.4.5.3\n  obj.defineNativeMethod(\"then\", 2, (context, [onFulfilled, onRejected]) => {\n    // 1. Let promise be the this value.\n    let promise = context;\n\n    // 2. If IsPromise(promise) is false, throw a TypeError exception.\n    if (!IsPromise(realm, promise)) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n    invariant(promise instanceof ObjectValue);\n\n    // 3. Let C be ? SpeciesConstructor(promise, %Promise%).\n    let C = SpeciesConstructor(realm, promise, realm.intrinsics.Promise);\n\n    // 4. Let resultCapability be ? NewPromiseCapability(C).\n    let resultCapability = NewPromiseCapability(realm, C);\n\n    // 5. Return PerformPromiseThen(promise, onFulfilled, onRejected, resultCapability).\n    return PerformPromiseThen(realm, promise, onFulfilled, onRejected, resultCapability);\n  });\n\n  // ECMA262 25.4.5.4 Promise.prototype [ @@toStringTag ]\n  obj.defineNativeProperty(realm.intrinsics.SymbolToStringTag, new StringValue(realm, \"Promise\"), { writable: false });\n}\n"],"file":"PromisePrototype.js"}