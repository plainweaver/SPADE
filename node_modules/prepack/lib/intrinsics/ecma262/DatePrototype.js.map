{"version":3,"sources":["../../../src/intrinsics/ecma262/DatePrototype.js"],"names":["realm","obj","defineNativeMethod","context","t","throwIfNotConcreteNumber","value","isNaN","intrinsics","NaN","NumberValue","msPerMinute","ObjectValue","date","dt","To","ToNumber","newDate","u","$DateValue","year","month","argCount","y","m","hour","min","sec","ms","h","s","milli","_ms","time","v","FatalError","isFinite","createErrorThrowCompletion","RangeError","StringValue","Date","toISOString","key","O","ToObject","tv","ToPrimitive","throwIfNotConcreteObject","null","undefined","SymbolToPrimitive","_hint","hint","throwIfNotConcrete","TypeError","tryFirst","OrdinaryToPrimitive","writable","yyyy","ToInteger","d","dateValue","defineNativeProperty","$Get"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow strict-local */\n\nimport type { Realm } from \"../../realm.js\";\nimport { FatalError } from \"../../errors.js\";\nimport { StringValue, ObjectValue, NumberValue } from \"../../values/index.js\";\nimport {\n  Invoke,\n  MakeTime,\n  thisTimeValue,\n  msFromTime,\n  TimeClip,\n  TimeWithinDay,\n  MakeDay,\n  YearFromTime,\n  DateFromTime,\n  MakeDate,\n  ToDateString,\n  HourFromTime,\n  MinFromTime,\n  Day,\n  SecFromTime,\n  WeekDay,\n  LocalTime,\n  MonthFromTime,\n  msPerMinute,\n  UTC,\n} from \"../../methods/index.js\";\nimport { To } from \"../../singletons\";\nimport invariant from \"../../invariant.js\";\n\nexport default function(realm: Realm, obj: ObjectValue): void {\n  // ECMA262 20.3.4.2\n  obj.defineNativeMethod(\"getDate\", 0, context => {\n    // 1. Let t be ? thisTimeValue(this value).\n    let t = thisTimeValue(realm, context).throwIfNotConcreteNumber().value;\n\n    // 2. If t is NaN, return NaN.\n    if (isNaN(t)) return realm.intrinsics.NaN;\n\n    // 3. Return DateFromTime(LocalTime(t)).\n    return new NumberValue(realm, DateFromTime(realm, LocalTime(realm, t)));\n  });\n\n  // ECMA262 20.3.4.3\n  obj.defineNativeMethod(\"getDay\", 0, context => {\n    // 1. Let t be ? thisTimeValue(this value).\n    let t = thisTimeValue(realm, context).throwIfNotConcreteNumber().value;\n\n    // 2. If t is NaN, return NaN.\n    if (isNaN(t)) return realm.intrinsics.NaN;\n\n    // 3. Return WeekDay(LocalTime(t)).\n    return new NumberValue(realm, WeekDay(realm, LocalTime(realm, t)));\n  });\n\n  // ECMA262 20.3.4.4\n  obj.defineNativeMethod(\"getFullYear\", 0, context => {\n    // 1. Let t be ? thisTimeValue(this value).\n    let t = thisTimeValue(realm, context).throwIfNotConcreteNumber().value;\n\n    // 2. If t is NaN, return NaN.\n    if (isNaN(t)) return realm.intrinsics.NaN;\n\n    // 3. Return YearFromTime(LocalTime(t)).\n    return new NumberValue(realm, YearFromTime(realm, LocalTime(realm, t)));\n  });\n\n  // ECMA262 20.3.4.5\n  obj.defineNativeMethod(\"getHours\", 0, context => {\n    // 1. Let t be ? thisTimeValue(this value).\n    let t = thisTimeValue(realm, context).throwIfNotConcreteNumber().value;\n\n    // 2. If t is NaN, return NaN.\n    if (isNaN(t)) return realm.intrinsics.NaN;\n\n    // 3. Return HourFromTime(LocalTime(t)).\n    return new NumberValue(realm, HourFromTime(realm, LocalTime(realm, t)));\n  });\n\n  // ECMA262 20.3.4.6\n  obj.defineNativeMethod(\"getMilliseconds\", 0, context => {\n    // 1. Let t be ? thisTimeValue(this value).\n    let t = thisTimeValue(realm, context).throwIfNotConcreteNumber().value;\n\n    // 2. If t is NaN, return NaN.\n    if (isNaN(t)) return realm.intrinsics.NaN;\n\n    // 3. Return msFromTime(LocalTime(t)).\n    return new NumberValue(realm, msFromTime(realm, LocalTime(realm, t)));\n  });\n\n  // ECMA262 20.3.4.7\n  obj.defineNativeMethod(\"getMinutes\", 0, context => {\n    // 1. Let t be ? thisTimeValue(this value).\n    let t = thisTimeValue(realm, context).throwIfNotConcreteNumber().value;\n\n    // 2. If t is NaN, return NaN.\n    if (isNaN(t)) return realm.intrinsics.NaN;\n\n    // 3. Return MinFromTime(LocalTime(t)).\n    return new NumberValue(realm, MinFromTime(realm, LocalTime(realm, t)));\n  });\n\n  // ECMA262 20.3.4.8\n  obj.defineNativeMethod(\"getMonth\", 0, context => {\n    // 1. Let t be ? thisTimeValue(this value).\n    let t = thisTimeValue(realm, context).throwIfNotConcreteNumber().value;\n\n    // 2. If t is NaN, return NaN.\n    if (isNaN(t)) return realm.intrinsics.NaN;\n\n    // 3. Return MonthFromTime(LocalTime(t)).\n    return new NumberValue(realm, MonthFromTime(realm, LocalTime(realm, t)));\n  });\n\n  // ECMA262 20.3.4.9\n  obj.defineNativeMethod(\"getSeconds\", 0, context => {\n    // 1. Let t be ? thisTimeValue(this value).\n    let t = thisTimeValue(realm, context).throwIfNotConcreteNumber().value;\n\n    // 2. If t is NaN, return NaN.\n    if (isNaN(t)) return realm.intrinsics.NaN;\n\n    // 3. Return SecFromTime(LocalTime(t)).\n    return new NumberValue(realm, SecFromTime(realm, LocalTime(realm, t)));\n  });\n\n  // ECMA262 20.3.4.10\n  obj.defineNativeMethod(\"getTime\", 0, context => {\n    // 1. Return ? thisTimeValue(this value).\n    return thisTimeValue(realm, context);\n  });\n\n  // ECMA262 20.3.4.11\n  obj.defineNativeMethod(\"getTimezoneOffset\", 0, context => {\n    // 1. Let t be ? thisTimeValue(this value).\n    let t = thisTimeValue(realm, context).throwIfNotConcreteNumber().value;\n\n    // 2. If t is NaN, return NaN.\n    if (isNaN(t)) return realm.intrinsics.NaN;\n\n    // 3. Return (t - LocalTime(t)) / msPerMinute.\n    return new NumberValue(realm, (t - LocalTime(realm, t)) / msPerMinute);\n  });\n\n  // ECMA262 20.3.4.12\n  obj.defineNativeMethod(\"getUTCDate\", 0, context => {\n    // 1. Let t be ? thisTimeValue(this value).\n    let t = thisTimeValue(realm, context).throwIfNotConcreteNumber().value;\n\n    // 2. If t is NaN, return NaN.\n    if (isNaN(t)) return realm.intrinsics.NaN;\n\n    // 3. Return DateFromTime(t).\n    return new NumberValue(realm, DateFromTime(realm, t));\n  });\n\n  // ECMA262 20.3.4.13\n  obj.defineNativeMethod(\"getUTCDay\", 0, context => {\n    // 1. Let t be ? thisTimeValue(this value).\n    let t = thisTimeValue(realm, context).throwIfNotConcreteNumber().value;\n\n    // 2. If t is NaN, return NaN.\n    if (isNaN(t)) return realm.intrinsics.NaN;\n\n    // 3. Return WeekDay(t).\n    return new NumberValue(realm, WeekDay(realm, t));\n  });\n\n  // ECMA262 20.3.4.14\n  obj.defineNativeMethod(\"getUTCFullYear\", 0, context => {\n    // 1. Let t be ? thisTimeValue(this value).\n    let t = thisTimeValue(realm, context).throwIfNotConcreteNumber().value;\n\n    // 2. If t is NaN, return NaN.\n    if (isNaN(t)) return realm.intrinsics.NaN;\n\n    // 3. Return YearFromTime(t).\n    return new NumberValue(realm, YearFromTime(realm, t));\n  });\n\n  // ECMA262 20.3.4.15\n  obj.defineNativeMethod(\"getUTCHours\", 0, context => {\n    // 1. Let t be ? thisTimeValue(this value).\n    let t = thisTimeValue(realm, context).throwIfNotConcreteNumber().value;\n\n    // 2. If t is NaN, return NaN.\n    if (isNaN(t)) return realm.intrinsics.NaN;\n\n    // 3. Return HourFromTime(t).\n    return new NumberValue(realm, HourFromTime(realm, t));\n  });\n\n  // ECMA262 20.3.4.16\n  obj.defineNativeMethod(\"getUTCMilliseconds\", 0, context => {\n    // 1. Let t be ? thisTimeValue(this value).\n    let t = thisTimeValue(realm, context).throwIfNotConcreteNumber().value;\n\n    // 2. If t is NaN, return NaN.\n    if (isNaN(t)) return realm.intrinsics.NaN;\n\n    // 3. Return msFromTime(t).\n    return new NumberValue(realm, msFromTime(realm, t));\n  });\n\n  // ECMA262 20.3.4.17\n  obj.defineNativeMethod(\"getUTCMinutes\", 0, context => {\n    // 1. Let t be ? thisTimeValue(this value).\n    let t = thisTimeValue(realm, context).throwIfNotConcreteNumber().value;\n\n    // 2. If t is NaN, return NaN.\n    if (isNaN(t)) return realm.intrinsics.NaN;\n\n    // 3. Return MinFromTime(t).\n    return new NumberValue(realm, MinFromTime(realm, t));\n  });\n\n  // ECMA262 20.3.4.18\n  obj.defineNativeMethod(\"getUTCMonth\", 0, context => {\n    // 1. Let t be ? thisTimeValue(this value).\n    let t = thisTimeValue(realm, context).throwIfNotConcreteNumber().value;\n\n    // 2. If t is NaN, return NaN.\n    if (isNaN(t)) return realm.intrinsics.NaN;\n\n    // 3. Return MonthFromTime(t).\n    return new NumberValue(realm, MonthFromTime(realm, t));\n  });\n\n  // ECMA262 20.3.4.19\n  obj.defineNativeMethod(\"getUTCSeconds\", 0, context => {\n    // 1. Let t be ? thisTimeValue(this value).\n    let t = thisTimeValue(realm, context).throwIfNotConcreteNumber().value;\n    invariant(context instanceof ObjectValue);\n\n    // 2. If t is NaN, return NaN.\n    if (isNaN(t)) return realm.intrinsics.NaN;\n\n    // 3. Return SecFromTime(t).\n    return new NumberValue(realm, SecFromTime(realm, t));\n  });\n\n  // ECMA262 20.3.4.20\n  obj.defineNativeMethod(\"setDate\", 1, (context, [date]) => {\n    // 1. Let t be LocalTime(? thisTimeValue(this value)).\n    let t = LocalTime(realm, thisTimeValue(realm, context).throwIfNotConcreteNumber().value);\n    invariant(context instanceof ObjectValue);\n\n    // 2. Let dt be ? ToNumber(date).\n    let dt = To.ToNumber(realm, date);\n\n    // 3. Let newDate be MakeDate(MakeDay(YearFromTime(t), MonthFromTime(t), dt), TimeWithinDay(t)).\n    let newDate = MakeDate(\n      realm,\n      MakeDay(realm, YearFromTime(realm, t), MonthFromTime(realm, t), dt),\n      TimeWithinDay(realm, t)\n    );\n\n    // 4. Let u be TimeClip(UTC(newDate)).\n    let u = TimeClip(realm, UTC(realm, newDate));\n\n    // 5. Set the [[DateValue]] internal slot of this Date object to u.\n    context.$DateValue = u;\n\n    // 6. Return u.\n    return u;\n  });\n\n  // ECMA262 20.3.4.21\n  obj.defineNativeMethod(\"setFullYear\", 3, (context, [year, month, date], argCount) => {\n    // 1. Let t be ? thisTimeValue(this value).\n    let t = thisTimeValue(realm, context).throwIfNotConcreteNumber().value;\n    invariant(context instanceof ObjectValue);\n\n    // 2. If t is NaN, let t be +0; otherwise, let t be LocalTime(t).\n    t = isNaN(t) ? +0 : LocalTime(realm, t);\n\n    // 3. Let y be ? ToNumber(year).\n    let y = To.ToNumber(realm, year);\n\n    // 4. If month is not specified, let m be MonthFromTime(t); otherwise, let m be ? ToNumber(month).\n    let m = argCount >= 2 ? To.ToNumber(realm, month) : MonthFromTime(realm, t);\n\n    // 5. If date is not specified, let dt be DateFromTime(t); otherwise, let dt be ? ToNumber(date).\n    let dt = argCount >= 3 ? To.ToNumber(realm, date) : DateFromTime(realm, t);\n\n    // 6. Let newDate be MakeDate(MakeDay(y, m, dt), TimeWithinDay(t)).\n    let newDate = MakeDate(realm, MakeDay(realm, y, m, dt), TimeWithinDay(realm, t));\n\n    // 7. Let u be TimeClip(UTC(newDate)).\n    let u = TimeClip(realm, UTC(realm, newDate));\n\n    // 8. Set the [[DateValue]] internal slot of this Date object to u.\n    context.$DateValue = u;\n\n    // 9. Return u.\n    return u;\n  });\n\n  // ECMA262 20.3.4.22\n  obj.defineNativeMethod(\"setHours\", 4, (context, [hour, min, sec, ms], argCount) => {\n    // 1. Let t be LocalTime(? thisTimeValue(this value)).\n    let t = LocalTime(realm, thisTimeValue(realm, context).throwIfNotConcreteNumber().value);\n    invariant(context instanceof ObjectValue);\n\n    // 2. Let h be ? ToNumber(hour).\n    let h = To.ToNumber(realm, hour);\n\n    // 3. If min is not specified, let m be MinFromTime(t); otherwise, let m be ? ToNumber(min).\n    let m = argCount >= 2 ? To.ToNumber(realm, min) : MinFromTime(realm, t);\n\n    // 4. If sec is not specified, let s be SecFromTime(t); otherwise, let s be ? ToNumber(sec).\n    let s = argCount >= 3 ? To.ToNumber(realm, sec) : SecFromTime(realm, t);\n\n    // 5. If ms is not specified, let milli be msFromTime(t); otherwise, let milli be ? ToNumber(ms).\n    let milli = argCount >= 4 ? To.ToNumber(realm, ms) : msFromTime(realm, t);\n\n    // 6. Let date be MakeDate(Day(t), MakeTime(h, m, s, milli)).\n    let date = MakeDate(realm, Day(realm, t), MakeTime(realm, h, m, s, milli));\n\n    // 7. Let u be TimeClip(UTC(date)).\n    let u = TimeClip(realm, UTC(realm, date));\n\n    // 8. Set the [[DateValue]] internal slot of this Date object to u.\n    context.$DateValue = u;\n\n    // 9. Return u.\n    return u;\n  });\n\n  // ECMA262 20.3.4.23\n  obj.defineNativeMethod(\"setMilliseconds\", 1, (context, [_ms]) => {\n    let ms = _ms;\n    // 1. Let t be LocalTime(? thisTimeValue(this value)).\n    let t = LocalTime(realm, thisTimeValue(realm, context).throwIfNotConcreteNumber().value);\n    invariant(context instanceof ObjectValue);\n\n    // 2. Let ms be ? ToNumber(ms).\n    ms = To.ToNumber(realm, ms);\n\n    // 3. Let time be MakeTime(HourFromTime(t), MinFromTime(t), SecFromTime(t), ms).\n    let time = MakeTime(realm, HourFromTime(realm, t), MinFromTime(realm, t), SecFromTime(realm, t), ms);\n\n    // 4. Let u be TimeClip(UTC(MakeDate(Day(t), time))).\n    let u = TimeClip(realm, UTC(realm, MakeDate(realm, Day(realm, t), time)));\n\n    // 5. Set the [[DateValue]] internal slot of this Date object to u.\n    context.$DateValue = u;\n\n    // 6. Return u.\n    return u;\n  });\n\n  // ECMA262 20.3.4.24\n  obj.defineNativeMethod(\"setMinutes\", 3, (context, [min, sec, ms], argCount) => {\n    // 1. Let t be LocalTime(? thisTimeValue(this value)).\n    let t = LocalTime(realm, thisTimeValue(realm, context).throwIfNotConcreteNumber().value);\n    invariant(context instanceof ObjectValue);\n\n    // 2. Let m be ? ToNumber(min).\n    let m = To.ToNumber(realm, min);\n\n    // 3. If sec is not specified, let s be SecFromTime(t); otherwise, let s be ? ToNumber(sec).\n    let s = argCount >= 2 ? To.ToNumber(realm, sec) : SecFromTime(realm, t);\n\n    // 4. If ms is not specified, let milli be msFromTime(t); otherwise, let milli be ? ToNumber(ms).\n    let milli = argCount >= 3 ? To.ToNumber(realm, ms) : msFromTime(realm, t);\n\n    // 5. Let date be MakeDate(Day(t), MakeTime(HourFromTime(t), m, s, milli)).\n    let date = MakeDate(realm, Day(realm, t), MakeTime(realm, HourFromTime(realm, t), m, s, milli));\n\n    // 6. Let u be TimeClip(UTC(date)).\n    let u = TimeClip(realm, UTC(realm, date));\n\n    // 7. Set the [[DateValue]] internal slot of this Date object to u.\n    context.$DateValue = u;\n\n    // 8. Return u.\n    return u;\n  });\n\n  // ECMA262 20.3.4.25\n  obj.defineNativeMethod(\"setMonth\", 2, (context, [month, date], argCount) => {\n    // 1. Let t be LocalTime(? thisTimeValue(this value)).\n    let t = LocalTime(realm, thisTimeValue(realm, context).throwIfNotConcreteNumber().value);\n    invariant(context instanceof ObjectValue);\n\n    // 2. Let m be ? ToNumber(month).\n    let m = To.ToNumber(realm, month);\n\n    // 3. If date is not specified, let dt be DateFromTime(t); otherwise, let dt be ? ToNumber(date).\n    let dt = argCount >= 2 ? To.ToNumber(realm, date) : DateFromTime(realm, t);\n\n    // 4. Let newDate be MakeDate(MakeDay(YearFromTime(t), m, dt), TimeWithinDay(t)).\n    let newDate = MakeDate(realm, MakeDay(realm, YearFromTime(realm, t), m, dt), TimeWithinDay(realm, t));\n\n    // 5. Let u be TimeClip(UTC(newDate)).\n    let u = TimeClip(realm, UTC(realm, newDate));\n\n    // 6. Set the [[DateValue]] internal slot of this Date object to u.\n    context.$DateValue = u;\n\n    // 7. Return u.\n    return u;\n  });\n\n  // ECMA262 20.3.4.26\n  obj.defineNativeMethod(\"setSeconds\", 2, (context, [sec, ms], argCount) => {\n    // 1. Let t be LocalTime(? thisTimeValue(this value)).\n    let t = LocalTime(realm, thisTimeValue(realm, context).throwIfNotConcreteNumber().value);\n    invariant(context instanceof ObjectValue);\n\n    // 2. Let s be ? ToNumber(sec).\n    let s = To.ToNumber(realm, sec);\n\n    // 3. If ms is not specified, let milli be msFromTime(t); otherwise, let milli be ? ToNumber(ms).\n    let milli = argCount >= 2 ? To.ToNumber(realm, ms) : msFromTime(realm, t);\n\n    // 4. Let date be MakeDate(Day(t), MakeTime(HourFromTime(t), MinFromTime(t), s, milli)).\n    let date = MakeDate(realm, Day(realm, t), MakeTime(realm, HourFromTime(realm, t), MinFromTime(realm, t), s, milli));\n\n    // 5. Let u be TimeClip(UTC(date)).\n    let u = TimeClip(realm, UTC(realm, date));\n\n    // 6. Set the [[DateValue]] internal slot of this Date object to u.\n    context.$DateValue = u;\n\n    // 7. Return u.\n    return u;\n  });\n\n  // ECMA262 20.3.4.27\n  obj.defineNativeMethod(\"setTime\", 1, (context, [time]) => {\n    // 1. Perform ? thisTimeValue(this value).\n    thisTimeValue(realm, context);\n    invariant(context instanceof ObjectValue);\n\n    // 2. Let t be ? ToNumber(time).\n    let t = To.ToNumber(realm, time);\n\n    // 3. Let v be TimeClip(t).\n    let v = TimeClip(realm, t);\n\n    // 4. Set the [[DateValue]] internal slot of this Date object to v.\n    context.$DateValue = v;\n\n    // 5. Return v.\n    return v;\n  });\n\n  // ECMA262 20.3.4.28\n  obj.defineNativeMethod(\"setUTCDate\", 1, (context, [date]) => {\n    // 1. Let t be ? thisTimeValue(this value).\n    let t = thisTimeValue(realm, context).throwIfNotConcreteNumber().value;\n    invariant(context instanceof ObjectValue);\n\n    // 2. Let dt be ? ToNumber(date).\n    let dt = To.ToNumber(realm, date);\n\n    // 3. Let newDate be MakeDate(MakeDay(YearFromTime(t), MonthFromTime(t), dt), TimeWithinDay(t)).\n    let newDate = MakeDate(\n      realm,\n      MakeDay(realm, YearFromTime(realm, t), MonthFromTime(realm, t), dt),\n      TimeWithinDay(realm, t)\n    );\n\n    // 4. Let v be TimeClip(newDate).\n    let v = TimeClip(realm, newDate);\n\n    // 5. Set the [[DateValue]] internal slot of this Date object to v.\n    context.$DateValue = v;\n\n    // 6. Return v.\n    return v;\n  });\n\n  // ECMA262 20.3.4.29\n  obj.defineNativeMethod(\"setUTCFullYear\", 3, (context, [year, month, date], argCount) => {\n    // 1. Let t be ? thisTimeValue(this value).\n    let t = thisTimeValue(realm, context).throwIfNotConcreteNumber().value;\n    invariant(context instanceof ObjectValue);\n\n    // 2. If t is NaN, let t be +0.\n    if (isNaN(t)) t = +0;\n\n    // 3. Let y be ? ToNumber(year).\n    let y = To.ToNumber(realm, year);\n\n    // 4. If month is not specified, let m be MonthFromTime(t); otherwise, let m be ? ToNumber(month).\n    let m = argCount >= 2 ? To.ToNumber(realm, month) : MonthFromTime(realm, t);\n\n    // 5. If date is not specified, let dt be DateFromTime(t); otherwise, let dt be ? ToNumber(date).\n    let dt = argCount >= 3 ? To.ToNumber(realm, date) : DateFromTime(realm, t);\n\n    // 6. Let newDate be MakeDate(MakeDay(y, m, dt), TimeWithinDay(t)).\n    let newDate = MakeDate(realm, MakeDay(realm, y, m, dt), TimeWithinDay(realm, t));\n\n    // 7. Let v be TimeClip(newDate).\n    let v = TimeClip(realm, newDate);\n\n    // 8. Set the [[DateValue]] internal slot of this Date object to v.\n    context.$DateValue = v;\n\n    // 9. Return v.\n    return v;\n  });\n\n  // ECMA262 20.3.4.30\n  obj.defineNativeMethod(\"setUTCHours\", 4, (context, [hour, min, sec, ms], argCount) => {\n    // 1. Let t be ? thisTimeValue(this value).\n    let t = thisTimeValue(realm, context).throwIfNotConcreteNumber().value;\n    invariant(context instanceof ObjectValue);\n\n    // 2. Let h be ? ToNumber(hour).\n    let h = To.ToNumber(realm, hour);\n\n    // 3. If min is not specified, let m be MinFromTime(t); otherwise, let m be ? ToNumber(min).\n    let m = argCount >= 2 ? To.ToNumber(realm, min) : MinFromTime(realm, t);\n\n    // 4. If sec is not specified, let s be SecFromTime(t); otherwise, let s be ? ToNumber(sec).\n    let s = argCount >= 3 ? To.ToNumber(realm, sec) : SecFromTime(realm, t);\n\n    // 5. If ms is not specified, let milli be msFromTime(t); otherwise, let milli be ? ToNumber(ms).\n    let milli = argCount >= 4 ? To.ToNumber(realm, ms) : msFromTime(realm, t);\n\n    // 6. Let newDate be MakeDate(Day(t), MakeTime(h, m, s, milli)).\n    let newDate = MakeDate(realm, Day(realm, t), MakeTime(realm, h, m, s, milli));\n\n    // 7. Let v be TimeClip(newDate).\n    let v = TimeClip(realm, newDate);\n\n    // 8. Set the [[DateValue]] internal slot of this Date object to v.\n    context.$DateValue = v;\n\n    // 9. Return v.\n    return v;\n  });\n\n  // ECMA262 20.3.4.31\n  obj.defineNativeMethod(\"setUTCMilliseconds\", 1, (context, [ms]) => {\n    // 1. Let t be ? thisTimeValue(this value).\n    let t = thisTimeValue(realm, context).throwIfNotConcreteNumber().value;\n    invariant(context instanceof ObjectValue);\n\n    // 2. Let milli be ? ToNumber(ms).\n    let milli = To.ToNumber(realm, ms);\n\n    // 3. Let time be MakeTime(HourFromTime(t), MinFromTime(t), SecFromTime(t), milli).\n    let time = MakeTime(realm, HourFromTime(realm, t), MinFromTime(realm, t), SecFromTime(realm, t), milli);\n\n    // 4. Let v be TimeClip(MakeDate(Day(t), time)).\n    let v = TimeClip(realm, MakeDate(realm, Day(realm, t), time));\n\n    // 5. Set the [[DateValue]] internal slot of this Date object to v.\n    context.$DateValue = v;\n\n    // 6. Return v.\n    return v;\n  });\n\n  // ECMA262 20.3.4.32\n  obj.defineNativeMethod(\"setUTCMinutes\", 3, (context, [min, sec, ms], argCount) => {\n    // 1. Let t be ? thisTimeValue(this value).\n    let t = thisTimeValue(realm, context).throwIfNotConcreteNumber().value;\n    invariant(context instanceof ObjectValue);\n\n    // 2. Let m be ? ToNumber(min).\n    let m = To.ToNumber(realm, min);\n\n    // 3. If sec is not specified, let s be SecFromTime(t).\n    let s;\n    if (argCount < 2) {\n      s = SecFromTime(realm, t);\n    } else {\n      // 4. Else,\n      // a. Let s be ? ToNumber(sec).\n      s = To.ToNumber(realm, sec);\n    }\n\n    // 5. If ms is not specified, let milli be msFromTime(t).\n    let milli;\n    if (argCount < 3) {\n      milli = msFromTime(realm, t);\n    } else {\n      // 6. Else,\n      // a. Let milli be ? ToNumber(ms).\n      milli = To.ToNumber(realm, ms);\n    }\n\n    // 7. Let date be MakeDate(Day(t), MakeTime(HourFromTime(t), m, s, milli)).\n    let date = MakeDate(realm, Day(realm, t), MakeTime(realm, HourFromTime(realm, t), m, s, milli));\n\n    // 8. Let v be TimeClip(date).\n    let v = TimeClip(realm, date);\n\n    // 9. Set the [[DateValue]] internal slot of this Date object to v.\n    context.$DateValue = v;\n\n    // 10. Return v.\n    return v;\n  });\n\n  // ECMA262 20.3.4.33\n  obj.defineNativeMethod(\"setUTCMonth\", 2, (context, [month, date], argCount) => {\n    // 1. Let t be ? thisTimeValue(this value).\n    let t = thisTimeValue(realm, context).throwIfNotConcreteNumber().value;\n    invariant(context instanceof ObjectValue);\n\n    // 2. Let m be ? ToNumber(month).\n    let m = To.ToNumber(realm, month);\n\n    // 3. If date is not specified, let dt be DateFromTime(t).\n    let dt;\n    if (argCount < 2) {\n      dt = DateFromTime(realm, t);\n    } else {\n      // 4. Else,\n      // a. Let dt be ? ToNumber(date).\n      dt = To.ToNumber(realm, date);\n    }\n\n    // 5. Let newDate be MakeDate(MakeDay(YearFromTime(t), m, dt), TimeWithinDay(t)).\n    let newDate = MakeDate(realm, MakeDay(realm, YearFromTime(realm, t), m, dt), TimeWithinDay(realm, t));\n\n    // 6. Let v be TimeClip(newDate).\n    let v = TimeClip(realm, newDate);\n\n    // 7. Set the [[DateValue]] internal slot of this Date object to v.\n    context.$DateValue = v;\n\n    // 8. Return v.\n    return v;\n  });\n\n  // ECMA262 20.3.4.34\n  obj.defineNativeMethod(\"setUTCSeconds\", 2, (context, [sec, ms], argCount) => {\n    // 1. Let t be ? thisTimeValue(this value).\n    let t = thisTimeValue(realm, context).throwIfNotConcreteNumber().value;\n    invariant(context instanceof ObjectValue);\n\n    // 2. Let s be ? ToNumber(sec).\n    let s = To.ToNumber(realm, sec);\n\n    // 3. If ms is not specified, let milli be msFromTime(t).\n    let milli;\n    if (argCount < 2) {\n      milli = msFromTime(realm, t);\n    } else {\n      // 4. Else,\n      // a. Let milli be ? ToNumber(ms).\n      milli = To.ToNumber(realm, ms);\n    }\n\n    // 5. Let date be MakeDate(Day(t), MakeTime(HourFromTime(t), MinFromTime(t), s, milli)).\n    let date = MakeDate(realm, Day(realm, t), MakeTime(realm, HourFromTime(realm, t), MinFromTime(realm, t), s, milli));\n\n    // 6. Let v be TimeClip(date).\n    let v = TimeClip(realm, date);\n\n    // 7. Set the [[DateValue]] internal slot of this Date object to v.\n    context.$DateValue = v;\n\n    // 8. Return v.\n    return v;\n  });\n\n  // ECMA262 20.3.4.35\n  obj.defineNativeMethod(\"toDateString\", 0, context => {\n    throw new FatalError(\"TODO #1005: implement Date.prototype.toDateString\");\n  });\n\n  // ECMA262 20.3.4.36\n  obj.defineNativeMethod(\"toISOString\", 0, context => {\n    let t = thisTimeValue(realm, context).throwIfNotConcreteNumber().value;\n    if (!isFinite(t)) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError);\n    }\n\n    return new StringValue(realm, new Date(t).toISOString());\n  });\n\n  // ECMA262 20.3.4.37\n  obj.defineNativeMethod(\"toJSON\", 1, (context, [key]) => {\n    // 1. Let O be ? ToObject(this value).\n    let O = To.ToObject(realm, context);\n\n    // 2. Let tv be ? ToPrimitive(O, hint Number).\n    let tv = To.ToPrimitive(realm, O.throwIfNotConcreteObject(), \"number\");\n\n    // 3. If Type(tv) is Number and tv is not finite, return null.\n    if (tv instanceof NumberValue && !isFinite(tv.value)) {\n      return realm.intrinsics.null;\n    }\n\n    // 4. Return ? Invoke(O, \"toISOString\").\n    return Invoke(realm, O, \"toISOString\");\n  });\n\n  // ECMA262 20.3.4.38\n  obj.defineNativeMethod(\"toLocaleDateString\", 0, context => {\n    throw new FatalError(\"TODO #1005: implement Date.prototype.toLocaleDateString\");\n  });\n\n  // ECMA262 20.3.4.39\n  obj.defineNativeMethod(\"toLocaleString\", 0, context => {\n    throw new FatalError(\"TODO #1005: implement Date.prototype.toLocaleString\");\n  });\n\n  // ECMA262 20.3.4.40\n  obj.defineNativeMethod(\"toLocaleTimeString\", 0, context => {\n    throw new FatalError(\"TODO #1005: implement Date.prototype.toLocaleTimeString\");\n  });\n\n  // ECMA262 20.3.4.41\n  obj.defineNativeMethod(\"toString\", 0, context => {\n    // 1. Let O be this Date object.\n    let O = context;\n\n    // 2. If O does not have a [[DateValue]] internal slot, then\n    let tv;\n    if (O.$DateValue === undefined) {\n      // a. Let tv be NaN.\n      tv = NaN;\n    } else {\n      // 3. Else,\n      // a. Let tv be thisTimeValue(O).\n      tv = thisTimeValue(realm, O).throwIfNotConcreteNumber().value;\n    }\n\n    // 4. Return ToDateString(tv).\n    return new StringValue(realm, ToDateString(realm, tv));\n  });\n\n  // ECMA262 20.3.4.42\n  obj.defineNativeMethod(\"toTimeString\", 0, context => {\n    throw new FatalError(\"TODO #1005: implement Date.prototype.toTimeString\");\n  });\n\n  // ECMA262 20.3.4.43\n  obj.defineNativeMethod(\"toUTCString\", 0, context => {\n    throw new FatalError(\"TODO #1005: implement Date.prototype.toUTCString\");\n  });\n\n  // ECMA262 20.3.4.44\n  obj.defineNativeMethod(\"valueOf\", 0, context => {\n    // 1. Return ? thisTimeValue(this value).\n    return thisTimeValue(realm, context);\n  });\n\n  // ECMA262 20.3.4.45\n  obj.defineNativeMethod(\n    realm.intrinsics.SymbolToPrimitive,\n    1,\n    (context, [_hint]) => {\n      let hint = _hint;\n      // 1. Let O be the this value.\n      let O = context.throwIfNotConcrete();\n\n      // 2. If Type(O) is not Object, throw a TypeError exception.\n      if (!(O instanceof ObjectValue)) {\n        throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"Type(O) is not Object\");\n      }\n\n      let tryFirst;\n      hint = hint.throwIfNotConcrete();\n      // 3. If hint is the String value \"string\" or the String value \"default\", then\n      if (hint instanceof StringValue && (hint.value === \"string\" || hint.value === \"default\")) {\n        // a. Let tryFirst be \"string\".\n        tryFirst = \"string\";\n      } else if (hint instanceof StringValue && hint.value === \"number\") {\n        // 4. Else if hint is the String value \"number\", then\n        // a. Let tryFirst be \"number\".\n        tryFirst = \"number\";\n      } else {\n        // 5. Else, throw a TypeError exception.\n        throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"Type(O) is not Object\");\n      }\n\n      // 6. Return ? OrdinaryToPrimitive(O, tryFirst).\n      return To.OrdinaryToPrimitive(realm, O, tryFirst);\n    },\n    { writable: false }\n  );\n\n  // B.2.4.1\n  obj.defineNativeMethod(\"getYear\", 0, context => {\n    // 1. Let t be ? thisTimeValue(this value).\n    let t = thisTimeValue(realm, context).throwIfNotConcreteNumber().value;\n\n    // 2. If t is NaN, return NaN.\n    if (isNaN(t)) return realm.intrinsics.NaN;\n\n    // 3. Return YearFromTime(LocalTime(t)) - 1900.\n    return new NumberValue(realm, YearFromTime(realm, LocalTime(realm, t)) - 1900);\n  });\n\n  // B.2.4.2\n  obj.defineNativeMethod(\"setYear\", 1, (context, [year]) => {\n    // 1. Let t be ? thisTimeValue(this value).\n    let t = thisTimeValue(realm, context).throwIfNotConcreteNumber().value;\n    invariant(context instanceof ObjectValue);\n\n    // 2. If t is NaN, let t be +0; otherwise, let t be LocalTime(t).\n    t = isNaN(t) ? +0 : LocalTime(realm, t);\n\n    // 3. Let y be ? ToNumber(year).\n    let y = To.ToNumber(realm, year);\n\n    // 4. If y is NaN, set the [[DateValue]] internal slot of this Date object to NaN and return NaN.\n    if (isNaN(y)) {\n      context.$DateValue = realm.intrinsics.NaN;\n      return realm.intrinsics.NaN;\n    }\n\n    // 5. If y is not NaN and 0 ≤ To.ToInteger(y) ≤ 99, let yyyy be To.ToInteger(y) + 1900.\n    let yyyy;\n    if (To.ToInteger(realm, y) < 99) {\n      yyyy = To.ToInteger(realm, y) + 1900;\n    } else {\n      // 6. Else, let yyyy be y.\n      yyyy = y;\n    }\n\n    // 7. Let d be MakeDay(yyyy, MonthFromTime(t), DateFromTime(t)).\n    let d = MakeDay(realm, yyyy, MonthFromTime(realm, t), DateFromTime(realm, t));\n\n    // 8. Let date be UTC(MakeDate(d, TimeWithinDay(t))).\n    let date = UTC(realm, MakeDate(realm, d, TimeWithinDay(realm, t)));\n\n    // 9. Set the [[DateValue]] internal slot of this Date object to TimeClip(date).\n    let dateValue = TimeClip(realm, date);\n    context.$DateValue = dateValue;\n\n    // 10. Return the value of the [[DateValue]] internal slot of this Date object.\n    return dateValue;\n  });\n\n  // B.2.4.3\n  obj.defineNativeProperty(\"toGMTString\", obj.$Get(\"toUTCString\", obj));\n}\n"],"file":"DatePrototype.js"}