{"version":3,"sources":["../../../src/intrinsics/ecma262/WeakSet.js"],"names":["realm","func","NativeFunctionValue","args","iterable","argCount","NewTarget","createErrorThrowCompletion","intrinsics","TypeError","set","Create","OrdinaryCreateFromConstructor","$WeakSetData","undefined","iter","adder","UndefinedValue","NullValue","next","nextValue","statusCompletion","AbruptCompletion"],"mappings":";;;;;;;AAYA;;AACA;;AACA;;AACA;;AACA;;;;AAhBA;;;;;;;;AAkBe,kBAASA,KAAT,EAA4C;AACzD;AACA,MAAIC,IAAI,GAAG,IAAIC,0BAAJ,CAAwBF,KAAxB,EAA+B,SAA/B,EAA0C,SAA1C,EAAqD,CAArD,EAAwD,CAACG,IAAD,EAAO,CAACC,QAAD,CAAP,EAAmBC,QAAnB,EAA6BC,SAA7B,KAA2C;AAC5G;AACA,QAAI,CAACA,SAAL,EAAgB;AACd,YAAMN,KAAK,CAACO,0BAAN,CAAiCP,KAAK,CAACQ,UAAN,CAAiBC,SAAlD,CAAN;AACD,KAJ2G,CAM5G;;;AACA,QAAIC,GAAG,GAAGC,mBAAOC,6BAAP,CAAqCZ,KAArC,EAA4CM,SAA5C,EAAuD,kBAAvD,EAA2E;AACnFO,MAAAA,YAAY,EAAEC;AADqE,KAA3E,CAAV,CAP4G,CAW5G;;;AACAJ,IAAAA,GAAG,CAACG,YAAJ,GAAmB,EAAnB,CAZ4G,CAc5G;;AACA,QAAIT,QAAQ,KAAKU,SAAjB,EAA4BV,QAAQ,GAAGJ,KAAK,CAACQ,UAAN,CAAiBM,SAA5B;AAE5B,QAAIC,IAAJ,EAAUC,KAAV,CAjB4G,CAkB5G;;AACA,QAAKZ,QAAD,YAA2Ba,qBAA3B,IAA8Cb,QAAD,YAA2Bc,gBAA5E,EAAuF;AACrFH,MAAAA,IAAI,GAAGf,KAAK,CAACQ,UAAN,CAAiBM,SAAxB;AACAE,MAAAA,KAAK,GAAGhB,KAAK,CAACQ,UAAN,CAAiBM,SAAzB;AACD,KAHD,MAGO;AACL;AACA;AACAE,MAAAA,KAAK,GAAG,iBAAIhB,KAAJ,EAAWU,GAAX,EAAgB,KAAhB,CAAR,CAHK,CAKL;;AACA,UAAI,CAAC,wBAAWV,KAAX,EAAkBgB,KAAlB,CAAL,EAA+B;AAC7B,cAAMhB,KAAK,CAACO,0BAAN,CAAiCP,KAAK,CAACQ,UAAN,CAAiBC,SAAlD,EAA6D,4BAA7D,CAAN;AACD,OARI,CAUL;;;AACAM,MAAAA,IAAI,GAAG,yBAAYf,KAAZ,EAAmBI,QAAnB,CAAP;AACD,KAlC2G,CAmC5G;;;AACA,QAAIW,IAAI,YAAYE,qBAApB,EAAoC,OAAOP,GAAP,CApCwE,CAsC5G;;AACA,WAAO,IAAP,EAAa;AACX;AACA,UAAIS,IAAI,GAAG,0BAAanB,KAAb,EAAoBe,IAApB,CAAX,CAFW,CAIX;;AACA,UAAII,IAAI,KAAK,KAAb,EAAoB,OAAOT,GAAP,CALT,CAOX;;AACA,UAAIU,SAAS,GAAG,2BAAcpB,KAAd,EAAqBmB,IAArB,CAAhB,CARW,CAUX;;AACA,UAAI;AACF,0BAAKnB,KAAL,EAAYgB,KAAZ,EAAmBN,GAAnB,EAAwB,CAACU,SAAD,CAAxB;AACD,OAFD,CAEE,OAAOC,gBAAP,EAAyB;AACzB,YAAI,EAAEA,gBAAgB,YAAYC,6BAA9B,CAAJ,EAAqD,MAAMD,gBAAN,CAD5B,CAEzB;;AACA,cAAM,2BAAcrB,KAAd,EAAqBe,IAArB,EAA2BM,gBAA3B,CAAN;AACD;AACF;;AAED,4BAAU,KAAV;AACD,GA5DU,CAAX;AA8DA,SAAOpB,IAAP;AACD","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { Realm } from \"../../realm.js\";\nimport { NativeFunctionValue, NullValue, UndefinedValue } from \"../../values/index.js\";\nimport { AbruptCompletion } from \"../../completions.js\";\nimport { Get, IsCallable, IteratorClose, IteratorValue, GetIterator, IteratorStep, Call } from \"../../methods/index.js\";\nimport { Create } from \"../../singletons.js\";\nimport invariant from \"../../invariant.js\";\n\nexport default function(realm: Realm): NativeFunctionValue {\n  // ECMA262 23.4.1.1\n  let func = new NativeFunctionValue(realm, \"WeakSet\", \"WeakSet\", 0, (args, [iterable], argCount, NewTarget) => {\n    // 1. If NewTarget is undefined, throw a TypeError exception.\n    if (!NewTarget) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 2. Let set be ? OrdinaryCreateFromConstructor(NewTarget, \"%WeakSetPrototype%\", « [[WeakSetData]] »).\n    let set = Create.OrdinaryCreateFromConstructor(realm, NewTarget, \"WeakSetPrototype\", {\n      $WeakSetData: undefined,\n    });\n\n    // 3. Set set.[[WeakSetData]] to a new empty List.\n    set.$WeakSetData = [];\n\n    // 4. If iterable is not present, let iterable be undefined.\n    if (iterable === undefined) iterable = realm.intrinsics.undefined;\n\n    let iter, adder;\n    // 5. If iterable is either undefined or null, let iter be undefined.\n    if ((iterable: any) instanceof UndefinedValue || (iterable: any) instanceof NullValue) {\n      iter = realm.intrinsics.undefined;\n      adder = realm.intrinsics.undefined;\n    } else {\n      // 6. Else,\n      // a. Let adder be ? Get(set, \"add\").\n      adder = Get(realm, set, \"add\");\n\n      // b. If IsCallable(adder) is false, throw a TypeError exception.\n      if (!IsCallable(realm, adder)) {\n        throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"IsCallable(adder) is false\");\n      }\n\n      // c. Let iter be ? GetIterator(iterable).\n      iter = GetIterator(realm, iterable);\n    }\n    // 7. If iter is undefined, return set.\n    if (iter instanceof UndefinedValue) return set;\n\n    // 8. Repeat\n    while (true) {\n      // a. Let next be ? IteratorStep(iter).\n      let next = IteratorStep(realm, iter);\n\n      // b. If next is false, return set.\n      if (next === false) return set;\n\n      // c. Let nextValue be ? IteratorValue(next).\n      let nextValue = IteratorValue(realm, next);\n\n      // d. Let status be Call(adder, set, « nextValue »).\n      try {\n        Call(realm, adder, set, [nextValue]);\n      } catch (statusCompletion) {\n        if (!(statusCompletion instanceof AbruptCompletion)) throw statusCompletion;\n        // e. If status is an abrupt completion, return ? IteratorClose(iter, status).\n        throw IteratorClose(realm, iter, statusCompletion);\n      }\n    }\n\n    invariant(false);\n  });\n\n  return func;\n}\n"],"file":"WeakSet.js"}