{"version":3,"sources":["../../../src/intrinsics/ecma262/Reflect.js"],"names":["realm","obj","ObjectValue","intrinsics","ObjectPrototype","defineNativeMethod","context","target","thisArgument","argumentsList","createErrorThrowCompletion","TypeError","args","Create","CreateListFromArrayLike","_newTarget","newTarget","_target","propertyKey","attributes","throwIfNotConcrete","key","To","ToPropertyKey","desc","ToPropertyDescriptor","BooleanValue","$DefineOwnProperty","$Delete","_receiver","receiver","$Get","$GetOwnProperty","Properties","FromPropertyDescriptor","$GetPrototypeOf","mightNotBeObject","mightBeObject","$HasProperty","$IsExtensible","keys","$OwnPropertyKeys","CreateArrayFromList","$PreventExtensions","V","$Set","_proto","proto","NullValue","$SetPrototypeOf"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow strict-local */\n\nimport type { Realm } from \"../../realm.js\";\nimport { BooleanValue, ObjectValue, NullValue } from \"../../values/index.js\";\nimport { Call, Construct, IsCallable, IsConstructor } from \"../../methods/index.js\";\nimport { Create, Properties, To } from \"../../singletons.js\";\n\nexport default function(realm: Realm): ObjectValue {\n  let obj = new ObjectValue(realm, realm.intrinsics.ObjectPrototype, \"Reflect\");\n\n  // ECMA262 26.1.1\n  obj.defineNativeMethod(\"apply\", 3, (context, [target, thisArgument, argumentsList]) => {\n    // 1. If IsCallable(target) is false, throw a TypeError exception.\n    if (!IsCallable(realm, target)) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 2. Let args be ? CreateListFromArrayLike(argumentsList).\n    let args = Create.CreateListFromArrayLike(realm, argumentsList);\n\n    // TODO #1008 3. Perform PrepareForTailCall().\n\n    // 4. Return ? Call(target, thisArgument, args).\n    return Call(realm, target, thisArgument, args);\n  });\n\n  // ECMA262 26.1.2\n  obj.defineNativeMethod(\"construct\", 2, (context, [target, argumentsList, _newTarget]) => {\n    let newTarget = _newTarget;\n    // 1. If IsConstructor(target) is false, throw a TypeError exception.\n    if (!IsConstructor(realm, target)) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 2. If newTarget is not present, let newTarget be target.\n    if (!newTarget) {\n      newTarget = target;\n    } else if (!IsConstructor(realm, newTarget)) {\n      // 3. Else if IsConstructor(newTarget) is false, throw a TypeError exception.\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 4. Let args be ? CreateListFromArrayLike(argumentsList).\n    let args = Create.CreateListFromArrayLike(realm, argumentsList);\n\n    // 5. Return ? Construct(target, args, newTarget).\n    return Construct(realm, target, args, newTarget);\n  });\n\n  // ECMA262 26.1.3\n  obj.defineNativeMethod(\"defineProperty\", 3, (context, [_target, propertyKey, attributes]) => {\n    let target = _target.throwIfNotConcrete();\n\n    // 1. If Type(target) is not Object, throw a TypeError exception.\n    if (!(target instanceof ObjectValue)) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 2. Let key be ? ToPropertyKey(propertyKey).\n    let key = To.ToPropertyKey(realm, propertyKey);\n\n    // 3. Let desc be ? ToPropertyDescriptor(attributes).\n    let desc = To.ToPropertyDescriptor(realm, attributes);\n\n    // 4. Return ? target.[[DefineOwnProperty]](key, desc).\n    return new BooleanValue(realm, target.$DefineOwnProperty(key, desc));\n  });\n\n  // ECMA262 26.1.4\n  obj.defineNativeMethod(\"deleteProperty\", 2, (context, [_target, propertyKey]) => {\n    let target = _target.throwIfNotConcrete();\n\n    // 1. If Type(target) is not Object, throw a TypeError exception.\n    if (!(target instanceof ObjectValue)) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 2. Let key be ? ToPropertyKey(propertyKey).\n    let key = To.ToPropertyKey(realm, propertyKey);\n\n    // 3. Return ? target.[[Delete]](key).\n    return new BooleanValue(realm, target.$Delete(key));\n  });\n\n  // ECMA262 26.1.5\n  obj.defineNativeMethod(\"get\", 2, (context, [_target, propertyKey, _receiver]) => {\n    let receiver = _receiver;\n    let target = _target.throwIfNotConcrete();\n\n    // 1. If Type(target) is not Object, throw a TypeError exception.\n    if (!(target instanceof ObjectValue)) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 2. Let key be ? ToPropertyKey(propertyKey).\n    let key = To.ToPropertyKey(realm, propertyKey);\n\n    // 3. If receiver is not present, then\n    if (!receiver) {\n      // a. Let receiver be target.\n      receiver = target;\n    }\n\n    // 4. Return ? target.[[Get]](key, receiver).\n    return target.$Get(key, receiver);\n  });\n\n  // ECMA262 26.1.6\n  obj.defineNativeMethod(\"getOwnPropertyDescriptor\", 2, (context, [_target, propertyKey]) => {\n    let target = _target.throwIfNotConcrete();\n\n    // 1. If Type(target) is not Object, throw a TypeError exception.\n    if (!(target instanceof ObjectValue)) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 2. Let key be ? ToPropertyKey(propertyKey).\n    let key = To.ToPropertyKey(realm, propertyKey);\n\n    // 3. Let desc be ? target.[[GetOwnProperty]](key).\n    let desc = target.$GetOwnProperty(key);\n\n    // 4. Return FromPropertyDescriptor(desc).\n    return Properties.FromPropertyDescriptor(realm, desc);\n  });\n\n  // ECMA262 26.1.7\n  obj.defineNativeMethod(\"getPrototypeOf\", 1, (context, [_target]) => {\n    let target = _target.throwIfNotConcrete();\n\n    // 1. If Type(target) is not Object, throw a TypeError exception.\n    if (!(target instanceof ObjectValue)) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 2. Return ? target.[[GetPrototypeOf]]().\n    return target.$GetPrototypeOf();\n  });\n\n  // ECMA262 26.1.8\n  obj.defineNativeMethod(\"has\", 2, (context, [target, propertyKey]) => {\n    // 1. If Type(target) is not Object, throw a TypeError exception.\n    if (target.mightNotBeObject()) {\n      if (target.mightBeObject()) target.throwIfNotConcrete();\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 2. Let key be ? ToPropertyKey(propertyKey).\n    let key = To.ToPropertyKey(realm, propertyKey);\n\n    // 3. Return ? target.[[HasProperty]](key).\n    return new BooleanValue(realm, target.$HasProperty(key));\n  });\n\n  // ECMA262 26.1.9\n  obj.defineNativeMethod(\"isExtensible\", 1, (context, [_target]) => {\n    let target = _target.throwIfNotConcrete();\n\n    // 1. If Type(target) is not Object, throw a TypeError exception.\n    if (!(target instanceof ObjectValue)) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 2. Return ? target.[[IsExtensible]]().\n    return new BooleanValue(realm, target.$IsExtensible());\n  });\n\n  // ECMA262 26.1.10\n  obj.defineNativeMethod(\"ownKeys\", 1, (context, [_target]) => {\n    let target = _target.throwIfNotConcrete();\n\n    // 1. If Type(target) is not Object, throw a TypeError exception.\n    if (!(target instanceof ObjectValue)) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 2. Let keys be ? target.[[OwnPropertyKeys]]().\n    let keys = target.$OwnPropertyKeys();\n\n    // 3. Return CreateArrayFromList(keys).\n    return Create.CreateArrayFromList(realm, keys);\n  });\n\n  // ECMA262 26.1.11\n  obj.defineNativeMethod(\"preventExtensions\", 1, (context, [_target]) => {\n    let target = _target.throwIfNotConcrete();\n\n    // 1. If Type(target) is not Object, throw a TypeError exception.\n    if (!(target instanceof ObjectValue)) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 2. Return ? target.[[PreventExtensions]]().\n    return new BooleanValue(realm, target.$PreventExtensions());\n  });\n\n  // ECMA262 26.1.12\n  obj.defineNativeMethod(\"set\", 3, (context, [_target, propertyKey, V, _receiver]) => {\n    let receiver = _receiver;\n    let target = _target.throwIfNotConcrete();\n\n    // 1. If Type(target) is not Object, throw a TypeError exception.\n    if (!(target instanceof ObjectValue)) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 2. Let key be ? ToPropertyKey(propertyKey).\n    let key = To.ToPropertyKey(realm, propertyKey);\n\n    // 3. If receiver is not present, then\n    if (!receiver) {\n      // a. Let receiver be target.\n      receiver = target;\n    }\n\n    // 5. Return ? target.[[Set]](key, V, receiver).\n    return new BooleanValue(realm, target.$Set(key, V, receiver));\n  });\n\n  // ECMA262 26.1.13\n  obj.defineNativeMethod(\"setPrototypeOf\", 2, (context, [_target, _proto]) => {\n    let target = _target.throwIfNotConcrete();\n    let proto = _proto.throwIfNotConcrete();\n\n    // 1. If Type(target) is not Object, throw a TypeError exception.\n    if (!(target instanceof ObjectValue)) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 2. If Type(proto) is not Object and proto is not null, throw a TypeError exception.\n    if (!(proto instanceof ObjectValue) && !(proto instanceof NullValue)) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 3. Return ? target.[[SetPrototypeOf]](proto).\n    return new BooleanValue(realm, target.$SetPrototypeOf(proto));\n  });\n\n  return obj;\n}\n"],"file":"Reflect.js"}