{"version":3,"sources":["../../../src/intrinsics/ecma262/Error.js"],"names":["realm","build","describeLocation","callerFn","env","loc","locString","displayName","key","alreadyDescribedLocations","has","get","set","undefined","NativeFunctionValue","name","_SafeGetDataPropertyValue","mightBeUndefined","To","ToStringPartial","throwIfNotConcrete","environmentRecord","$NewTarget","start","line","column","source","location","buildStackTemplateSrc","buildStack","context","$ErrorData","stack","contextStack","intrinsics","lines","header","message","ToStringValue","executionContext","reverse","caller","function","lexicalEnvironment","push","footer","join","StringValue","value","AbstractValue","createFromTemplate","inheritError","func","argLength","NewTarget","newTarget","O","Create","OrdinaryCreateFromConstructor","slice","locationData","msg","getType","msgDesc","PropertyDescriptor","writable","enumerable","configurable","Properties","DefinePropertyOrThrow","stackDesc","$Prototype","Error"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow strict-local */\n\nimport type { Realm } from \"../../realm.js\";\nimport type { LexicalEnvironment } from \"../../environment.js\";\nimport {\n  AbstractValue,\n  ObjectValue,\n  FunctionValue,\n  NativeFunctionValue,\n  StringValue,\n  Value,\n} from \"../../values/index.js\";\nimport { Get } from \"../../methods/index.js\";\nimport { Create, Properties, To } from \"../../singletons.js\";\nimport invariant from \"../../invariant.js\";\nimport type { BabelNodeSourceLocation } from \"@babel/types\";\nimport { PropertyDescriptor } from \"../../descriptors.js\";\n\nexport default function(realm: Realm): NativeFunctionValue {\n  return build(\"Error\", realm, false);\n}\n\nexport function describeLocation(\n  realm: Realm,\n  callerFn: ?FunctionValue,\n  env: ?LexicalEnvironment,\n  loc: ?BabelNodeSourceLocation\n): void | string {\n  let locString = \"\";\n  let displayName = \"\";\n  let key = loc || callerFn;\n\n  // check if we've already encountered the callFn and if so\n  // re-use that described location. plus we may get stuck trying\n  // to get the location by recursively checking the same fun\n  // so this also prevents a stack overflow\n  if (key) {\n    if (realm.alreadyDescribedLocations.has(key)) {\n      return realm.alreadyDescribedLocations.get(key);\n    }\n    realm.alreadyDescribedLocations.set(key, undefined);\n  }\n\n  if (callerFn) {\n    if (callerFn instanceof NativeFunctionValue) {\n      locString = \"native\";\n    }\n\n    let name = callerFn._SafeGetDataPropertyValue(\"name\");\n    if (!name.mightBeUndefined()) displayName = To.ToStringPartial(realm, name);\n    else name.throwIfNotConcrete();\n\n    if (env && env.environmentRecord.$NewTarget) displayName = `new ${displayName}`;\n  }\n\n  if (!locString) {\n    if (loc) {\n      locString = `${loc.start.line}:${loc.start.column + 1}`;\n      if (loc.source !== null) locString = `${loc.source}:${locString}`;\n    } else {\n      locString = (loc ? loc.source : undefined) || \"unknown\";\n      if (!displayName) return undefined;\n    }\n  }\n\n  let location;\n  if (displayName) {\n    location = `at ${displayName} (${locString})`;\n  } else {\n    location = `at ${locString}`;\n  }\n  if (key) {\n    realm.alreadyDescribedLocations.set(key, location);\n  }\n  return location;\n}\n\nconst buildStackTemplateSrc = 'A + (B ? \": \" + B : \"\") + C';\n\nfunction buildStack(realm: Realm, context: ObjectValue): Value {\n  invariant(context.$ErrorData);\n\n  let stack = context.$ErrorData.contextStack;\n  if (!stack) return realm.intrinsics.undefined;\n\n  let lines = [];\n  let header = To.ToStringPartial(realm, Get(realm, context, \"name\"));\n\n  let message = Get(realm, context, \"message\");\n  if (!message.mightBeUndefined()) {\n    message = To.ToStringValue(realm, message);\n  } else {\n    message.throwIfNotConcrete();\n  }\n\n  for (let executionContext of stack.reverse()) {\n    let caller = executionContext.caller;\n    if (!executionContext.loc) continue; // compiler generated helper for destructuring arguments\n    let locString = describeLocation(\n      realm,\n      caller ? caller.function : undefined,\n      caller ? caller.lexicalEnvironment : undefined,\n      executionContext.loc\n    );\n    if (locString !== undefined) lines.push(locString);\n  }\n  let footer = `\\n    ${lines.join(\"\\n    \")}`;\n\n  return message instanceof StringValue\n    ? new StringValue(realm, `${header}${message.value ? `: ${message.value}` : \"\"}${footer}`)\n    : AbstractValue.createFromTemplate(realm, buildStackTemplateSrc, StringValue, [\n        new StringValue(realm, header),\n        message,\n        new StringValue(realm, footer),\n      ]);\n}\n\nexport function build(name: string, realm: Realm, inheritError?: boolean = true): NativeFunctionValue {\n  let func = new NativeFunctionValue(realm, name, name, 1, (context, [message], argLength, NewTarget) => {\n    // 1. If NewTarget is undefined, let newTarget be the active function object, else let newTarget be NewTarget.\n    let newTarget = NewTarget || func;\n\n    // 2. Let O be ? OrdinaryCreateFromConstructor(newTarget, \"%ErrorPrototype%\", « [[ErrorData]] »).\n    let O = Create.OrdinaryCreateFromConstructor(realm, newTarget, `${name}Prototype`, { $ErrorData: undefined });\n    O.$ErrorData = {\n      contextStack: realm.contextStack.slice(1),\n      locationData: undefined,\n    };\n\n    // 3. If message is not undefined, then\n    if (!message.mightBeUndefined()) {\n      // a. Let msg be ? ToString(message).\n      let msg = message.getType() === StringValue ? message : To.ToStringValue(realm, message);\n\n      // b. Let msgDesc be the PropertyDescriptor{[[Value]]: msg, [[Writable]]: true, [[Enumerable]]: false, [[Configurable]]: true}.\n      let msgDesc = new PropertyDescriptor({\n        value: msg,\n        writable: true,\n        enumerable: false,\n        configurable: true,\n      });\n\n      // c. Perform ! DefinePropertyOrThrow(O, \"message\", msgDesc).\n      Properties.DefinePropertyOrThrow(realm, O, \"message\", msgDesc);\n    } else {\n      message.throwIfNotConcrete();\n    }\n\n    // Build a text description of the stack.\n    let stackDesc = new PropertyDescriptor({\n      value: buildStack(realm, O),\n      enumerable: false,\n      configurable: true,\n      writable: true,\n    });\n    Properties.DefinePropertyOrThrow(realm, O, \"stack\", stackDesc);\n\n    // 4. Return O.\n    return O;\n  });\n\n  if (inheritError) {\n    func.$Prototype = realm.intrinsics.Error;\n  }\n\n  return func;\n}\n"],"file":"Error.js"}