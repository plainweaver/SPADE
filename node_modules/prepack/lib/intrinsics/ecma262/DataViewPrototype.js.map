{"version":3,"sources":["../../../src/intrinsics/ecma262/DataViewPrototype.js"],"names":["realm","obj","defineNativeGetter","context","O","throwIfNotConcrete","ObjectValue","createErrorThrowCompletion","intrinsics","TypeError","$ViewedArrayBuffer","buffer","size","$ByteLength","NumberValue","offset","$ByteOffset","defineNativeMethod","byteOffset","_littleEndian","littleEndian","v","false","true","value","defineNativeProperty","SymbolToStringTag","StringValue","writable"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow strict-local */\n\nimport type { Realm } from \"../../realm.js\";\nimport { ObjectValue, StringValue, NumberValue } from \"../../values/index.js\";\nimport { IsDetachedBuffer } from \"../../methods/is.js\";\nimport { GetViewValue, SetViewValue } from \"../../methods/arraybuffer.js\";\nimport invariant from \"../../invariant.js\";\n\nexport default function(realm: Realm, obj: ObjectValue): void {\n  // ECMA262 24.2.4.1\n  obj.defineNativeGetter(\"buffer\", context => {\n    // 1. Let O be the this value.\n    let O = context.throwIfNotConcrete();\n\n    // 2. If Type(O) is not Object, throw a TypeError exception.\n    if (!(O instanceof ObjectValue)) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"Type(O) is not Object\");\n    }\n\n    // 3. If O does not have a [[DataView]] internal slot, throw a TypeError exception.\n    if (!(\"$DataView\" in O)) {\n      throw realm.createErrorThrowCompletion(\n        realm.intrinsics.TypeError,\n        \"O does not have a [[DataView]] internal slot\"\n      );\n    }\n\n    // 4. Assert: O has a [[ViewedArrayBuffer]] internal slot.\n    invariant(O.$ViewedArrayBuffer);\n\n    // 5. Let buffer be O.[[ViewedArrayBuffer]].\n    let buffer = O.$ViewedArrayBuffer;\n\n    // 6. Return buffer.\n    return buffer;\n  });\n\n  // ECMA262 24.2.4.2\n  obj.defineNativeGetter(\"byteLength\", context => {\n    // 1. Let O be the this value.\n    let O = context.throwIfNotConcrete();\n\n    // 2. If Type(O) is not Object, throw a TypeError exception.\n    if (!(O instanceof ObjectValue)) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"Type(O) is not Object\");\n    }\n\n    // 3. If O does not have a [[DataView]] internal slot, throw a TypeError exception.\n    if (!(\"$DataView\" in O)) {\n      throw realm.createErrorThrowCompletion(\n        realm.intrinsics.TypeError,\n        \"O does not have a [[DataView]] internal slot\"\n      );\n    }\n\n    // 4. Assert: O has a [[ViewedArrayBuffer]] internal slot.\n    invariant(O.$ViewedArrayBuffer);\n\n    // 5. Let buffer be O.[[ViewedArrayBuffer]].\n    let buffer = O.$ViewedArrayBuffer;\n\n    // 6. If IsDetachedBuffer(buffer) is true, throw a TypeError exception.\n    if (IsDetachedBuffer(realm, buffer) === true) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"IsDetachedBuffer(buffer) is true\");\n    }\n\n    // 7. Let size be O.[[ByteLength]].\n    let size = O.$ByteLength;\n    invariant(typeof size === \"number\");\n\n    // 8. Return size.\n    return new NumberValue(realm, size);\n  });\n\n  // ECMA262 24.2.4.3\n  obj.defineNativeGetter(\"byteOffset\", context => {\n    // 1. Let O be the this value.\n    let O = context.throwIfNotConcrete();\n\n    // 2. If Type(O) is not Object, throw a TypeError exception.\n    if (!(O instanceof ObjectValue)) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"Type(O) is not Object\");\n    }\n\n    // 3. If O does not have a [[DataView]] internal slot, throw a TypeError exception.\n    if (!(\"$DataView\" in O)) {\n      throw realm.createErrorThrowCompletion(\n        realm.intrinsics.TypeError,\n        \"O does not have a [[DataView]] internal slot\"\n      );\n    }\n\n    // 4. Assert: O has a [[ViewedArrayBuffer]] internal slot.\n    invariant(O.$ViewedArrayBuffer);\n\n    // 5. Let buffer be O.[[ViewedArrayBuffer]].\n    let buffer = O.$ViewedArrayBuffer;\n\n    // 6. If IsDetachedBuffer(buffer) is true, throw a TypeError exception.\n    if (IsDetachedBuffer(realm, buffer) === true) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"IsDetachedBuffer(buffer) is true\");\n    }\n\n    // 7. Let offset be O.[[ByteOffset]].\n    let offset = O.$ByteOffset;\n    invariant(typeof offset === \"number\");\n\n    // 8. Return offset.\n    return new NumberValue(realm, offset);\n  });\n\n  // ECMA262 24.2.4.5\n  obj.defineNativeMethod(\"getFloat32\", 1, (context, [byteOffset, _littleEndian]) => {\n    let littleEndian = _littleEndian;\n    // 1. Let v be the this value.\n    let v = context;\n\n    // 2. If littleEndian is not present, let littleEndian be false.\n    if (!littleEndian) littleEndian = realm.intrinsics.false;\n\n    // 3. Return ? GetViewValue(v, byteOffset, littleEndian, \"Float32\").\n    return GetViewValue(realm, v, byteOffset, littleEndian, \"Float32\");\n  });\n\n  // ECMA262 24.2.4.6\n  obj.defineNativeMethod(\"getFloat64\", 1, (context, [byteOffset, _littleEndian]) => {\n    let littleEndian = _littleEndian;\n    // 1. Let v be the this value.\n    let v = context;\n\n    // 2. If littleEndian is not present, let littleEndian be false.\n    if (!littleEndian) littleEndian = realm.intrinsics.false;\n\n    // 3. Return ? GetViewValue(v, byteOffset, littleEndian, \"Float64\").\n    return GetViewValue(realm, v, byteOffset, littleEndian, \"Float64\");\n  });\n\n  // ECMA262 24.2.4.7\n  obj.defineNativeMethod(\"getInt8\", 1, (context, [byteOffset]) => {\n    // 1. Let v be the this value.\n    let v = context;\n\n    // 2. Return ? GetViewValue(v, byteOffset, true, \"Int8\").\n    return GetViewValue(realm, v, byteOffset, realm.intrinsics.true, \"Int8\");\n  });\n\n  // ECMA262 24.2.4.8\n  obj.defineNativeMethod(\"getInt16\", 1, (context, [byteOffset, _littleEndian]) => {\n    let littleEndian = _littleEndian;\n    // 1. Let v be the this value.\n    let v = context;\n\n    // 2. If littleEndian is not present, let littleEndian be false.\n    if (!littleEndian) littleEndian = realm.intrinsics.false;\n\n    // 3. Return ? GetViewValue(v, byteOffset, littleEndian, \"Int16\").\n    return GetViewValue(realm, v, byteOffset, littleEndian, \"Int16\");\n  });\n\n  // ECMA262 24.2.4.9\n  obj.defineNativeMethod(\"getInt32\", 1, (context, [byteOffset, _littleEndian]) => {\n    let littleEndian = _littleEndian;\n    // 1. Let v be the this value.\n    let v = context;\n\n    // 2. If littleEndian is not present, let littleEndian be false.\n    if (!littleEndian) littleEndian = realm.intrinsics.false;\n\n    // 3. Return ? GetViewValue(v, byteOffset, littleEndian, \"Int32\").\n    return GetViewValue(realm, v, byteOffset, littleEndian, \"Int32\");\n  });\n\n  // ECMA262 24.2.4.10\n  obj.defineNativeMethod(\"getUint8\", 1, (context, [byteOffset]) => {\n    // 1. Let v be the this value.\n    let v = context;\n\n    // 2. Return ? GetViewValue(v, byteOffset, true, \"Uint8\").\n    return GetViewValue(realm, v, byteOffset, realm.intrinsics.true, \"Uint8\");\n  });\n\n  // ECMA262 24.2.4.11\n  obj.defineNativeMethod(\"getUint16\", 1, (context, [byteOffset, _littleEndian]) => {\n    let littleEndian = _littleEndian;\n    // 1. Let v be the this value.\n    let v = context;\n\n    // 2. If littleEndian is not present, let littleEndian be false.\n    if (!littleEndian) littleEndian = realm.intrinsics.false;\n\n    // 3. Return ? GetViewValue(v, byteOffset, littleEndian, \"Uint16\").\n    return GetViewValue(realm, v, byteOffset, littleEndian, \"Uint16\");\n  });\n\n  // ECMA262 24.2.4.12\n  obj.defineNativeMethod(\"getUint32\", 1, (context, [byteOffset, _littleEndian]) => {\n    let littleEndian = _littleEndian;\n    // 1. Let v be the this value.\n    let v = context;\n\n    // 2. If littleEndian is not present, let littleEndian be false.\n    if (!littleEndian) littleEndian = realm.intrinsics.false;\n\n    // 3. Return ? GetViewValue(v, byteOffset, littleEndian, \"Uint32\").\n    return GetViewValue(realm, v, byteOffset, littleEndian, \"Uint32\");\n  });\n\n  // ECMA262 24.2.4.13\n  obj.defineNativeMethod(\"setFloat32\", 2, (context, [byteOffset, value, _littleEndian]) => {\n    let littleEndian = _littleEndian;\n    // 1. Let v be the this value.\n    let v = context;\n\n    // 2. If littleEndian is not present, let littleEndian be false.\n    if (!littleEndian) littleEndian = realm.intrinsics.false;\n\n    // 3. Return ? SetViewValue(v, byteOffset, littleEndian, \"Float32\", value).\n    return SetViewValue(realm, v, byteOffset, littleEndian, \"Float32\", value);\n  });\n\n  // ECMA262 24.2.4.14\n  obj.defineNativeMethod(\"setFloat64\", 2, (context, [byteOffset, value, _littleEndian]) => {\n    let littleEndian = _littleEndian;\n    // 1. Let v be the this value.\n    let v = context;\n\n    // 2. If littleEndian is not present, let littleEndian be false.\n    if (!littleEndian) littleEndian = realm.intrinsics.false;\n\n    // 3. Return ? SetViewValue(v, byteOffset, littleEndian, \"Float64\", value).\n    return SetViewValue(realm, v, byteOffset, littleEndian, \"Float64\", value);\n  });\n\n  // ECMA262 24.2.4.15\n  obj.defineNativeMethod(\"setInt8\", 2, (context, [byteOffset, value]) => {\n    // 1. Let v be the this value.\n    let v = context;\n\n    // 2. Return ? SetViewValue(v, byteOffset, true, \"Int8\", value).\n    return SetViewValue(realm, v, byteOffset, realm.intrinsics.true, \"Int8\", value);\n  });\n\n  // ECMA262 24.2.4.16\n  obj.defineNativeMethod(\"setInt16\", 2, (context, [byteOffset, value, _littleEndian]) => {\n    let littleEndian = _littleEndian;\n    // 1. Let v be the this value.\n    let v = context;\n\n    // 2. If littleEndian is not present, let littleEndian be false.\n    if (!littleEndian) littleEndian = realm.intrinsics.false;\n\n    // 3. Return ? SetViewValue(v, byteOffset, littleEndian, \"Int16\", value).\n    return SetViewValue(realm, v, byteOffset, littleEndian, \"Int16\", value);\n  });\n\n  // ECMA262 24.2.4.17\n  obj.defineNativeMethod(\"setInt32\", 2, (context, [byteOffset, value, _littleEndian]) => {\n    let littleEndian = _littleEndian;\n    // 1. Let v be the this value.\n    let v = context;\n\n    // 2. If littleEndian is not present, let littleEndian be false.\n    if (!littleEndian) littleEndian = realm.intrinsics.false;\n\n    // 3. Return ? SetViewValue(v, byteOffset, littleEndian, \"Int32\", value).\n    return SetViewValue(realm, v, byteOffset, littleEndian, \"Int32\", value);\n  });\n\n  // ECMA262 24.2.4.18\n  obj.defineNativeMethod(\"setUint8\", 2, (context, [byteOffset, value]) => {\n    // 1. Let v be the this value.\n    let v = context;\n\n    // 2. Return ? SetViewValue(v, byteOffset, true, \"Uint8\", value).\n    return SetViewValue(realm, v, byteOffset, realm.intrinsics.true, \"Uint8\", value);\n  });\n\n  // ECMA262 24.2.4.19\n  obj.defineNativeMethod(\"setUint16\", 2, (context, [byteOffset, value, _littleEndian]) => {\n    let littleEndian = _littleEndian;\n    // 1. Let v be the this value.\n    let v = context;\n\n    // 2. If littleEndian is not present, let littleEndian be false.\n    if (!littleEndian) littleEndian = realm.intrinsics.false;\n\n    // 3. Return ? SetViewValue(v, byteOffset, littleEndian, \"Uint16\", value).\n    return SetViewValue(realm, v, byteOffset, littleEndian, \"Uint16\", value);\n  });\n\n  // ECMA262 24.2.4.20\n  obj.defineNativeMethod(\"setUint32\", 2, (context, [byteOffset, value, _littleEndian]) => {\n    let littleEndian = _littleEndian;\n    // 1. Let v be the this value.\n    let v = context;\n\n    // 2. If littleEndian is not present, let littleEndian be false.\n    if (!littleEndian) littleEndian = realm.intrinsics.false;\n\n    // 3. Return ? SetViewValue(v, byteOffset, littleEndian, \"Uint32\", value).\n    return SetViewValue(realm, v, byteOffset, littleEndian, \"Uint32\", value);\n  });\n\n  // ECMA26224.2.4.21\n  obj.defineNativeProperty(realm.intrinsics.SymbolToStringTag, new StringValue(realm, \"DataView\"), { writable: false });\n}\n"],"file":"DataViewPrototype.js"}