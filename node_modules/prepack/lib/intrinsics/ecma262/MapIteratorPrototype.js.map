{"version":3,"sources":["../../../src/intrinsics/ecma262/MapIteratorPrototype.js"],"names":["realm","obj","defineNativeMethod","context","O","throwIfNotConcrete","ObjectValue","createErrorThrowCompletion","intrinsics","TypeError","$Map","undefined","$MapNextIndex","$MapIterationKind","m","index","value","itemKind","UndefinedValue","Create","CreateIterResultObject","$MapData","entries","length","e","NumberValue","$Key","$Value","result","CreateArrayFromList","defineNativeProperty","SymbolToStringTag","StringValue","writable"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow strict-local */\n\nimport type { Realm } from \"../../realm.js\";\nimport { StringValue, NumberValue, ObjectValue, UndefinedValue } from \"../../values/index.js\";\nimport { Create } from \"../../singletons.js\";\nimport invariant from \"../../invariant.js\";\n\nexport default function(realm: Realm, obj: ObjectValue): void {\n  // ECMA262 23.1.5.2.1\n  obj.defineNativeMethod(\"next\", 0, context => {\n    // 1. Let O be the this value.\n    let O = context.throwIfNotConcrete();\n\n    // 2. If Type(O) is not Object, throw a TypeError exception.\n    if (!(O instanceof ObjectValue)) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"not an object\");\n    }\n\n    // 3. If O does not have all of the internal slots of a Set Iterator Instance (23.2.5.3), throw a TypeError exception.\n    if (O.$Map === undefined || O.$MapNextIndex === undefined || O.$MapIterationKind === undefined) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"MapIteratorPrototype.next isn't generic\");\n    }\n\n    // 4. Let m be O.[[Map]].\n    let m = O.$Map;\n\n    // 5. Let index be O.[[MapNextIndex]].\n    let index = O.$MapNextIndex.value;\n\n    // 6. Let itemKind be O.[[MapIterationKind]].\n    let itemKind = O.$MapIterationKind;\n\n    // 7. If m is undefined, return CreateIterResultObject(undefined, true).\n    if (!m || m instanceof UndefinedValue)\n      return Create.CreateIterResultObject(realm, realm.intrinsics.undefined, true);\n    invariant(m instanceof ObjectValue);\n\n    // 8. Assert: m has a [[MapData]] internal slot.\n    invariant(m.$MapData, \"m has a [[MapData]] internal slot\");\n\n    // 9. Let entries be the List that is m.[[MapData]].\n    let entries = m.$MapData;\n    invariant(entries);\n\n    // 10. Repeat while index is less than the total number of elements of entries. The number of elements must be redetermined each time this method is evaluated.\n    while (index < entries.length) {\n      // a. Let e be the Record {[[Key]], [[Value]]} that is the value of entries[index].\n      let e = entries[index];\n\n      // b. Set index to index+1.\n      index = index + 1;\n\n      // c. Set O.[[MapNextIndex]] to index.\n      O.$MapNextIndex = new NumberValue(realm, index);\n\n      // d. If e.[[Key]] is not empty, then\n      if (e.$Key !== undefined) {\n        invariant(e.$Value !== undefined);\n\n        let result;\n        // i. If itemKind is \"key\", let result be e.[[Key]].\n        if (itemKind === \"key\") result = e.$Key;\n        else if (itemKind === \"value\")\n          // ii. Else if itemKind is \"value\", let result be e.[[Value]].\n          result = e.$Value;\n        else {\n          // iii. Else,\n          // 1. Assert: itemKind is \"key+value\".\n          invariant(itemKind === \"key+value\");\n\n          // 2. Let result be CreateArrayFromList(« e.[[Key]], e.[[Value]] »).\n          result = Create.CreateArrayFromList(realm, [e.$Key, e.$Value]);\n        }\n\n        // iv. Return CreateIterResultObject(result, false).\n        return Create.CreateIterResultObject(realm, result, false);\n      }\n    }\n\n    // 11. Set O.[[Map]] to undefined.\n    O.$Map = realm.intrinsics.undefined;\n\n    // 12. Return CreateIterResultObject(undefined, true).\n    return Create.CreateIterResultObject(realm, realm.intrinsics.undefined, true);\n  });\n\n  // ECMA262 23.1.5.2.2\n  obj.defineNativeProperty(realm.intrinsics.SymbolToStringTag, new StringValue(realm, \"Map Iterator\"), {\n    writable: false,\n  });\n}\n"],"file":"MapIteratorPrototype.js"}