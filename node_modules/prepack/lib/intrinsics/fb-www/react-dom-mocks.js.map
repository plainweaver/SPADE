{"version":3,"sources":["../../../src/intrinsics/fb-www/react-dom-mocks.js"],"names":["createMockReactDOM","realm","reactDomRequireName","reactDomValue","ObjectValue","intrinsics","ObjectPrototype","refuseSerialization","genericTemporalFunc","funcVal","args","reactDomMethod","AbstractValue","createTemporalFromBuildFunction","FunctionValue","skipInvariant","isPure","AbstractObjectValue","createPortalFunc","reactPortalValue","domNodeValue","react","abstractHints","set","undefined","makeFinal","createMockReactDOMServer","requireName","reactDomServerValue","input"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { Realm } from \"../../realm.js\";\nimport { ObjectValue, AbstractObjectValue, AbstractValue, FunctionValue } from \"../../values/index.js\";\nimport { createReactHintObject, isReactElement } from \"../../react/utils.js\";\nimport invariant from \"../../invariant.js\";\nimport { updateIntrinsicNames, addMockFunctionToObject } from \"./utils.js\";\nimport { renderToString } from \"../../react/experimental-server-rendering/rendering.js\";\nimport { createOperationDescriptor } from \"../../utils/generator.js\";\n\nexport function createMockReactDOM(realm: Realm, reactDomRequireName: string): ObjectValue {\n  let reactDomValue = new ObjectValue(realm, realm.intrinsics.ObjectPrototype);\n  reactDomValue.refuseSerialization = true;\n\n  updateIntrinsicNames(realm, reactDomValue, reactDomRequireName);\n\n  const genericTemporalFunc = (funcVal, args) => {\n    let reactDomMethod = AbstractValue.createTemporalFromBuildFunction(\n      realm,\n      FunctionValue,\n      [funcVal, ...args],\n      createOperationDescriptor(\"REACT_TEMPORAL_FUNC\"),\n      { skipInvariant: true, isPure: true }\n    );\n    invariant(reactDomMethod instanceof AbstractObjectValue);\n    return reactDomMethod;\n  };\n\n  addMockFunctionToObject(realm, reactDomValue, reactDomRequireName, \"render\", genericTemporalFunc);\n  addMockFunctionToObject(realm, reactDomValue, reactDomRequireName, \"hydrate\", genericTemporalFunc);\n  addMockFunctionToObject(realm, reactDomValue, reactDomRequireName, \"findDOMNode\", genericTemporalFunc);\n  addMockFunctionToObject(realm, reactDomValue, reactDomRequireName, \"unmountComponentAtNode\", genericTemporalFunc);\n\n  const createPortalFunc = (funcVal, [reactPortalValue, domNodeValue]) => {\n    let reactDomMethod = AbstractValue.createTemporalFromBuildFunction(\n      realm,\n      ObjectValue,\n      [funcVal, reactPortalValue, domNodeValue],\n      createOperationDescriptor(\"REACT_TEMPORAL_FUNC\"),\n      { skipInvariant: true, isPure: true }\n    );\n    invariant(reactDomMethod instanceof AbstractObjectValue);\n    realm.react.abstractHints.set(\n      reactDomMethod,\n      createReactHintObject(reactDomValue, \"createPortal\", [reactPortalValue, domNodeValue], realm.intrinsics.undefined)\n    );\n    return reactDomMethod;\n  };\n\n  addMockFunctionToObject(realm, reactDomValue, reactDomRequireName, \"createPortal\", createPortalFunc);\n\n  reactDomValue.refuseSerialization = false;\n  reactDomValue.makeFinal();\n  return reactDomValue;\n}\n\nexport function createMockReactDOMServer(realm: Realm, requireName: string): ObjectValue {\n  let reactDomServerValue = new ObjectValue(realm, realm.intrinsics.ObjectPrototype);\n  reactDomServerValue.refuseSerialization = true;\n\n  updateIntrinsicNames(realm, reactDomServerValue, requireName);\n\n  const genericTemporalFunc = (funcVal, args) => {\n    let reactDomMethod = AbstractValue.createTemporalFromBuildFunction(\n      realm,\n      FunctionValue,\n      [funcVal, ...args],\n      createOperationDescriptor(\"REACT_TEMPORAL_FUNC\"),\n      { skipInvariant: true, isPure: true }\n    );\n    invariant(reactDomMethod instanceof AbstractObjectValue);\n    return reactDomMethod;\n  };\n\n  addMockFunctionToObject(realm, reactDomServerValue, requireName, \"renderToString\", (funcVal, [input]) => {\n    if (input instanceof ObjectValue && isReactElement(input)) {\n      return renderToString(realm, input, false);\n    }\n    return genericTemporalFunc(funcVal, [input]);\n  });\n  addMockFunctionToObject(realm, reactDomServerValue, requireName, \"renderToStaticMarkup\", (funcVal, [input]) => {\n    if (input instanceof ObjectValue && isReactElement(input)) {\n      return renderToString(realm, input, true);\n    }\n    return genericTemporalFunc(funcVal, [input]);\n  });\n  addMockFunctionToObject(realm, reactDomServerValue, requireName, \"renderToNodeStream\", genericTemporalFunc);\n  addMockFunctionToObject(realm, reactDomServerValue, requireName, \"renderToStaticNodeStream\", genericTemporalFunc);\n\n  reactDomServerValue.refuseSerialization = false;\n  reactDomServerValue.makeFinal();\n  return reactDomServerValue;\n}\n"],"file":"react-dom-mocks.js"}