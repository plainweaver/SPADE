{"version":3,"sources":["../../../src/intrinsics/fb-www/utils.js"],"names":["updateIntrinsicNames","realm","obj","requireName","properties","intrinsicName","property","val","Value","name","updatePrototype","ObjectValue","proto","addMockFunctionToObject","funcName","func","funcValue","NativeFunctionValue","undefined","context","args","defineNativeProperty","writable","enumerable","configurable"],"mappings":";;;;;;;;AAYA;;AACA;;AACA;;;;AAdA;;;;;;;;AAgBO,SAASA,oBAAT,CACLC,KADK,EAELC,GAFK,EAGLC,WAHK,EAILC,UAJK,EAKC;AACNF,EAAAA,GAAG,CAACG,aAAJ,GAAqB,YAAWF,WAAY,IAA5C;;AACA,MAAIC,UAAJ,EAAgB;AACd,SAAK,IAAIE,QAAT,IAAqBF,UAArB,EAAiC;AAC/B,UAAI,OAAOE,QAAP,KAAoB,QAAxB,EAAkC;AAChC,YAAIC,GAAG,GAAG,iBAAIN,KAAJ,EAAWC,GAAX,EAAgBI,QAAhB,CAAV;AACA,gCAAUC,GAAG,YAAYC,YAAzB;AACAD,QAAAA,GAAG,CAACF,aAAJ,GAAqB,YAAWF,WAAY,MAAKG,QAAS,EAA1D;AACD,OAJD,MAIO,IAAI,OAAOA,QAAP,KAAoB,QAApB,IAAgCA,QAAQ,KAAK,IAAjD,EAAuD;AAC5D,YAAI;AAAEG,UAAAA,IAAF;AAAQC,UAAAA;AAAR,YAA4BJ,QAAhC;AAEA,YAAIC,GAAG,GAAG,iBAAIN,KAAJ,EAAWC,GAAX,EAAgBO,IAAhB,CAAV;AACA,gCAAUF,GAAG,YAAYC,YAAzB;AACAD,QAAAA,GAAG,CAACF,aAAJ,GAAqB,YAAWF,WAAY,MAAKM,IAAK,EAAtD;;AACA,YAAIC,eAAJ,EAAqB;AACnB,kCAAUH,GAAG,YAAYI,kBAAzB;AACA,cAAIC,KAAK,GAAG,iBAAIX,KAAJ,EAAWM,GAAX,EAAgB,WAAhB,CAAZ;AACAK,UAAAA,KAAK,CAACP,aAAN,GAAuB,YAAWF,WAAY,MAAKM,IAAK,YAAxD;AACD;AACF;AACF;AACF;AACF;;AAEM,SAASI,uBAAT,CACLZ,KADK,EAELC,GAFK,EAGLC,WAHK,EAILW,QAJK,EAKLC,IALK,EAMC;AACN,MAAIC,SAAS,GAAG,IAAIC,0BAAJ,CAAwBhB,KAAxB,EAA+BiB,SAA/B,EAA0CJ,QAA1C,EAAoD,CAApD,EAAuD,CAACK,OAAD,EAAUC,IAAV,KAAmBL,IAAI,CAACC,SAAD,EAAYI,IAAZ,CAA9E,CAAhB;AAEAlB,EAAAA,GAAG,CAACmB,oBAAJ,CAAyBP,QAAzB,EAAmCE,SAAnC,EAA8C;AAC5CM,IAAAA,QAAQ,EAAE,KADkC;AAE5CC,IAAAA,UAAU,EAAE,KAFgC;AAG5CC,IAAAA,YAAY,EAAE;AAH8B,GAA9C;AAKAR,EAAAA,SAAS,CAACX,aAAV,GAA2B,YAAWF,WAAY,MAAKW,QAAS,EAAhE;AACD","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { Realm } from \"../../realm.js\";\nimport { ObjectValue, NativeFunctionValue, Value } from \"../../values/index.js\";\nimport { Get } from \"../../methods/index.js\";\nimport invariant from \"../../invariant.js\";\n\nexport function updateIntrinsicNames(\n  realm: Realm,\n  obj: ObjectValue,\n  requireName: string,\n  properties?: Array<string | { name: string, updatePrototype: boolean }>\n): void {\n  obj.intrinsicName = `require(\"${requireName}\")`;\n  if (properties) {\n    for (let property of properties) {\n      if (typeof property === \"string\") {\n        let val = Get(realm, obj, property);\n        invariant(val instanceof Value);\n        val.intrinsicName = `require(\"${requireName}\").${property}`;\n      } else if (typeof property === \"object\" && property !== null) {\n        let { name, updatePrototype } = property;\n\n        let val = Get(realm, obj, name);\n        invariant(val instanceof Value);\n        val.intrinsicName = `require(\"${requireName}\").${name}`;\n        if (updatePrototype) {\n          invariant(val instanceof ObjectValue);\n          let proto = Get(realm, val, \"prototype\");\n          proto.intrinsicName = `require(\"${requireName}\").${name}.prototype`;\n        }\n      }\n    }\n  }\n}\n\nexport function addMockFunctionToObject(\n  realm: Realm,\n  obj: ObjectValue,\n  requireName: string,\n  funcName: string,\n  func: (funcValue: NativeFunctionValue, args: Array<Value>) => Value\n): void {\n  let funcValue = new NativeFunctionValue(realm, undefined, funcName, 0, (context, args) => func(funcValue, args));\n\n  obj.defineNativeProperty(funcName, funcValue, {\n    writable: false,\n    enumerable: false,\n    configurable: true,\n  });\n  funcValue.intrinsicName = `require(\"${requireName}\").${funcName}`;\n}\n"],"file":"utils.js"}