{"version":3,"sources":["../../../src/intrinsics/prepack/global.js"],"names":["createAbstractFunction","realm","additionalValues","NativeFunctionValue","context","typeNameOrTemplate","_name","options","name","StringValue","value","undefined","createErrorThrowCompletion","intrinsics","TypeError","ObjectValue","global","$GlobalObject","$DefineOwnProperty","PropertyDescriptor","args","console","log","map","arg","serialize","writable","enumerable","configurable","null","argModelString","argModel","ECMAScriptSourceFunctionValue","AbstractValue","currentArgModel","optimizedFunctions","get","currentString","JSON","stringify","argModelError","CompilerDiagnostic","currentLocation","handleError","FatalError","set","location","expressionLocation","start","line","column","end","result","react","enabled","ObjectPrototype","reactComponentRootUid","component","config","hasValidComponent","BoundFunctionValue","hasValidConfig","diagnostic","reactComponentTree","$Set","assignToGlobal","t","memberExpression","identifier","functionValue","callback","$Call","functionCall","evaluatePure","call","createNativeFunctionForResidualCall","unsafe","f","useAbstractInterpretation","type","template","Value","isTypeCompatibleWith","constructor","FunctionValue","isResidual","isUnsafeResidual","createTemporalFromBuildFunction","concat","makePartial","values","ValuesDomain","Set","generator","rebuildNestedProperties","getIdentifier","createNativeFunctionForResidualInjection","initializeAndValidateArgs","operationDescriptor","numArgs","ciArgs","emitStatement","c","s","mightBeTrue","error","Path","pushAndRefine","v","BooleanValue","object","AbstractObjectValue","isTop","makeFinal","option","makeSimple","propertyName","invariantOptions","key","To","ToStringPartial","emitConcreteModel","invariantLevel","invariantOptionString","emitPropertyInvariant","mightBeUndefined","emitFullInvariant","neverCheckProperty","markPropertyAsChecked","intrinsicName","rebuildObjectProperty","$Realm","target","source","$Environment","$ScriptOrModule","$ConstructorKind","$ThisMode","$HomeObject","$FunctionKind","$Strict","$FormalParameters","$ECMAScriptCode","$HasComputedName","$HasEmptyConstructor","loc","__IntrospectionError","IntegralValue","old","eagerlyRequireModuleDependencies"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { Realm } from \"../../realm.js\";\nimport {\n  AbstractObjectValue,\n  AbstractValue,\n  BooleanValue,\n  BoundFunctionValue,\n  ConcreteValue,\n  ECMAScriptSourceFunctionValue,\n  FunctionValue,\n  IntegralValue,\n  NativeFunctionValue,\n  ObjectValue,\n  StringValue,\n  Value,\n} from \"../../values/index.js\";\nimport { To, Path } from \"../../singletons.js\";\nimport { IsCallable } from \"../../methods/index.js\";\nimport { ValuesDomain } from \"../../domains/index.js\";\nimport invariant from \"../../invariant.js\";\nimport { createAbstract, parseTypeNameOrTemplate } from \"./utils.js\";\nimport { describeValue } from \"../../utils.js\";\nimport { valueIsKnownReactAbstraction } from \"../../react/utils.js\";\nimport { CompilerDiagnostic, FatalError } from \"../../errors.js\";\nimport * as t from \"@babel/types\";\nimport { createOperationDescriptor, type OperationDescriptor } from \"../../utils/generator.js\";\nimport { createAndValidateArgModel } from \"../../utils/ShapeInformation\";\nimport { PropertyDescriptor } from \"../../descriptors.js\";\n\nexport function createAbstractFunction(realm: Realm, ...additionalValues: Array<ConcreteValue>): NativeFunctionValue {\n  return new NativeFunctionValue(\n    realm,\n    \"global.__abstract\",\n    \"__abstract\",\n    0,\n    (context, [typeNameOrTemplate, _name, options]) => {\n      let name = _name;\n      if (name instanceof StringValue) name = name.value;\n      if (name !== undefined && typeof name !== \"string\") {\n        throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"intrinsic name argument is not a string\");\n      }\n      if (options && !(options instanceof ObjectValue)) {\n        throw realm.createErrorThrowCompletion(\n          realm.intrinsics.TypeError,\n          \"options must be an ObjectValue if provided\"\n        );\n      }\n      return createAbstract(realm, typeNameOrTemplate, name, options, ...additionalValues);\n    }\n  );\n}\n\nexport default function(realm: Realm): void {\n  let global = realm.$GlobalObject;\n\n  global.$DefineOwnProperty(\n    \"__dump\",\n    new PropertyDescriptor({\n      value: new NativeFunctionValue(realm, \"global.__dump\", \"__dump\", 0, (context, args) => {\n        console.log(\"dump\", args.map(arg => arg.serialize()));\n        return context;\n      }),\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    })\n  );\n\n  // Helper function to model values that are obtained from the environment,\n  // and whose concrete values are not known at Prepack-time.\n  // __abstract(typeNameOrTemplate, name, options) creates a new abstract value\n  // where typeNameOrTemplate can be...\n  // - 'string', 'boolean', 'number', 'object', 'function' or\n  // - ':string', ':boolean', ':number', ':object', ':function' to indicate that\n  //   the abstract value represents a function that only returns values of the specified type, or\n  // - an actual object defining known properties.\n  // options is an optional object that may contain:\n  // - allowDuplicateNames: boolean representing whether the name of the abstract value may be\n  //   repeated, by default they must be unique\n  // - disablePlaceholders: boolean representing whether placeholders should be substituted in\n  //   the abstract value's name.\n  // If the abstract value gets somehow embedded in the final heap,\n  // it will be referred to by the supplied name in the generated code.\n  global.$DefineOwnProperty(\n    \"__abstract\",\n    new PropertyDescriptor({\n      value: createAbstractFunction(realm),\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    })\n  );\n\n  global.$DefineOwnProperty(\n    \"__abstractOrNull\",\n    new PropertyDescriptor({\n      value: createAbstractFunction(realm, realm.intrinsics.null),\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    })\n  );\n\n  global.$DefineOwnProperty(\n    \"__abstractOrNullOrUndefined\",\n    new PropertyDescriptor({\n      value: createAbstractFunction(realm, realm.intrinsics.null, realm.intrinsics.undefined),\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    })\n  );\n\n  global.$DefineOwnProperty(\n    \"__abstractOrUndefined\",\n    new PropertyDescriptor({\n      value: createAbstractFunction(realm, realm.intrinsics.undefined),\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    })\n  );\n\n  // Allows dynamically registering optimized functions.\n  // WARNING: these functions will get exposed at global scope and called there.\n  // NB: If we interpret one of these calls in an evaluateForEffects context\n  //     that is not subsequently applied, the function will not be registered\n  //     (because prepack won't have a correct value for the FunctionValue itself)\n  // If we encounter an invalid input, we will emit a warning and not optimize the function\n  global.$DefineOwnProperty(\n    \"__optimize\",\n    new PropertyDescriptor({\n      value: new NativeFunctionValue(\n        realm,\n        \"global.__optimize\",\n        \"__optimize\",\n        1,\n        (context, [value, argModelString]) => {\n          let argModel;\n          if (argModelString !== undefined) {\n            argModel = createAndValidateArgModel(realm, argModelString);\n          }\n          if (value instanceof ECMAScriptSourceFunctionValue || value instanceof AbstractValue) {\n            let currentArgModel = realm.optimizedFunctions.get(value);\n            // Verify that if there is an existing argModel, that it is the same as the new one.\n            if (currentArgModel) {\n              let currentString = argModelString instanceof StringValue ? argModelString.value : argModelString;\n              if (JSON.stringify(currentArgModel) !== currentString) {\n                let argModelError = new CompilerDiagnostic(\n                  \"__optimize called twice with different argModelStrings\",\n                  realm.currentLocation,\n                  \"PP1008\",\n                  \"Warning\"\n                );\n                if (realm.handleError(argModelError) !== \"Recover\") throw new FatalError();\n                else return realm.intrinsics.undefined;\n              }\n            }\n            realm.optimizedFunctions.set(value, argModel);\n          } else {\n            let location = value.expressionLocation\n              ? `${value.expressionLocation.start.line}:${value.expressionLocation.start.column} ` +\n                `${value.expressionLocation.end.line}:${value.expressionLocation.end.line}`\n              : \"location unknown\";\n            let result = realm.handleError(\n              new CompilerDiagnostic(\n                `Optimized Function Value ${location} is an not a function or react element`,\n                realm.currentLocation,\n                \"PP0033\",\n                \"Warning\"\n              )\n            );\n            if (result !== \"Recover\") throw new FatalError();\n            else return realm.intrinsics.undefined;\n          }\n          return value;\n        }\n      ),\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    })\n  );\n\n  if (realm.react.enabled) {\n    global.$DefineOwnProperty(\n      \"__reactComponentTrees\",\n      new PropertyDescriptor({\n        value: new ObjectValue(\n          realm,\n          realm.intrinsics.ObjectPrototype,\n          \"__reactComponentTrees\",\n          /* refuseSerialization */ true\n        ),\n        writable: true,\n        enumerable: false,\n        configurable: true,\n      })\n    );\n    let reactComponentRootUid = 0;\n    global.$DefineOwnProperty(\n      \"__optimizeReactComponentTree\",\n      new PropertyDescriptor({\n        value: new NativeFunctionValue(\n          realm,\n          \"global.__optimizeReactComponentTree\",\n          \"__optimizeReactComponentTree\",\n          0,\n          (context, [component, config]) => {\n            let hasValidComponent =\n              component instanceof ECMAScriptSourceFunctionValue ||\n              component instanceof BoundFunctionValue ||\n              valueIsKnownReactAbstraction(realm, component);\n            let hasValidConfig =\n              config instanceof ObjectValue || config === realm.intrinsics.undefined || config === undefined;\n\n            if (!hasValidComponent || !hasValidConfig) {\n              let diagnostic = new CompilerDiagnostic(\n                \"__optimizeReactComponentTree(rootComponent, config) has been called with invalid arguments\",\n                realm.currentLocation,\n                \"PP0024\",\n                \"FatalError\"\n              );\n              realm.handleError(diagnostic);\n              if (realm.handleError(diagnostic) === \"Fail\") throw new FatalError();\n            }\n            let reactComponentTree = new ObjectValue(realm, realm.intrinsics.ObjectPrototype);\n            reactComponentTree.$Set(\"rootComponent\", component, reactComponentTree);\n            reactComponentTree.$Set(\"config\", config || realm.intrinsics.undefined, reactComponentTree);\n\n            realm.assignToGlobal(\n              t.memberExpression(\n                t.memberExpression(t.identifier(\"global\"), t.identifier(\"__reactComponentTrees\")),\n                t.identifier(\"\" + reactComponentRootUid++)\n              ),\n              reactComponentTree\n            );\n            return component;\n          }\n        ),\n        writable: true,\n        enumerable: false,\n        configurable: true,\n      })\n    );\n  }\n\n  global.$DefineOwnProperty(\n    \"__evaluatePureFunction\",\n    new PropertyDescriptor({\n      value: new NativeFunctionValue(\n        realm,\n        \"global.__evaluatePureFunction\",\n        \"__evaluatePureFunction\",\n        0,\n        (context, [functionValue, callback]) => {\n          invariant(functionValue instanceof ECMAScriptSourceFunctionValue);\n          invariant(typeof functionValue.$Call === \"function\");\n          let functionCall: Function = functionValue.$Call;\n          return realm.evaluatePure(\n            () => functionCall(realm.intrinsics.undefined, []),\n            /*bubbles*/ true,\n            /*reportSideEffectFunc*/ callback === undefined || callback === realm.intrinsics.undefined\n              ? null\n              : () => {\n                  invariant(callback instanceof ECMAScriptSourceFunctionValue);\n                  let call = callback.$Call;\n                  invariant(call !== undefined);\n                  call(realm.intrinsics.undefined, []);\n                }\n          );\n        }\n      ),\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    })\n  );\n\n  // Maps from initialized moduleId to exports object\n  // NB: Changes to this shouldn't ever be serialized\n  global.$DefineOwnProperty(\n    \"__initializedModules\",\n    new PropertyDescriptor({\n      value: new ObjectValue(\n        realm,\n        realm.intrinsics.ObjectPrototype,\n        \"__initializedModules\",\n        /* refuseSerialization */ true\n      ),\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    })\n  );\n\n  // Set of property bindings whose invariant got checked\n  // NB: Changes to this shouldn't ever be serialized\n  global.$DefineOwnProperty(\n    \"__checkedBindings\",\n    new PropertyDescriptor({\n      value: new ObjectValue(\n        realm,\n        realm.intrinsics.ObjectPrototype,\n        \"__checkedBindings\",\n        /* refuseSerialization */ true\n      ),\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    })\n  );\n\n  // Helper function used to instantiate a residual function\n  function createNativeFunctionForResidualCall(unsafe: boolean): NativeFunctionValue {\n    return new NativeFunctionValue(\n      realm,\n      \"global.__residual\",\n      \"__residual\",\n      2,\n      (context, [typeNameOrTemplate, f, ...args]) => {\n        if (!realm.useAbstractInterpretation) {\n          throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"realm is not partial\");\n        }\n\n        let { type, template } = parseTypeNameOrTemplate(realm, typeNameOrTemplate);\n\n        if (!Value.isTypeCompatibleWith(f.constructor, FunctionValue)) {\n          throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"cannot determine residual function\");\n        }\n        invariant(f instanceof FunctionValue);\n        f.isResidual = true;\n        if (unsafe) f.isUnsafeResidual = true;\n        let result = AbstractValue.createTemporalFromBuildFunction(\n          realm,\n          type,\n          [f].concat(args),\n          createOperationDescriptor(\"RESIDUAL_CALL\")\n        );\n        if (template) {\n          invariant(\n            result instanceof AbstractValue,\n            \"the nested properties should only be rebuilt for an abstract value\"\n          );\n          template.makePartial();\n          result.values = new ValuesDomain(new Set([template]));\n          invariant(realm.generator);\n          realm.rebuildNestedProperties(result, result.getIdentifier());\n        }\n        return result;\n      }\n    );\n  }\n\n  function createNativeFunctionForResidualInjection(\n    name: string,\n    initializeAndValidateArgs: (Array<Value>) => void,\n    operationDescriptor: OperationDescriptor,\n    numArgs: number\n  ): NativeFunctionValue {\n    return new NativeFunctionValue(realm, \"global.\" + name, name, numArgs, (context, ciArgs) => {\n      initializeAndValidateArgs(ciArgs);\n      invariant(realm.generator !== undefined);\n      realm.generator.emitStatement(ciArgs, operationDescriptor);\n      return realm.intrinsics.undefined;\n    });\n  }\n\n  // Helper function that specifies a dynamic invariant that cannot be evaluated at prepack time, and needs code to\n  // be injected into the serialized output.\n  global.$DefineOwnProperty(\n    \"__assume\",\n    new PropertyDescriptor({\n      value: createNativeFunctionForResidualInjection(\n        \"__assume\",\n        ([c, s]): void => {\n          if (!c.mightBeTrue()) {\n            let error = new CompilerDiagnostic(\n              `Assumed condition cannot hold`,\n              realm.currentLocation,\n              \"PP0040\",\n              \"FatalError\"\n            );\n            realm.handleError(error);\n            throw new FatalError();\n          }\n          Path.pushAndRefine(c);\n        },\n        createOperationDescriptor(\"ASSUME_CALL\"),\n        2\n      ),\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    })\n  );\n\n  // Helper function for Prepack developers inspect a value\n  // when interpreting a particular node in the AST.\n  global.$DefineOwnProperty(\n    \"__debugValue\",\n    new PropertyDescriptor({\n      value: createNativeFunctionForResidualInjection(\n        \"__debugValue\",\n        ([v, s]): void => {\n          debugger; // eslint-disable-line no-debugger\n        },\n        createOperationDescriptor(\"NOOP\"),\n        2\n      ),\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    })\n  );\n\n  // Helper function that identifies a computation that must remain part of the residual program and cannot be partially evaluated,\n  // e.g. because it contains a loop over abstract values.\n  // __residual(typeNameOrTemplate, function, arg0, arg1, ...) creates a new abstract value\n  // that is computed by invoking function(arg0, arg1, ...) in the residual program and\n  // where typeNameOrTemplate either either 'string', 'boolean', 'number', 'object', or an actual object defining known properties.\n  // The function must not have side effects, and it must not access any state (besides the supplied arguments).\n  global.$DefineOwnProperty(\n    \"__residual\",\n    new PropertyDescriptor({\n      value: createNativeFunctionForResidualCall(false),\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    })\n  );\n\n  // Helper function that identifies a variant of the residual function that has implicit dependencies. This version of residual will infer the dependencies\n  // and rewrite the function body to do the same thing as the original residual function.\n  global.$DefineOwnProperty(\n    \"__residual_unsafe\",\n    new PropertyDescriptor({\n      value: createNativeFunctionForResidualCall(true),\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    })\n  );\n\n  // Internal helper function for tests.\n  // __isAbstract(value) checks if a given value is abstract.\n  global.$DefineOwnProperty(\n    \"__isAbstract\",\n    new PropertyDescriptor({\n      value: new NativeFunctionValue(realm, \"global.__isAbstract\", \"__isAbstract\", 1, (context, [value]) => {\n        return new BooleanValue(realm, value instanceof AbstractValue);\n      }),\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    })\n  );\n\n  // __makePartial(object) marks an (abstract) object as partial.\n  global.$DefineOwnProperty(\n    \"__makePartial\",\n    new PropertyDescriptor({\n      value: new NativeFunctionValue(realm, \"global.__makePartial\", \"__makePartial\", 1, (context, [object]) => {\n        if (object instanceof AbstractObjectValue || object instanceof ObjectValue) {\n          object.makePartial();\n          return object;\n        }\n        throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"not an (abstract) object\");\n      }),\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    })\n  );\n\n  global.$DefineOwnProperty(\n    \"__makeFinal\",\n    new PropertyDescriptor({\n      value: new NativeFunctionValue(realm, \"global.__makeFinal\", \"__makeFinal\", 1, (context, [object]) => {\n        if (object instanceof ObjectValue || (object instanceof AbstractObjectValue && !object.values.isTop())) {\n          object.makeFinal();\n          return object;\n        }\n        throw realm.createErrorThrowCompletion(\n          realm.intrinsics.TypeError,\n          \"not an object or abstract object value (non-top)\"\n        );\n      }),\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    })\n  );\n\n  // __makeSimple(object) marks an (abstract) object as one that has no getters or setters.\n  global.$DefineOwnProperty(\n    \"__makeSimple\",\n    new PropertyDescriptor({\n      value: new NativeFunctionValue(realm, \"global.__makeSimple\", \"__makeSimple\", 1, (context, [object, option]) => {\n        if (object instanceof AbstractObjectValue || object instanceof ObjectValue) {\n          object.makeSimple(option);\n          return object;\n        }\n        throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"not an (abstract) object\");\n      }),\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    })\n  );\n\n  // Helper function that emits a check whether a given object property has a particular value.\n  global.$DefineOwnProperty(\n    \"__assumeDataProperty\",\n    new PropertyDescriptor({\n      value: new NativeFunctionValue(\n        realm,\n        \"global.__assumeDataProperty\",\n        \"__assumeDataProperty\",\n        3,\n        (context, [object, propertyName, value, invariantOptions]) => {\n          if (!realm.useAbstractInterpretation) {\n            throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"realm is not partial\");\n          }\n\n          if (object instanceof AbstractObjectValue || object instanceof ObjectValue) {\n            let generator = realm.generator;\n            invariant(generator);\n\n            let key = To.ToStringPartial(realm, propertyName);\n\n            if (realm.emitConcreteModel) {\n              generator.emitConcreteModel(key, value);\n            } else if (realm.invariantLevel >= 1) {\n              let invariantOptionString = invariantOptions\n                ? To.ToStringPartial(realm, invariantOptions)\n                : \"FULL_INVARIANT\";\n              switch (invariantOptionString) {\n                // checks (!property in object || object.property === undefined)\n                case \"VALUE_DEFINED_INVARIANT\":\n                  generator.emitPropertyInvariant(object, key, value.mightBeUndefined() ? \"PRESENT\" : \"DEFINED\");\n                  break;\n                case \"SKIP_INVARIANT\":\n                  break;\n                case \"FULL_INVARIANT\":\n                  generator.emitFullInvariant((object: any), key, value);\n                  break;\n                default:\n                  invariant(false, \"Invalid invariantOption \" + invariantOptionString);\n              }\n              if (!realm.neverCheckProperty(object, key)) realm.markPropertyAsChecked(object, key);\n            }\n            realm.generator = undefined; // don't emit code during the following $Set call\n            // casting to due to Flow workaround above\n            (object: any).$Set(key, value, object);\n            realm.generator = generator;\n            if (object.intrinsicName) realm.rebuildObjectProperty(object, key, value, object.intrinsicName);\n            return context.$Realm.intrinsics.undefined;\n          }\n\n          throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"not an (abstract) object\");\n        }\n      ),\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    })\n  );\n\n  // Helper function that replaces the implementation of a source function with\n  // the details from another source function body, including the captured\n  // environment, the actual code, etc.\n  // This realizes a form of monkey-patching, enabling mocking a function if\n  // one doesn't control all existing references to that function,\n  // or if the storage location to those references cannot be easily updated.\n  // NOTE: This function affects un-tracked state, so care must be taken\n  // that this helper function is executed at the right time; typically, one\n  // would want to execute this function before any call is executed to that\n  // function. Care must be taken not to make reachable conditionally\n  // defined values. Because of this limitations, this helper function\n  // should be considered only as a last resort.\n  global.$DefineOwnProperty(\n    \"__replaceFunctionImplementation_unsafe\",\n    new PropertyDescriptor({\n      value: new NativeFunctionValue(\n        realm,\n        \"global.__replaceFunctionImplementation_unsafe\",\n        \"__replaceFunctionImplementation_unsafe\",\n        2,\n        (context, [target, source]) => {\n          if (!(target instanceof ECMAScriptSourceFunctionValue)) {\n            throw realm.createErrorThrowCompletion(\n              realm.intrinsics.TypeError,\n              \"first argument is not a function with source code\"\n            );\n          }\n          if (!(source instanceof ECMAScriptSourceFunctionValue)) {\n            throw realm.createErrorThrowCompletion(\n              realm.intrinsics.TypeError,\n              \"second argument is not a function with source code\"\n            );\n          }\n\n          // relevant properties for functionValue\n          target.$Environment = source.$Environment;\n          target.$ScriptOrModule = source.$ScriptOrModule;\n\n          // properties for ECMAScriptFunctionValue\n          target.$ConstructorKind = source.$ConstructorKind;\n          target.$ThisMode = source.$ThisMode;\n          target.$HomeObject = source.$HomeObject;\n          target.$FunctionKind = source.$FunctionKind;\n\n          // properties for ECMAScriptSourceFunctionValue\n          target.$Strict = source.$Strict;\n          target.$FormalParameters = source.$FormalParameters;\n          target.$ECMAScriptCode = source.$ECMAScriptCode;\n          target.$HasComputedName = source.$HasComputedName;\n          target.$HasEmptyConstructor = source.$HasEmptyConstructor;\n          target.loc = source.loc;\n\n          return context.$Realm.intrinsics.undefined;\n        }\n      ),\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    })\n  );\n\n  global.$DefineOwnProperty(\n    \"__IntrospectionError\",\n    new PropertyDescriptor({\n      value: realm.intrinsics.__IntrospectionError,\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    })\n  );\n\n  global.$DefineOwnProperty(\n    \"__isIntegral\",\n    new PropertyDescriptor({\n      value: new NativeFunctionValue(realm, \"global.__isIntegral\", \"__isIntegral\", 1, (context, [value]) => {\n        return new BooleanValue(realm, value instanceof IntegralValue);\n      }),\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    })\n  );\n\n  global.$DefineOwnProperty(\n    \"__describe\",\n    new PropertyDescriptor({\n      value: new NativeFunctionValue(realm, \"global.__describe\", \"__describe\", 1, (context, [value]) => {\n        return new StringValue(realm, describeValue(value));\n      }),\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    })\n  );\n\n  global.$DefineOwnProperty(\n    \"__fatal\",\n    new PropertyDescriptor({\n      value: new NativeFunctionValue(realm, \"global.__fatal\", \"__fatal\", 0, (context, []) => {\n        throw new FatalError();\n      }),\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    })\n  );\n\n  global.$DefineOwnProperty(\n    \"__eagerlyRequireModuleDependencies\",\n    new PropertyDescriptor({\n      value: new NativeFunctionValue(\n        realm,\n        \"global.__eagerlyRequireModuleDependencies\",\n        \"__eagerlyRequireModuleDependencies\",\n        1,\n        (context, [functionValue]) => {\n          if (!IsCallable(realm, functionValue) || !(functionValue instanceof FunctionValue))\n            throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"argument must be callable function\");\n          let functionCall: void | ((thisArgument: Value, argumentsList: Array<Value>) => Value) = functionValue.$Call;\n          if (typeof functionCall !== \"function\") {\n            throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"argument must be directly callable\");\n          }\n          let old = realm.eagerlyRequireModuleDependencies;\n          realm.eagerlyRequireModuleDependencies = true;\n          try {\n            return functionCall(realm.intrinsics.undefined, []);\n          } finally {\n            realm.eagerlyRequireModuleDependencies = old;\n          }\n        }\n      ),\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    })\n  );\n}\n"],"file":"global.js"}