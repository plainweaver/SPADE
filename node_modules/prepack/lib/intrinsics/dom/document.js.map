{"version":3,"sources":["../../../src/intrinsics/dom/document.js"],"names":["functions","realm","document","ObjectValue","intrinsics","ObjectPrototype","useAbstractInterpretation","name","func","Properties","Set","body","abstractObject","AbstractObjectValue"],"mappings":";;;;;;;AAYA;;AACA;;AACA;;AACA;;;;AAfA;;;;;;;;;AASA;AAQA,MAAMA,SAAS,GAAG,CAChB,gBADgB,EAEhB,iBAFgB,EAGhB,uBAHgB,EAIhB,kBAJgB,EAKhB,qBALgB,EAMhB,uBANgB,EAOhB,eAPgB,EAQhB,kBARgB,EAShB,eATgB,EAUhB,wBAVgB,EAWhB,gBAXgB,CAAlB;;AAce,kBAASC,KAAT,EAA4C;AACzD;AACA,MAAIC,QAAQ,GAAG,IAAIC,kBAAJ,CAAgBF,KAAhB,EAAuBA,KAAK,CAACG,UAAN,CAAiBC,eAAxC,EAAyD,UAAzD,EAAqE,KAArE,CAAf,CAFyD,CAIzD;;AACA,MAAIJ,KAAK,CAACK,yBAAV,EAAqC;AACnC;AACA,SAAK,IAAIC,IAAT,IAAiBP,SAAjB,EAA4B;AAC1B,UAAIQ,IAAI,GAAG,2BAAeP,KAAf,EAAsB,UAAtB,EAAmC,YAAWM,IAAK,EAAnD,CAAX;;AACAE,6BAAWC,GAAX,CAAeT,KAAf,EAAsBC,QAAtB,EAAgCK,IAAhC,EAAsCC,IAAtC,EAA4C,KAA5C;AACD,KALkC,CAOnC;;;AACA,QAAIG,IAAI,GAAG,IAAIR,kBAAJ,CAAgBF,KAAhB,EAAuBA,KAAK,CAACG,UAAN,CAAiBC,eAAxC,EAAyD,eAAzD,CAAX;;AACAI,2BAAWC,GAAX,CAAeT,KAAf,EAAsBC,QAAtB,EAAgC,MAAhC,EAAwCS,IAAxC,EAA8C,KAA9C,EATmC,CAWnC;;;AACA,QAAIC,cAAc,GAAG,2BAAeX,KAAf,EAAsBC,QAAtB,EAAgC,UAAhC,CAArB;AACA,4BAAUU,cAAc,YAAYC,0BAApC;AACA,WAAOD,cAAP;AACD;;AACD,SAAOV,QAAP;AACD","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow strict-local */\n\nimport type { Realm } from \"../../realm.js\";\nimport { ObjectValue, AbstractObjectValue } from \"../../values/index.js\";\nimport { createAbstract } from \"../prepack/utils.js\";\nimport { Properties } from \"../../singletons.js\";\nimport invariant from \"../../invariant\";\n\nconst functions = [\n  \"getElementById\",\n  \"getElementByTag\",\n  \"getElementByClassName\",\n  \"getElementByName\",\n  \"getElementByTagName\",\n  \"getElementByTagNameNS\",\n  \"querySelector\",\n  \"querySelectorAll\",\n  \"createElement\",\n  \"createDocumentFragment\",\n  \"createTextNode\",\n];\n\nexport default function(realm: Realm): AbstractObjectValue {\n  // document object\n  let document = new ObjectValue(realm, realm.intrinsics.ObjectPrototype, \"document\", false);\n\n  // check if we can use abstracts\n  if (realm.useAbstractInterpretation) {\n    // common methods on document\n    for (let name of functions) {\n      let func = createAbstract(realm, \"function\", `document.${name}`);\n      Properties.Set(realm, document, name, func, false);\n    }\n\n    // document.body\n    let body = new ObjectValue(realm, realm.intrinsics.ObjectPrototype, \"document.body\");\n    Properties.Set(realm, document, \"body\", body, false);\n\n    // make abstract\n    let abstractObject = createAbstract(realm, document, \"document\");\n    invariant(abstractObject instanceof AbstractObjectValue);\n    return abstractObject;\n  }\n  return document;\n}\n"],"file":"document.js"}