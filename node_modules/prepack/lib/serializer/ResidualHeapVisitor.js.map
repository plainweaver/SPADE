{"version":3,"sources":["../../src/serializer/ResidualHeapVisitor.js"],"names":["ResidualHeapVisitor","constructor","realm","logger","modules","additionalFunctionValuesAndEffects","useAbstractInterpretation","declarativeEnvironmentRecordsBindings","Map","globalBindings","functionInfos","classMethodInstances","functionInstances","values","conditionalFeasibility","generator","scope","globalGenerator","inspector","HeapInspector","referencedDeclaredValues","delayedActions","equivalenceSet","HashSet","additionalFunctionValueInfos","functionToCapturedScopes","environment","$GlobalEnv","environmentRecord","GlobalEnvironmentRecord","globalEnvironmentRecord","additionalGeneratorRoots","residualReactElementVisitor","ResidualReactElementVisitor","generatorTree","GeneratorTree","_getCommonScope","s","Generator","getParent","FunctionValue","has","getCreator","_getAdditionalFunctionOfScope","undefined","_registerAdditionalRoot","value","creationGenerator","additionalFunction","targetAdditionalFunction","usageScope","additionalFVEffects","get","additionalRoots","add","_visitInUnrelatedScope","anyRelevantEffects","g","set","Set","effectsToApply","pb","modifiedProperties","keys","object","_withScope","f","oldScope","_enqueueWithUnrelatedScope","action","defaultEquivalenceSet","save","saveEquivalenceSet","originalAction","loadEquivalenceSet","push","val","scopes","visitValue","visitObjectProperty","binding","desc","descriptor","obj","key","AbstractObjectValue","canIgnoreProperty","visitDescriptor","Value","visitObjectProperties","kind","skipPrototype","temporalAlias","symbol","propertyBinding","symbols","propertyBindingKey","propertyBindingValue","properties","ECMAScriptFunctionValue","$FunctionKind","ClassPropertiesToIgnore","pathNode","ArrayValue","mightNotBeLeakedObject","PropertyDescriptor","unknownProperty","visitObjectPropertiesWithComputedNamesDescriptor","visitObjectPrototype","visitConstructorPrototype","ObjectValue","proto","$Prototype","getKind","intrinsics","$IsClassPrototype","null","func","prototype","getPropertyValue","originalConstructor","isDefaultPrototype","AbstractValue","visitObjectPropertiesWithComputedNames","AbstractJoinedDescriptor","joinCondition","descriptor1","descriptor2","absVal","cond","args","P","V","earlier_props","visitEquivalentValue","consequent","alternate","visitValueArray","lenProperty","mightBeLeakedObject","evaluateWithoutLeakLogic","initialLength","lengthAssignmentNotNeeded","To","ToLength","visitValueMap","entries","$MapData","len","length","i","entry","$Key","$Value","visitValueWeakMap","$WeakMapData","fixpoint_rerun","progress","visitValueSet","$SetData","visitValueWeakSet","$WeakSetData","visitValueFunction","isClass","ECMAScriptSourceFunctionValue","homeObject","$HomeObject","BoundFunctionValue","$BoundTargetFunction","$BoundThis","boundArg","$BoundArguments","NativeFunctionValue","formalParameters","$FormalParameters","code","$ECMAScriptCode","functionInfo","residualFunctionBindings","initializationStatements","functionValue","scopeInstances","depth","lexicalDepth","unbound","requireCalls","modified","usesArguments","usesThis","state","getModuleIdIfNodeIsRequireFunction","getGetModuleIdIfNodeIsRequireFunction","t","file","program","expressionStatement","functionExpression","ClosureRefVisitor","traverse","cache","clear","isResidual","size","isUnsafeResidual","logError","loc","Object","join","additionalFunctionEffects","_visitAdditionalFunction","innerName","resolveBinding","residualBinding","getBinding","visitBinding","_visitClass","_visitBindingHelper","residualFunctionBinding","hasLeaked","declarativeEnvironmentRecord","DeclarativeEnvironmentRecord","bindings","name","deletable","initialized","refScope","potentialReferentializationScopes","funcToScopes","envRec","bindingState","capturedBindings","capturingScopes","capturingScope","doesNotMatter","reference","tryQuery","Environment","ResolveBinding","$Environment","IsUnresolvableReference","base","$DeclarativeRecord","referencedBase","referencedName","hasBinding","getGlobalLetBinding","classFunc","classPrototype","visitClassMethod","propertyNameOrSymbol","methodFunc","methodType","isStatic","_visitClassMethod","propertyName","method","$HasEmptyConstructor","visitClassProperty","constructorFunc","classSuperNode","classMethodIsStatic","classMethodKeyNode","classMethodComputed","$HasComputedName","visitValueObject","isValid","visitReactElement","dateValue","$DateValue","buf","$ViewedArrayBuffer","react","enabled","fbLibraries","visitValueSymbol","$Description","visitValueProxy","$ProxyTarget","$ProxyHandler","_visitAbstractValueConditional","condition","cf","feasibleT","feasibleF","savedPath","pathConditions","impliesT","Path","implies","impliesF","impliesNot","visitedT","visitedF","visitAbstractValue","n","preProcessValue","_mark","postProcessValue","equivalentValue","equivalentReactElementValue","reactElementEquivalenceSet","equivalentReactPropsValue","reactPropsEquivalenceSet","refuseSerialization","isIntrinsic","isScopedTemplate","EmptyValue","isLeaf","ProxyValue","commonScope","SymbolValue","createGeneratorVisitCallbacks","additionalFunctionInfo","callbacks","bind","visitGenerator","parent","canOmit","recordDeclaration","recordDelayedEntry","visit","visitModifiedProperty","internalSlot","error","CompilerDiagnostic","expressionLocation","handleError","FatalError","visitModifiedBinding","modifiedBinding","funcInstance","instance","newValue","otherFunc","additionalFunctionOverridesValue","otherNameVal","_SafeGetDataPropertyValue","otherNameStr","StringValue","funcNameVal","funNameStr","$Realm","modifiedBindings","visitBindingAssignment","additionalEffects","visitor","prelude","effectsGenerator","withCleanEquivalenceSet","visitRoots","moduleValue","initializedModules","_visitUntilFixpoint","verbose","logInformation","actionsByGenerator","expected","a","effectsInfos","topEffectsRunners","actual","scopedActions","runGeneratorAction","visited","newNestedRunner","info","runner","withEffectsAppliedInGlobalEnv","nestedEffectsRunner","nestedEffectsRunners","topEffectsRunner","toInfo"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport { GlobalEnvironmentRecord, DeclarativeEnvironmentRecord, EnvironmentRecord } from \"../environment.js\";\nimport { CompilerDiagnostic, FatalError } from \"../errors.js\";\nimport { type Effects, Realm } from \"../realm.js\";\nimport { Path } from \"../singletons.js\";\nimport type { Descriptor, PropertyBinding, ObjectKind } from \"../types.js\";\nimport type { Binding } from \"../environment.js\";\nimport { HashSet, IsArray, Get } from \"../methods/index.js\";\nimport {\n  AbstractObjectValue,\n  AbstractValue,\n  ArrayValue,\n  BoundFunctionValue,\n  ECMAScriptFunctionValue,\n  ECMAScriptSourceFunctionValue,\n  EmptyValue,\n  FunctionValue,\n  NativeFunctionValue,\n  ObjectValue,\n  ProxyValue,\n  StringValue,\n  SymbolValue,\n  Value,\n} from \"../values/index.js\";\nimport { describeLocation } from \"../intrinsics/ecma262/Error.js\";\nimport * as t from \"@babel/types\";\nimport type { BabelNodeBlockStatement } from \"@babel/types\";\nimport { Generator } from \"../utils/generator.js\";\nimport type { GeneratorEntry, VisitEntryCallbacks } from \"../utils/generator.js\";\nimport traverse from \"@babel/traverse\";\nimport invariant from \"../invariant.js\";\nimport type {\n  AdditionalFunctionEffects,\n  AdditionalFunctionInfo,\n  ClassMethodInstance,\n  FunctionInfo,\n  FunctionInstance,\n  ResidualFunctionBinding,\n  ReferentializationScope,\n  Scope,\n  ResidualHeapInfo,\n} from \"./types.js\";\nimport { ClosureRefVisitor } from \"./visitors.js\";\nimport { Logger } from \"../utils/logger.js\";\nimport { Modules } from \"../utils/modules.js\";\nimport { HeapInspector } from \"../utils/HeapInspector.js\";\nimport {\n  canIgnoreClassLengthProperty,\n  ClassPropertiesToIgnore,\n  getObjectPrototypeMetadata,\n  getOrDefault,\n  getSuggestedArrayLiteralLength,\n  withDescriptorValue,\n} from \"./utils.js\";\nimport { createPathConditions, Environment, To } from \"../singletons.js\";\nimport { isReactElement, isReactPropsObject, valueIsReactLibraryObject } from \"../react/utils.js\";\nimport { ResidualReactElementVisitor } from \"./ResidualReactElementVisitor.js\";\nimport { GeneratorTree } from \"./GeneratorTree.js\";\nimport { PropertyDescriptor, AbstractJoinedDescriptor } from \"../descriptors.js\";\n\ntype BindingState = {|\n  capturedBindings: Set<ResidualFunctionBinding>,\n  capturingScopes: Set<Scope>,\n|};\n\n/* This class visits all values that are reachable in the residual heap.\n   In particular, this \"filters out\" values that are:\n   - captured by a DeclarativeEnvironmentRecord, but not actually used by any closure.\n   - Unmodified prototype objects\n   TODO #680: Figure out minimal set of values that need to be kept alive for WeakSet and WeakMap instances.\n*/\nexport class ResidualHeapVisitor {\n  constructor(\n    realm: Realm,\n    logger: Logger,\n    modules: Modules,\n    additionalFunctionValuesAndEffects: Map<FunctionValue, AdditionalFunctionEffects>\n  ) {\n    invariant(realm.useAbstractInterpretation);\n    this.realm = realm;\n    this.logger = logger;\n    this.modules = modules;\n\n    this.declarativeEnvironmentRecordsBindings = new Map();\n    this.globalBindings = new Map();\n    this.functionInfos = new Map();\n    this.classMethodInstances = new Map();\n    this.functionInstances = new Map();\n    this.values = new Map();\n    this.conditionalFeasibility = new Map();\n    let generator = this.realm.generator;\n    invariant(generator);\n    this.scope = this.globalGenerator = generator;\n    this.inspector = new HeapInspector(realm, logger);\n    this.referencedDeclaredValues = new Map();\n    this.delayedActions = [];\n    this.additionalFunctionValuesAndEffects = additionalFunctionValuesAndEffects;\n    this.equivalenceSet = new HashSet();\n    this.additionalFunctionValueInfos = new Map();\n    this.functionToCapturedScopes = new Map();\n    let environment = realm.$GlobalEnv.environmentRecord;\n    invariant(environment instanceof GlobalEnvironmentRecord);\n    this.globalEnvironmentRecord = environment;\n    this.additionalGeneratorRoots = new Map();\n    this.residualReactElementVisitor = new ResidualReactElementVisitor(this.realm, this);\n    this.generatorTree = new GeneratorTree();\n  }\n\n  realm: Realm;\n  logger: Logger;\n  modules: Modules;\n  globalGenerator: Generator;\n\n  // Caches that ensure one ResidualFunctionBinding exists per (record, name) pair\n  declarativeEnvironmentRecordsBindings: Map<DeclarativeEnvironmentRecord, Map<string, ResidualFunctionBinding>>;\n  globalBindings: Map<string, ResidualFunctionBinding>;\n\n  functionToCapturedScopes: Map<ReferentializationScope, Map<DeclarativeEnvironmentRecord, BindingState>>;\n  functionInfos: Map<BabelNodeBlockStatement, FunctionInfo>;\n  scope: Scope;\n  values: Map<Value, Set<Scope>>;\n\n  // For every abstract value of kind \"conditional\", this map keeps track of whether the consequent and/or alternate is feasible in any scope\n  conditionalFeasibility: Map<AbstractValue, { t: boolean, f: boolean }>;\n  inspector: HeapInspector;\n  referencedDeclaredValues: Map<Value, void | FunctionValue>;\n  delayedActions: Array<{| scope: Scope, action: () => void | boolean |}>;\n  additionalFunctionValuesAndEffects: Map<FunctionValue, AdditionalFunctionEffects>;\n  functionInstances: Map<FunctionValue, FunctionInstance>;\n  additionalFunctionValueInfos: Map<FunctionValue, AdditionalFunctionInfo>;\n  equivalenceSet: HashSet<AbstractValue>;\n  classMethodInstances: Map<FunctionValue, ClassMethodInstance>;\n  // Parents will always be a generator, optimized function value or \"GLOBAL\"\n  additionalGeneratorRoots: Map<Generator, Set<ObjectValue>>;\n  generatorTree: GeneratorTree;\n  globalEnvironmentRecord: GlobalEnvironmentRecord;\n  residualReactElementVisitor: ResidualReactElementVisitor;\n\n  // Going backwards from the current scope, find either the containing\n  // additional function, or if there isn't one, return the global generator.\n  _getCommonScope(): FunctionValue | Generator {\n    let s = this.scope;\n    while (true) {\n      if (s instanceof Generator) s = this.generatorTree.getParent(s);\n      else if (s instanceof FunctionValue) {\n        // Did we find an additional function?\n        if (this.additionalFunctionValuesAndEffects.has(s)) return s;\n\n        // Did the function itself get created by a generator we can chase?\n        s = this.generatorTree.getCreator(s) || \"GLOBAL\";\n      } else {\n        invariant(s === \"GLOBAL\");\n        let generator = this.globalGenerator;\n        invariant(generator);\n        return generator;\n      }\n    }\n    invariant(false);\n  }\n\n  // If the current scope has a containing additional function, retrieve it.\n  _getAdditionalFunctionOfScope(): FunctionValue | void {\n    let s = this._getCommonScope();\n    return s instanceof FunctionValue ? s : undefined;\n  }\n\n  // When a value has been created by some generator that is unrelated\n  // to the current common scope, visit the value in the scope it was\n  // created --- this causes the value later to be serialized in its\n  // creation scope, ensuring that the value has the right creation / life time.\n  _registerAdditionalRoot(value: ObjectValue): void {\n    let creationGenerator = this.generatorTree.getCreator(value) || this.globalGenerator;\n\n    let additionalFunction = this._getAdditionalFunctionOfScope() || \"GLOBAL\";\n    let targetAdditionalFunction;\n    if (creationGenerator === this.globalGenerator) {\n      targetAdditionalFunction = \"GLOBAL\";\n    } else {\n      let s = creationGenerator;\n      while (s instanceof Generator) {\n        s = this.generatorTree.getParent(s);\n        invariant(s !== undefined);\n      }\n      invariant(s === \"GLOBAL\" || s instanceof FunctionValue);\n      targetAdditionalFunction = s;\n    }\n\n    let usageScope;\n    if (additionalFunction === targetAdditionalFunction) {\n      usageScope = this.scope;\n    } else {\n      // Object was created outside of current additional function scope\n      invariant(additionalFunction instanceof FunctionValue);\n      let additionalFVEffects = this.additionalFunctionValuesAndEffects.get(additionalFunction);\n      invariant(additionalFVEffects !== undefined);\n      additionalFVEffects.additionalRoots.add(value);\n\n      this._visitInUnrelatedScope(creationGenerator, value);\n      usageScope = this.generatorTree.getCreator(value) || this.globalGenerator;\n    }\n\n    usageScope = this.scope;\n    if (usageScope instanceof Generator) {\n      // Also check if object is used in some nested generator scope that involved\n      // applying effects; if so, store additional information that the serializer\n      // can use to proactive serialize such objects from within the right generator\n      let anyRelevantEffects = false;\n      for (let g = usageScope; g instanceof Generator; g = this.generatorTree.getParent(g)) {\n        if (g === creationGenerator) {\n          if (anyRelevantEffects) {\n            let s = this.additionalGeneratorRoots.get(g);\n            if (s === undefined) this.additionalGeneratorRoots.set(g, (s = new Set()));\n            if (!s.has(value)) {\n              s.add(value);\n              this._visitInUnrelatedScope(g, value);\n            }\n          }\n          break;\n        }\n        let effectsToApply = g.effectsToApply;\n        if (effectsToApply)\n          for (let pb of effectsToApply.modifiedProperties.keys())\n            if (pb.object === value) {\n              anyRelevantEffects = true;\n              break;\n            }\n      }\n    }\n  }\n\n  // Careful!\n  // Only use _withScope when you know that the currently applied effects makes sense for the given (nested) scope!\n  _withScope(scope: Scope, f: () => void): void {\n    let oldScope = this.scope;\n    this.scope = scope;\n    try {\n      f();\n    } finally {\n      this.scope = oldScope;\n    }\n  }\n\n  // Queues up an action to be later processed in some arbitrary scope.\n  _enqueueWithUnrelatedScope(scope: Scope, action: () => void | boolean): void {\n    // If we are in a zone with a non-default equivalence set (we are wrapped in a `withCleanEquivalenceSet` call) then\n    // we need to save our equivalence set so that we may load it before running our action.\n    if (this.residualReactElementVisitor.defaultEquivalenceSet === false) {\n      const save = this.residualReactElementVisitor.saveEquivalenceSet();\n      const originalAction = action;\n      action = () => this.residualReactElementVisitor.loadEquivalenceSet(save, originalAction);\n    }\n\n    this.delayedActions.push({ scope, action });\n  }\n\n  // Queues up visiting a value in some arbitrary scope.\n  _visitInUnrelatedScope(scope: Scope, val: Value): void {\n    let scopes = this.values.get(val);\n    if (scopes !== undefined && scopes.has(scope)) return;\n    this._enqueueWithUnrelatedScope(scope, () => this.visitValue(val));\n  }\n\n  visitObjectProperty(binding: PropertyBinding): void {\n    let desc = binding.descriptor;\n    let obj = binding.object;\n    invariant(binding.key !== undefined, \"Undefined keys should never make it here.\");\n    if (\n      obj instanceof AbstractObjectValue ||\n      !(typeof binding.key === \"string\" && this.inspector.canIgnoreProperty(obj, binding.key))\n    ) {\n      if (desc !== undefined) this.visitDescriptor(desc);\n    }\n    if (binding.key instanceof Value) this.visitValue(binding.key);\n  }\n\n  visitObjectProperties(obj: ObjectValue, kind?: ObjectKind): void {\n    // In non-instant render mode, properties of leaked objects are generated via assignments\n    let { skipPrototype, constructor } = getObjectPrototypeMetadata(this.realm, obj);\n    if (obj.temporalAlias !== undefined) return;\n\n    // visit properties\n    for (let [symbol, propertyBinding] of obj.symbols) {\n      invariant(propertyBinding);\n      let desc = propertyBinding.descriptor;\n      if (desc === undefined) continue; //deleted\n      this.visitDescriptor(desc);\n      this.visitValue(symbol);\n    }\n\n    // visit properties\n    for (let [propertyBindingKey, propertyBindingValue] of obj.properties) {\n      // we don't want to visit these as we handle the serialization ourselves\n      // via a different logic route for classes\n      let descriptor = propertyBindingValue.descriptor;\n      if (\n        obj instanceof ECMAScriptFunctionValue &&\n        obj.$FunctionKind === \"classConstructor\" &&\n        (ClassPropertiesToIgnore.has(propertyBindingKey) ||\n          (propertyBindingKey === \"length\" && canIgnoreClassLengthProperty(obj, descriptor, this.logger)))\n      ) {\n        continue;\n      }\n      if (propertyBindingValue.pathNode !== undefined) continue; // property is written to inside a loop\n\n      // Leaked object. Properties are set via assignments\n      // TODO #2259: Make deduplication in the face of leaking work for custom accessors\n      if (\n        !(obj instanceof ArrayValue) &&\n        !obj.mightNotBeLeakedObject() &&\n        (descriptor instanceof PropertyDescriptor && (descriptor.get === undefined && descriptor.set === undefined))\n      ) {\n        continue;\n      }\n\n      this.visitObjectProperty(propertyBindingValue);\n    }\n\n    // inject properties with computed names\n    if (obj.unknownProperty !== undefined) {\n      this.visitObjectPropertiesWithComputedNamesDescriptor(obj.unknownProperty.descriptor);\n    }\n\n    // prototype\n    if (!skipPrototype) {\n      this.visitObjectPrototype(obj);\n    }\n    if (obj instanceof FunctionValue) {\n      this.visitConstructorPrototype(constructor ? constructor : obj);\n    } else if (obj instanceof ObjectValue && skipPrototype && constructor) {\n      this.visitValue(constructor);\n    }\n  }\n\n  visitObjectPrototype(obj: ObjectValue): void {\n    let proto = obj.$Prototype;\n\n    let kind = obj.getKind();\n    if (proto === this.realm.intrinsics[kind + \"Prototype\"]) return;\n\n    if (!obj.$IsClassPrototype || proto !== this.realm.intrinsics.null) {\n      this.visitValue(proto);\n    }\n  }\n\n  visitConstructorPrototype(func: Value): void {\n    // If the original prototype object was mutated,\n    // request its serialization here as this might be observable by\n    // residual code.\n    invariant(func instanceof FunctionValue);\n    let prototype = HeapInspector.getPropertyValue(func, \"prototype\");\n    if (\n      prototype instanceof ObjectValue &&\n      prototype.originalConstructor === func &&\n      !this.inspector.isDefaultPrototype(prototype)\n    ) {\n      this.visitValue(prototype);\n    }\n  }\n\n  visitObjectPropertiesWithComputedNamesDescriptor(desc: void | Descriptor): void {\n    if (desc !== undefined) {\n      if (desc instanceof PropertyDescriptor) {\n        let val = desc.value;\n        invariant(val instanceof AbstractValue);\n        this.visitObjectPropertiesWithComputedNames(val);\n      } else if (desc instanceof AbstractJoinedDescriptor) {\n        this.visitValue(desc.joinCondition);\n        this.visitObjectPropertiesWithComputedNamesDescriptor(desc.descriptor1);\n        this.visitObjectPropertiesWithComputedNamesDescriptor(desc.descriptor2);\n      } else {\n        invariant(false, \"unknown descriptor\");\n      }\n    }\n  }\n\n  visitObjectPropertiesWithComputedNames(absVal: AbstractValue): void {\n    if (absVal.kind === \"widened property\") return;\n    if (absVal.kind === \"template for prototype member expression\") return;\n    if (absVal.kind === \"conditional\") {\n      let cond = absVal.args[0];\n      invariant(cond instanceof AbstractValue);\n      if (cond.kind === \"template for property name condition\") {\n        let P = cond.args[0];\n        invariant(P instanceof AbstractValue);\n        let V = absVal.args[1];\n        let earlier_props = absVal.args[2];\n        if (earlier_props instanceof AbstractValue) this.visitObjectPropertiesWithComputedNames(earlier_props);\n        this.visitValue(P);\n        this.visitValue(V);\n      } else {\n        // conditional assignment\n        absVal.args[0] = this.visitEquivalentValue(cond);\n        let consequent = absVal.args[1];\n        if (consequent instanceof AbstractValue) {\n          this.visitObjectPropertiesWithComputedNames(consequent);\n        }\n        let alternate = absVal.args[2];\n        if (alternate instanceof AbstractValue) {\n          this.visitObjectPropertiesWithComputedNames(alternate);\n        }\n      }\n    } else {\n      this.visitValue(absVal);\n    }\n  }\n\n  visitDescriptor(desc: void | Descriptor): void {\n    if (desc === undefined) {\n    } else if (desc instanceof PropertyDescriptor) {\n      if (desc.value !== undefined) desc.value = this.visitEquivalentValue(desc.value);\n      if (desc.get !== undefined) this.visitValue(desc.get);\n      if (desc.set !== undefined) this.visitValue(desc.set);\n    } else if (desc instanceof AbstractJoinedDescriptor) {\n      desc.joinCondition = this.visitEquivalentValue(desc.joinCondition);\n      if (desc.descriptor1 !== undefined) this.visitDescriptor(desc.descriptor1);\n      if (desc.descriptor2 !== undefined) this.visitDescriptor(desc.descriptor2);\n    } else {\n      invariant(false, \"unknown descriptor\");\n    }\n  }\n\n  visitValueArray(val: ObjectValue): void {\n    this._registerAdditionalRoot(val);\n\n    this.visitObjectProperties(val);\n    const realm = this.realm;\n    let lenProperty;\n    if (val.mightBeLeakedObject()) {\n      lenProperty = this.realm.evaluateWithoutLeakLogic(() => Get(realm, val, \"length\"));\n    } else {\n      lenProperty = Get(realm, val, \"length\");\n    }\n    let [initialLength, lengthAssignmentNotNeeded] = getSuggestedArrayLiteralLength(realm, val);\n    if (lengthAssignmentNotNeeded) return;\n    if (\n      lenProperty instanceof AbstractValue\n        ? lenProperty.kind !== \"widened property\"\n        : To.ToLength(realm, lenProperty) !== initialLength\n    ) {\n      this.visitValue(lenProperty);\n    }\n  }\n\n  visitValueMap(val: ObjectValue): void {\n    invariant(val.getKind() === \"Map\");\n    let entries = val.$MapData;\n\n    invariant(entries !== undefined);\n    let len = entries.length;\n\n    for (let i = 0; i < len; i++) {\n      let entry = entries[i];\n      let key = entry.$Key;\n      let value = entry.$Value;\n      if (key === undefined || value === undefined) continue;\n      this.visitValue(key);\n      this.visitValue(value);\n    }\n  }\n\n  visitValueWeakMap(val: ObjectValue): void {\n    invariant(val.getKind() === \"WeakMap\");\n    let entries = val.$WeakMapData;\n\n    invariant(entries !== undefined);\n    let len = entries.length;\n\n    for (let i = 0; i < len; i++) {\n      let entry = entries[i];\n      let key = entry.$Key;\n      let value = entry.$Value;\n\n      if (key !== undefined && value !== undefined) {\n        let fixpoint_rerun = () => {\n          let progress;\n          if (this.values.has(key)) {\n            progress = true;\n            this.visitValue(key);\n            this.visitValue(value);\n          } else {\n            progress = false;\n            this._enqueueWithUnrelatedScope(this.scope, fixpoint_rerun);\n          }\n          return progress;\n        };\n        fixpoint_rerun();\n      }\n    }\n  }\n\n  visitValueSet(val: ObjectValue): void {\n    invariant(val.getKind() === \"Set\");\n\n    let entries = val.$SetData;\n    invariant(entries !== undefined);\n\n    let len = entries.length;\n    for (let i = 0; i < len; i++) {\n      let entry = entries[i];\n      if (entry === undefined) continue;\n      this.visitValue(entry);\n    }\n  }\n\n  visitValueWeakSet(val: ObjectValue): void {\n    invariant(val.getKind() === \"WeakSet\");\n\n    let entries = val.$WeakSetData;\n    invariant(entries !== undefined);\n\n    let len = entries.length;\n    for (let i = 0; i < len; i++) {\n      let entry = entries[i];\n      if (entry !== undefined) {\n        let fixpoint_rerun = () => {\n          let progress;\n          if (this.values.has(entry)) {\n            progress = true;\n            this.visitValue(entry);\n          } else {\n            progress = false;\n            this._enqueueWithUnrelatedScope(this.scope, fixpoint_rerun);\n          }\n          return progress;\n        };\n        fixpoint_rerun();\n      }\n    }\n  }\n\n  visitValueFunction(val: FunctionValue): void {\n    let isClass = false;\n\n    this._registerAdditionalRoot(val);\n    if (val instanceof ECMAScriptFunctionValue && val.$FunctionKind === \"classConstructor\") {\n      invariant(val instanceof ECMAScriptSourceFunctionValue);\n      let homeObject = val.$HomeObject;\n      if (homeObject instanceof ObjectValue && homeObject.$IsClassPrototype) {\n        isClass = true;\n      }\n    }\n    this.visitObjectProperties(val);\n\n    if (val instanceof BoundFunctionValue) {\n      this.visitValue(val.$BoundTargetFunction);\n      this.visitValue(val.$BoundThis);\n      for (let boundArg of val.$BoundArguments) this.visitValue(boundArg);\n      return;\n    }\n\n    invariant(!(val instanceof NativeFunctionValue), \"all native function values should be intrinsics\");\n\n    invariant(val instanceof ECMAScriptSourceFunctionValue);\n    invariant(val.constructor === ECMAScriptSourceFunctionValue);\n    let formalParameters = val.$FormalParameters;\n    let code = val.$ECMAScriptCode;\n\n    let functionInfo = this.functionInfos.get(code);\n    let residualFunctionBindings = new Map();\n    this.functionInstances.set(val, {\n      residualFunctionBindings,\n      initializationStatements: [],\n      functionValue: val,\n      scopeInstances: new Map(),\n    });\n\n    if (!functionInfo) {\n      functionInfo = {\n        depth: 0,\n        lexicalDepth: 0,\n        unbound: new Map(),\n        requireCalls: new Map(),\n        modified: new Set(),\n        usesArguments: false,\n        usesThis: false,\n      };\n      let state = {\n        functionInfo,\n        realm: this.realm,\n        getModuleIdIfNodeIsRequireFunction: this.modules.getGetModuleIdIfNodeIsRequireFunction(formalParameters, [val]),\n      };\n\n      traverse(\n        t.file(t.program([t.expressionStatement(t.functionExpression(null, formalParameters, code))])),\n        ClosureRefVisitor,\n        null,\n        state\n      );\n      traverse.cache.clear();\n      this.functionInfos.set(code, functionInfo);\n\n      if (val.isResidual && functionInfo.unbound.size) {\n        if (!val.isUnsafeResidual) {\n          this.logger.logError(\n            val,\n            `residual function ${describeLocation(this.realm, val, undefined, code.loc) ||\n              \"(unknown)\"} refers to the following identifiers defined outside of the local scope: ${Object.keys(\n              functionInfo.unbound\n            ).join(\", \")}`\n          );\n        }\n      }\n    }\n\n    let additionalFunctionEffects = this.additionalFunctionValuesAndEffects.get(val);\n    if (additionalFunctionEffects) {\n      this._visitAdditionalFunction(val, additionalFunctionEffects);\n    } else {\n      this._enqueueWithUnrelatedScope(val, () => {\n        invariant(this.scope === val);\n        invariant(functionInfo);\n        for (let innerName of functionInfo.unbound.keys()) {\n          let environment = this.resolveBinding(val, innerName);\n          let residualBinding = this.getBinding(environment, innerName);\n          this.visitBinding(val, residualBinding);\n          residualFunctionBindings.set(innerName, residualBinding);\n          if (functionInfo.modified.has(innerName)) residualBinding.modified = true;\n        }\n      });\n    }\n    if (isClass && val.$HomeObject instanceof ObjectValue) {\n      this._visitClass(val, val.$HomeObject);\n    }\n  }\n\n  _visitBindingHelper(residualFunctionBinding: ResidualFunctionBinding) {\n    if (residualFunctionBinding.hasLeaked) return;\n    let environment = residualFunctionBinding.declarativeEnvironmentRecord;\n    invariant(environment !== null);\n    if (residualFunctionBinding.value === undefined) {\n      // The first time we visit, we need to initialize the value to its equivalent value\n      invariant(environment instanceof DeclarativeEnvironmentRecord);\n      let binding = environment.bindings[residualFunctionBinding.name];\n      invariant(binding !== undefined);\n      invariant(!binding.deletable);\n      let value = (binding.initialized && binding.value) || this.realm.intrinsics.undefined;\n      residualFunctionBinding.value = this.visitEquivalentValue(value);\n    } else {\n      // Subsequently, we just need to visit the value.\n      this.visitValue(residualFunctionBinding.value);\n    }\n  }\n\n  // Addresses the case:\n  // let x = [];\n  // let y = [];\n  // function a() { x.push(\"hi\"); }\n  // function b() { y.push(\"bye\"); }\n  // function c() { return x.length + y.length; }\n  // Here we need to make sure that a and b both initialize x and y because x and y will be in the same\n  // captured scope because c captures both x and y.\n  visitBinding(scope: Scope, residualFunctionBinding: ResidualFunctionBinding): void {\n    let environment = residualFunctionBinding.declarativeEnvironmentRecord;\n    if (environment === null) return;\n    invariant(this.scope === scope);\n\n    let refScope = this._getAdditionalFunctionOfScope() || \"GLOBAL\";\n    residualFunctionBinding.potentialReferentializationScopes.add(refScope);\n    invariant(!(refScope instanceof Generator));\n    let funcToScopes = getOrDefault(this.functionToCapturedScopes, refScope, () => new Map());\n    let envRec = residualFunctionBinding.declarativeEnvironmentRecord;\n    invariant(envRec !== null);\n    let bindingState = getOrDefault(funcToScopes, envRec, () => ({\n      capturedBindings: new Set(),\n      capturingScopes: new Set(),\n    }));\n    // If the binding is new for this bindingState, have all functions capturing bindings from that scope visit it\n    if (!bindingState.capturedBindings.has(residualFunctionBinding)) {\n      for (let capturingScope of bindingState.capturingScopes) {\n        this._enqueueWithUnrelatedScope(capturingScope, () => this._visitBindingHelper(residualFunctionBinding));\n      }\n      bindingState.capturedBindings.add(residualFunctionBinding);\n    }\n    // If the function is new for this bindingState, visit all existent bindings in this scope\n    if (!bindingState.capturingScopes.has(scope)) {\n      invariant(this.scope === scope);\n      for (let residualBinding of bindingState.capturedBindings) this._visitBindingHelper(residualBinding);\n      bindingState.capturingScopes.add(scope);\n    }\n  }\n\n  resolveBinding(val: FunctionValue, name: string): EnvironmentRecord {\n    let doesNotMatter = true;\n    let reference = this.logger.tryQuery(\n      () => Environment.ResolveBinding(this.realm, name, doesNotMatter, val.$Environment),\n      undefined\n    );\n    if (\n      reference === undefined ||\n      Environment.IsUnresolvableReference(this.realm, reference) ||\n      reference.base === this.globalEnvironmentRecord ||\n      reference.base === this.globalEnvironmentRecord.$DeclarativeRecord\n    ) {\n      return this.globalEnvironmentRecord;\n    } else {\n      invariant(!Environment.IsUnresolvableReference(this.realm, reference));\n      let referencedBase = reference.base;\n      let referencedName: string = (reference.referencedName: any);\n      invariant(referencedName === name);\n      invariant(referencedBase instanceof DeclarativeEnvironmentRecord);\n      return referencedBase;\n    }\n  }\n\n  hasBinding(environment: EnvironmentRecord, name: string): boolean {\n    if (environment === this.globalEnvironmentRecord.$DeclarativeRecord) environment = this.globalEnvironmentRecord;\n\n    if (environment === this.globalEnvironmentRecord) {\n      // Global Binding\n      return this.globalBindings.get(name) !== undefined;\n    } else {\n      invariant(environment instanceof DeclarativeEnvironmentRecord);\n      // DeclarativeEnvironmentRecord binding\n      let residualFunctionBindings = this.declarativeEnvironmentRecordsBindings.get(environment);\n      if (residualFunctionBindings === undefined) return false;\n      return residualFunctionBindings.get(name) !== undefined;\n    }\n  }\n\n  // Visits a binding, returns a ResidualFunctionBinding\n  getBinding(environment: EnvironmentRecord, name: string): ResidualFunctionBinding {\n    if (environment === this.globalEnvironmentRecord.$DeclarativeRecord) environment = this.globalEnvironmentRecord;\n\n    if (environment === this.globalEnvironmentRecord) {\n      // Global Binding\n      return getOrDefault(this.globalBindings, name, () => {\n        let residualFunctionBinding = {\n          name,\n          value: undefined,\n          modified: true,\n          hasLeaked: false,\n          declarativeEnvironmentRecord: null,\n          potentialReferentializationScopes: new Set(),\n        };\n        // Queue up visiting of global binding exactly once in the globalGenerator scope.\n        this._enqueueWithUnrelatedScope(this.globalGenerator, () => {\n          let value = this.realm.getGlobalLetBinding(name);\n          if (value !== undefined) residualFunctionBinding.value = this.visitEquivalentValue(value);\n        });\n        return residualFunctionBinding;\n      });\n    } else {\n      invariant(environment instanceof DeclarativeEnvironmentRecord);\n      // DeclarativeEnvironmentRecord binding\n      let residualFunctionBindings = getOrDefault(\n        this.declarativeEnvironmentRecordsBindings,\n        environment,\n        () => new Map()\n      );\n      return getOrDefault(\n        residualFunctionBindings,\n        name,\n        (): ResidualFunctionBinding => {\n          invariant(environment instanceof DeclarativeEnvironmentRecord);\n          return {\n            name,\n            value: undefined,\n            modified: false,\n            hasLeaked: false,\n            declarativeEnvironmentRecord: environment,\n            potentialReferentializationScopes: new Set(),\n          };\n        }\n      );\n      // Note that we don't yet visit the binding (and its value) here,\n      // as that should be done by a call to visitBinding, in the right scope,\n      // if the binding's incoming value is relevant.\n    }\n  }\n\n  _visitClass(classFunc: ECMAScriptSourceFunctionValue, classPrototype: ObjectValue): void {\n    let visitClassMethod = (propertyNameOrSymbol, methodFunc, methodType, isStatic) => {\n      if (methodFunc instanceof ECMAScriptSourceFunctionValue) {\n        // if the method does not have a $HomeObject, it's not a class method\n        if (methodFunc.$HomeObject !== undefined) {\n          if (methodFunc !== classFunc) {\n            this._visitClassMethod(methodFunc, methodType, classPrototype, !!isStatic);\n          }\n        }\n      }\n    };\n    for (let [propertyName, method] of classPrototype.properties) {\n      withDescriptorValue(propertyName, method.descriptor, visitClassMethod);\n    }\n    for (let [symbol, method] of classPrototype.symbols) {\n      withDescriptorValue(symbol, method.descriptor, visitClassMethod);\n    }\n\n    // handle class inheritance\n    if (!(classFunc.$Prototype instanceof NativeFunctionValue)) {\n      this.visitValue(classFunc.$Prototype);\n    }\n\n    if (classPrototype.properties.has(\"constructor\")) {\n      let constructor = classPrototype.properties.get(\"constructor\");\n\n      invariant(constructor !== undefined);\n      // check if the constructor was deleted, as it can't really be deleted\n      // it just gets set to empty (the default again)\n      if (constructor.descriptor === undefined) {\n        classFunc.$HasEmptyConstructor = true;\n      } else {\n        let visitClassProperty = (propertyNameOrSymbol, methodFunc, methodType) => {\n          visitClassMethod(propertyNameOrSymbol, methodFunc, methodType, true);\n        };\n        // check if we have any static methods we need to include\n        let constructorFunc = Get(this.realm, classPrototype, \"constructor\");\n        invariant(constructorFunc instanceof ObjectValue);\n        for (let [propertyName, method] of constructorFunc.properties) {\n          if (\n            !ClassPropertiesToIgnore.has(propertyName) &&\n            method.descriptor !== undefined &&\n            !(\n              propertyName === \"length\" && canIgnoreClassLengthProperty(constructorFunc, method.descriptor, this.logger)\n            )\n          ) {\n            withDescriptorValue(propertyName, method.descriptor, visitClassProperty);\n          }\n        }\n      }\n    }\n    this.classMethodInstances.set(classFunc, {\n      classPrototype,\n      methodType: \"constructor\",\n      classSuperNode: undefined,\n      classMethodIsStatic: false,\n      classMethodKeyNode: undefined,\n      classMethodComputed: false,\n    });\n  }\n\n  _visitClassMethod(\n    methodFunc: ECMAScriptSourceFunctionValue,\n    methodType: \"get\" | \"set\" | \"value\",\n    classPrototype: ObjectValue,\n    isStatic: boolean\n  ): void {\n    this.classMethodInstances.set(methodFunc, {\n      classPrototype,\n      methodType: methodType === \"value\" ? \"method\" : methodType,\n      classSuperNode: undefined,\n      classMethodIsStatic: isStatic,\n      classMethodKeyNode: undefined,\n      classMethodComputed: !!methodFunc.$HasComputedName,\n    });\n  }\n\n  visitValueObject(val: ObjectValue): void {\n    invariant(val.isValid());\n    this._registerAdditionalRoot(val);\n    if (isReactElement(val)) {\n      this.residualReactElementVisitor.visitReactElement(val);\n      return;\n    }\n    let kind = val.getKind();\n    this.visitObjectProperties(val, kind);\n\n    // If this object is a prototype object that was implicitly created by the runtime\n    // for a constructor, then we can obtain a reference to this object\n    // in a special way that's handled alongside function serialization.\n    let constructor = val.originalConstructor;\n    if (constructor !== undefined) {\n      this.visitValue(constructor);\n      return;\n    }\n\n    switch (kind) {\n      case \"RegExp\":\n      case \"Number\":\n      case \"String\":\n      case \"Boolean\":\n      case \"ArrayBuffer\":\n        return;\n      case \"Date\":\n        let dateValue = val.$DateValue;\n        invariant(dateValue !== undefined);\n        this.visitValue(dateValue);\n        return;\n      case \"Float32Array\":\n      case \"Float64Array\":\n      case \"Int8Array\":\n      case \"Int16Array\":\n      case \"Int32Array\":\n      case \"Uint8Array\":\n      case \"Uint16Array\":\n      case \"Uint32Array\":\n      case \"Uint8ClampedArray\":\n      case \"DataView\":\n        let buf = val.$ViewedArrayBuffer;\n        invariant(buf !== undefined);\n        this.visitValue(buf);\n        return;\n      case \"Map\":\n        this.visitValueMap(val);\n        return;\n      case \"WeakMap\":\n        this.visitValueWeakMap(val);\n        return;\n      case \"Set\":\n        this.visitValueSet(val);\n        return;\n      case \"WeakSet\":\n        this.visitValueWeakSet(val);\n        return;\n      default:\n        if (kind !== \"Object\") this.logger.logError(val, `Object of kind ${kind} is not supported in residual heap.`);\n        if (this.realm.react.enabled && valueIsReactLibraryObject(this.realm, val, this.logger)) {\n          this.realm.fbLibraries.react = val;\n        }\n        return;\n    }\n  }\n\n  visitValueSymbol(val: SymbolValue): void {\n    if (val.$Description) this.visitValue(val.$Description);\n  }\n\n  visitValueProxy(val: ProxyValue): void {\n    this._registerAdditionalRoot(val);\n\n    this.visitValue(val.$ProxyTarget);\n    this.visitValue(val.$ProxyHandler);\n  }\n\n  _visitAbstractValueConditional(val: AbstractValue): void {\n    let condition = val.args[0];\n    invariant(condition instanceof AbstractValue);\n\n    let cf = this.conditionalFeasibility.get(val);\n    if (cf === undefined) this.conditionalFeasibility.set(val, (cf = { t: false, f: false }));\n\n    let feasibleT, feasibleF;\n    let savedPath = this.realm.pathConditions;\n    try {\n      this.realm.pathConditions = this.scope instanceof Generator ? this.scope.pathConditions : createPathConditions();\n\n      let impliesT = Path.implies(condition);\n      let impliesF = Path.impliesNot(condition);\n      invariant(!(impliesT && impliesF));\n\n      if (!impliesT && !impliesF) {\n        feasibleT = feasibleF = true;\n      } else {\n        feasibleT = impliesT;\n        feasibleF = impliesF;\n      }\n    } finally {\n      this.realm.pathConditions = savedPath;\n    }\n\n    let visitedT = false,\n      visitedF = false;\n\n    if (!cf.t && feasibleT) {\n      val.args[1] = this.visitEquivalentValue(val.args[1]);\n      cf.t = true;\n      if (cf.f) val.args[0] = this.visitEquivalentValue(val.args[0]);\n      visitedT = true;\n    }\n\n    if (!cf.f && feasibleF) {\n      val.args[2] = this.visitEquivalentValue(val.args[2]);\n      cf.f = true;\n      if (cf.t) val.args[0] = this.visitEquivalentValue(val.args[0]);\n      visitedF = true;\n    }\n\n    if (!visitedT || !visitedF) {\n      let fixpoint_rerun = () => {\n        let progress = false;\n        invariant(cf !== undefined);\n        if (cf.f && cf.t) {\n          invariant(!visitedT || !visitedF);\n          this.visitValue(val.args[0]);\n        }\n\n        if (cf.t && !visitedT) {\n          this.visitValue(val.args[1]);\n          progress = visitedT = true;\n        }\n        invariant(cf.t === visitedT);\n\n        if (cf.f && !visitedF) {\n          this.visitValue(val.args[2]);\n          progress = visitedF = true;\n        }\n        invariant(cf.f === visitedF);\n\n        // When not all possible outcomes are assumed to be feasible yet after visiting some scopes,\n        // it might be that they do become assumed to be feasible when later visiting some other scopes.\n        // In that case, we should also re-visit the corresponding cases in this scope.\n        // To this end, calling _enqueueWithUnrelatedScope enqueues this function for later re-execution if\n        // any other visiting progress was made.\n        if (!visitedT || !visitedF) this._enqueueWithUnrelatedScope(this.scope, fixpoint_rerun);\n\n        return progress;\n      };\n\n      fixpoint_rerun();\n    }\n  }\n\n  visitAbstractValue(val: AbstractValue): void {\n    if (val.kind === \"sentinel member expression\") {\n      this.logger.logError(val, \"expressions of type o[p] are not yet supported for partially known o and unknown p\");\n    } else if (val.kind === \"environment initialization expression\") {\n      this.logger.logError(val, \"reads during environment initialization should never leak to serialization\");\n    } else if (val.kind === \"conditional\") {\n      this._visitAbstractValueConditional(val);\n      return;\n    }\n    for (let i = 0, n = val.args.length; i < n; i++) {\n      val.args[i] = this.visitEquivalentValue(val.args[i]);\n    }\n  }\n\n  // Overridable hook for pre-visiting the value.\n  // Return false will tell visitor to skip visiting children of this node.\n  preProcessValue(val: Value): boolean {\n    return this._mark(val);\n  }\n\n  // Overridable hook for post-visiting the value.\n  postProcessValue(val: Value): void {}\n\n  _mark(val: Value): boolean {\n    let scopes = this.values.get(val);\n    if (scopes === undefined) this.values.set(val, (scopes = new Set()));\n    if (this.scope instanceof Generator && this.scope.effectsToApply === undefined) {\n      // If we've already marked this value for any simple parent (non-effect carrying) generator,\n      // then we don't need to re-mark it, as such a set of generators is reduced to the\n      // parent generator in all uses of the scopes set.\n      for (\n        let g = this.scope;\n        g instanceof Generator && g.effectsToApply === undefined;\n        g = this.generatorTree.getParent(g)\n      ) {\n        if (scopes.has(g)) return false;\n      }\n    } else if (scopes.has(this.scope)) return false;\n    scopes.add(this.scope);\n    return true;\n  }\n\n  visitEquivalentValue<T: Value>(val: T): T {\n    if (val instanceof AbstractValue) {\n      let equivalentValue = this.equivalenceSet.add(val);\n      if (this.preProcessValue(equivalentValue)) this.visitAbstractValue(equivalentValue);\n      this.postProcessValue(equivalentValue);\n      return (equivalentValue: any);\n    }\n    if (val instanceof ObjectValue) {\n      invariant(val.isValid());\n      if (isReactElement(val)) {\n        if (val.temporalAlias !== undefined) {\n          return this.visitEquivalentValue(val.temporalAlias);\n        }\n        let equivalentReactElementValue = this.residualReactElementVisitor.reactElementEquivalenceSet.add(val);\n        if (this._mark(equivalentReactElementValue)) this.visitValueObject(equivalentReactElementValue);\n        return (equivalentReactElementValue: any);\n      } else if (isReactPropsObject(val)) {\n        let equivalentReactPropsValue = this.residualReactElementVisitor.reactPropsEquivalenceSet.add(val);\n        if (this._mark(equivalentReactPropsValue)) this.visitValueObject(equivalentReactPropsValue);\n        return (equivalentReactPropsValue: any);\n      }\n    }\n    this.visitValue(val);\n    return val;\n  }\n\n  visitValue(val: Value): void {\n    invariant(val !== undefined);\n    invariant(!(val instanceof ObjectValue && val.refuseSerialization));\n    if (val instanceof AbstractValue) {\n      if (this.preProcessValue(val)) this.visitAbstractValue(val);\n      this.postProcessValue(val);\n    } else if (val.isIntrinsic()) {\n      // All intrinsic values exist from the beginning of time...\n      // ...except for a few that come into existence as templates for abstract objects via executable code.\n      if (val instanceof ObjectValue && val.isScopedTemplate) {\n        this.preProcessValue(val);\n        this.postProcessValue(val);\n      } else\n        this._enqueueWithUnrelatedScope(this._getCommonScope(), () => {\n          this.preProcessValue(val);\n          this.postProcessValue(val);\n        });\n    } else if (val instanceof EmptyValue) {\n      this.preProcessValue(val);\n      this.postProcessValue(val);\n    } else if (HeapInspector.isLeaf(val)) {\n      this.preProcessValue(val);\n      this.postProcessValue(val);\n    } else if (IsArray(this.realm, val)) {\n      invariant(val instanceof ObjectValue);\n      if (this.preProcessValue(val)) this.visitValueArray(val);\n      this.postProcessValue(val);\n    } else if (val instanceof ProxyValue) {\n      if (this.preProcessValue(val)) this.visitValueProxy(val);\n      this.postProcessValue(val);\n    } else if (val instanceof FunctionValue) {\n      let creationGenerator = this.generatorTree.getCreator(val) || this.globalGenerator;\n\n      // 1. Visit function in its creation scope\n      this._enqueueWithUnrelatedScope(creationGenerator, () => {\n        invariant(val instanceof FunctionValue);\n        if (this.preProcessValue(val)) this.visitValueFunction(val);\n        this.postProcessValue(val);\n      });\n\n      // 2. If current scope is not related to creation scope,\n      //    and if this is not a recursive visit, mark the usage of this function\n      //    in the common scope as well.\n      let commonScope = this._getCommonScope();\n      if (commonScope !== creationGenerator && commonScope !== val) {\n        this._enqueueWithUnrelatedScope(commonScope, () => {\n          this.preProcessValue(val);\n          this.postProcessValue(val);\n        });\n      }\n    } else if (val instanceof SymbolValue) {\n      if (this.preProcessValue(val)) this.visitValueSymbol(val);\n      this.postProcessValue(val);\n    } else {\n      invariant(val instanceof ObjectValue);\n\n      if (this.preProcessValue(val)) this.visitValueObject(val);\n      this.postProcessValue(val);\n    }\n  }\n\n  createGeneratorVisitCallbacks(additionalFunctionInfo?: AdditionalFunctionInfo): VisitEntryCallbacks {\n    let callbacks = {\n      visitEquivalentValue: this.visitEquivalentValue.bind(this),\n      visitGenerator: (generator, parent) => {\n        invariant(this.generatorTree.getParent(generator) === parent);\n        this.visitGenerator(generator, additionalFunctionInfo);\n      },\n      canOmit: (value: Value): boolean => {\n        let canOmit = !this.referencedDeclaredValues.has(value) && !this.values.has(value);\n        if (!canOmit) {\n          return false;\n        }\n        if (value instanceof ObjectValue && value.temporalAlias !== undefined) {\n          let temporalAlias = value.temporalAlias;\n          return !this.referencedDeclaredValues.has(temporalAlias) && !this.values.has(temporalAlias);\n        }\n        return canOmit;\n      },\n      recordDeclaration: (value: Value) => {\n        this.referencedDeclaredValues.set(value, this._getAdditionalFunctionOfScope());\n      },\n      recordDelayedEntry: (generator, entry: GeneratorEntry) => {\n        this._enqueueWithUnrelatedScope(generator, () => entry.visit(callbacks, generator));\n      },\n      visitModifiedProperty: (binding: PropertyBinding) => {\n        let fixpoint_rerun = () => {\n          if (this.values.has(binding.object)) {\n            if (binding.internalSlot) {\n              invariant(typeof binding.key === \"string\");\n              let error = new CompilerDiagnostic(\n                `Internal slot ${binding.key} modified in a nested context. This is not yet supported.`,\n                binding.object.expressionLocation,\n                \"PP1006\",\n                \"FatalError\"\n              );\n              this.realm.handleError(error) === \"Fail\";\n              throw new FatalError();\n            }\n            this.visitValue(binding.object);\n            if (binding.key instanceof Value) this.visitValue(binding.key);\n            this.visitObjectProperty(binding);\n            return true;\n          } else {\n            this._enqueueWithUnrelatedScope(this.scope, fixpoint_rerun);\n            return false;\n          }\n        };\n        fixpoint_rerun();\n      },\n      visitModifiedBinding: (modifiedBinding: Binding) => {\n        let fixpoint_rerun = () => {\n          if (this.hasBinding(modifiedBinding.environment, modifiedBinding.name)) {\n            invariant(additionalFunctionInfo);\n            let { functionValue } = additionalFunctionInfo;\n            invariant(functionValue instanceof ECMAScriptSourceFunctionValue);\n            let residualBinding = this.getBinding(modifiedBinding.environment, modifiedBinding.name);\n            let funcInstance = additionalFunctionInfo.instance;\n            invariant(funcInstance !== undefined);\n            funcInstance.residualFunctionBindings.set(modifiedBinding.name, residualBinding);\n            let newValue = modifiedBinding.value;\n            invariant(newValue);\n            this.visitValue(newValue);\n            residualBinding.modified = true;\n            let otherFunc = residualBinding.additionalFunctionOverridesValue;\n            if (otherFunc !== undefined && otherFunc !== functionValue) {\n              let otherNameVal = otherFunc._SafeGetDataPropertyValue(\"name\");\n              let otherNameStr = otherNameVal instanceof StringValue ? otherNameVal.value : \"unknown function\";\n              let funcNameVal = functionValue._SafeGetDataPropertyValue(\"name\");\n              let funNameStr = funcNameVal instanceof StringValue ? funcNameVal.value : \"unknown function\";\n              let error = new CompilerDiagnostic(\n                `Variable ${\n                  modifiedBinding.name\n                } written to in optimized function ${funNameStr} conflicts with write in another optimized function ${otherNameStr}`,\n                funcNameVal.expressionLocation,\n                \"PP1001\",\n                \"RecoverableError\"\n              );\n              if (functionValue.$Realm.handleError(error) === \"Fail\") throw new FatalError();\n            }\n            residualBinding.additionalFunctionOverridesValue = functionValue;\n            additionalFunctionInfo.modifiedBindings.set(modifiedBinding, residualBinding);\n            // TODO #2430 nested optimized functions: revisit adding GLOBAL as outer optimized function\n            residualBinding.potentialReferentializationScopes.add(\"GLOBAL\");\n            return true;\n          } else {\n            this._enqueueWithUnrelatedScope(this.scope, fixpoint_rerun);\n            return false;\n          }\n        };\n        fixpoint_rerun();\n      },\n      visitBindingAssignment: (binding: Binding, value: Value) => {\n        let residualBinding = this.getBinding(binding.environment, binding.name);\n        residualBinding.modified = true;\n        residualBinding.hasLeaked = true;\n        // This may not have been referentialized if the binding is a local of an optimized function.\n        // in that case, we need to figure out which optimized function it is, and referentialize it in that scope.\n        let commonScope = this._getCommonScope();\n        if (residualBinding.potentialReferentializationScopes.size === 0) {\n          this._enqueueWithUnrelatedScope(commonScope, () => {\n            if (additionalFunctionInfo !== undefined) {\n              let funcInstance = additionalFunctionInfo.instance;\n              invariant(funcInstance !== undefined);\n              funcInstance.residualFunctionBindings.set(residualBinding.name, residualBinding);\n            }\n            this.visitBinding(commonScope, residualBinding);\n          });\n        }\n        return this.visitEquivalentValue(value);\n      },\n    };\n    return callbacks;\n  }\n\n  visitGenerator(generator: Generator, additionalFunctionInfo?: AdditionalFunctionInfo): void {\n    this._withScope(generator, () => {\n      generator.visit(this.createGeneratorVisitCallbacks(additionalFunctionInfo));\n    });\n\n    // We don't bother purging created objects\n  }\n\n  // result -- serialized as a return statement\n  // Generator -- visit all entries\n  // Bindings -- (modifications to named variables) only need to serialize bindings if they're\n  //             captured by a residual function\n  //          -- need to apply them and maybe need to revisit functions in ancestors to make sure\n  //             we don't overwrite anything they capture\n  // PropertyBindings -- (property modifications) visit any property bindings to pre-existing objects\n  // CreatedObjects -- should take care of itself\n  _visitAdditionalFunction(functionValue: FunctionValue, additionalEffects: AdditionalFunctionEffects): void {\n    // Get Instance + Info\n    invariant(functionValue instanceof ECMAScriptSourceFunctionValue);\n    let code = functionValue.$ECMAScriptCode;\n    let functionInfo = this.functionInfos.get(code);\n    invariant(functionInfo !== undefined);\n    let funcInstance = this.functionInstances.get(functionValue);\n    invariant(funcInstance !== undefined);\n\n    // Set Visitor state\n    // Allows us to emit function declarations etc. inside of this additional\n    // function instead of adding them at global scope\n    let visitor = () => {\n      invariant(funcInstance !== undefined);\n      invariant(functionInfo !== undefined);\n      let additionalFunctionInfo = {\n        modifiedBindings: new Map(),\n        functionValue,\n        instance: funcInstance,\n        prelude: [],\n      };\n      this.additionalFunctionValueInfos.set(functionValue, additionalFunctionInfo);\n\n      let effectsGenerator = additionalEffects.generator;\n      this.generatorTree.add(functionValue, effectsGenerator);\n      this.visitGenerator(effectsGenerator, additionalFunctionInfo);\n    };\n\n    if (this.realm.react.enabled) {\n      this.residualReactElementVisitor.withCleanEquivalenceSet(visitor);\n    } else {\n      visitor();\n    }\n  }\n\n  visitRoots(): void {\n    this.generatorTree.add(\"GLOBAL\", this.globalGenerator);\n    this.visitGenerator(this.globalGenerator);\n    for (let moduleValue of this.modules.initializedModules.values()) this.visitValue(moduleValue);\n\n    this._visitUntilFixpoint();\n  }\n\n  _visitUntilFixpoint(): void {\n    if (this.realm.react.verbose) {\n      this.logger.logInformation(`Computing fixed point...`);\n    }\n    // Do a fixpoint over all pure generator entries to make sure that we visit\n    // arguments of only BodyEntries that are required by some other residual value\n    let progress = true;\n    while (progress) {\n      // Let's partition the actions by their generators,\n      // as applying effects is expensive, and so we don't want to do it\n      // more often than necessary.\n      let actionsByGenerator = new Map();\n      let expected = 0;\n      for (let { scope, action } of this.delayedActions) {\n        let generator;\n        if (scope instanceof FunctionValue) generator = this.generatorTree.getCreator(scope) || this.globalGenerator;\n        else if (scope === \"GLOBAL\") generator = this.globalGenerator;\n        else {\n          invariant(scope instanceof Generator);\n          generator = scope;\n        }\n        let a = actionsByGenerator.get(generator);\n        if (a === undefined) actionsByGenerator.set(generator, (a = []));\n        a.push({ action, scope });\n        expected++;\n      }\n      this.delayedActions = [];\n      progress = false;\n      // We build up a tree of effects runner that mirror the nesting of Generator effects.\n      // This way, we only have to apply any given effects once, regardless of how many actions we have associated with whatever generators.\n      let effectsInfos: Map<Effects, { runner: () => void, nestedEffectsRunners: Array<() => void> }> = new Map();\n      let topEffectsRunners: Array<() => void> = [];\n      let actual = 0;\n      for (let [generator, scopedActions] of actionsByGenerator) {\n        let runGeneratorAction = () => {\n          for (let { action, scope } of scopedActions) {\n            actual++;\n            this._withScope(scope, () => {\n              if (action() !== false) progress = true;\n            });\n          }\n        };\n        let s = generator;\n        let visited = new Set();\n        let newNestedRunner;\n        while (s !== \"GLOBAL\") {\n          invariant(!visited.has(s));\n          visited.add(s);\n          if (s instanceof Generator) {\n            let effectsToApply = s.effectsToApply;\n            if (effectsToApply) {\n              let info = effectsInfos.get(effectsToApply);\n              let runner;\n              if (info === undefined) {\n                runner = () => {\n                  this.realm.withEffectsAppliedInGlobalEnv(() => {\n                    invariant(info !== undefined);\n                    for (let nestedEffectsRunner of info.nestedEffectsRunners) nestedEffectsRunner();\n                    return null;\n                  }, effectsToApply);\n                };\n                effectsInfos.set(effectsToApply, (info = { runner, nestedEffectsRunners: [] }));\n              }\n              if (newNestedRunner !== undefined) info.nestedEffectsRunners.push(newNestedRunner);\n              newNestedRunner = runner;\n              if (runGeneratorAction === undefined) break;\n              info.nestedEffectsRunners.push(runGeneratorAction);\n              runGeneratorAction = undefined;\n            }\n            s = this.generatorTree.getParent(s);\n          } else if (s instanceof FunctionValue) {\n            invariant(this.additionalFunctionValuesAndEffects.has(s));\n            s = this.generatorTree.getCreator(s) || \"GLOBAL\";\n          }\n          invariant(s instanceof Generator || s instanceof FunctionValue || s === \"GLOBAL\");\n        }\n        if (runGeneratorAction !== undefined) {\n          invariant(newNestedRunner === undefined);\n          runGeneratorAction();\n        } else if (newNestedRunner !== undefined) topEffectsRunners.push(newNestedRunner);\n      }\n      for (let topEffectsRunner of topEffectsRunners) topEffectsRunner();\n      invariant(expected === actual);\n      if (this.realm.react.verbose) {\n        this.logger.logInformation(`  (${actual} items processed)`);\n      }\n    }\n  }\n\n  toInfo(): ResidualHeapInfo {\n    return {\n      values: this.values,\n      functionInstances: this.functionInstances,\n      classMethodInstances: this.classMethodInstances,\n      functionInfos: this.functionInfos,\n      referencedDeclaredValues: this.referencedDeclaredValues,\n      additionalFunctionValueInfos: this.additionalFunctionValueInfos,\n      declarativeEnvironmentRecordsBindings: this.declarativeEnvironmentRecordsBindings,\n      globalBindings: this.globalBindings,\n      conditionalFeasibility: this.conditionalFeasibility,\n      additionalGeneratorRoots: this.additionalGeneratorRoots,\n    };\n  }\n}\n"],"file":"ResidualHeapVisitor.js"}