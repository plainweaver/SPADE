{"version":3,"sources":["../../src/serializer/GeneratorTree.js"],"names":["GeneratorTree","constructor","parents","Map","createdObjects","getParent","generator","parent","get","undefined","getCreator","value","add","_add","has","set","effects","effectsToApply","FunctionValue","createdObject","isValidPreviousCreator","previousCreator","dependency","getDependencies"],"mappings":";;;;;;;AAWA;;AACA;;AACA;;;;AAbA;;;;;;;;;AASA;AAMA;AACA;AACA;AACA;AACA;AACO,MAAMA,aAAN,CAAoB;AAIzBC,EAAAA,WAAW,GAAG;AACZ,SAAKC,OAAL,GAAe,IAAIC,GAAJ,EAAf;AACA,SAAKC,cAAL,GAAsB,IAAID,GAAJ,EAAtB;AACD;;AAEDE,EAAAA,SAAS,CAACC,SAAD,EAA6D;AACpE,QAAIC,MAAM,GAAG,KAAKL,OAAL,CAAaM,GAAb,CAAiBF,SAAjB,CAAb;AACA,4BAAUC,MAAM,KAAKE,SAArB;AACA,WAAOF,MAAP;AACD;;AAEDG,EAAAA,UAAU,CAACC,KAAD,EAAuC;AAC/C,WAAO,KAAKP,cAAL,CAAoBI,GAApB,CAAwBG,KAAxB,CAAP;AACD;;AAEDC,EAAAA,GAAG,CAACL,MAAD,EAAmCD,SAAnC,EAA+D;AAChE,SAAKO,IAAL,CAAUN,MAAV,EAAkBD,SAAlB;AACD;;AAEDO,EAAAA,IAAI,CAACN,MAAD,EAA+CD,SAA/C,EAA2E;AAC7E,4BAAU,CAAC,KAAKJ,OAAL,CAAaY,GAAb,CAAiBR,SAAjB,CAAX;AACA,SAAKJ,OAAL,CAAaa,GAAb,CAAiBT,SAAjB,EAA4BC,MAA5B;AACA,QAAIS,OAAO,GAAGV,SAAS,CAACW,cAAxB;;AACA,QAAID,OAAO,KAAKP,SAAhB,EAA2B;AACzB,8BAAUF,MAAM,YAAYW,oBAA5B;;AACA,WAAK,IAAIC,aAAT,IAA0BH,OAAO,CAACZ,cAAlC,EAAkD;AAChD,YAAIgB,sBAAsB,GAAGC,eAAe,IAAI;AAC9C;AACA,cAAIA,eAAe,KAAKZ,SAAxB,EAAmC,OAAO,IAAP,CAFW,CAI9C;;AACA,cAAIY,eAAe,KAAKd,MAAxB,EAAgC,OAAO,IAAP,CALc,CAO9C;;AACA,cAAIc,eAAe,KAAKf,SAAxB,EAAmC,OAAO,IAAP,CARW,CAU9C;AACA;;AACA,iBAAO,IAAP,CAZ8C,CAYjC;AACd,SAbD;;AAeA,gCAAUc,sBAAsB,CAAC,KAAKhB,cAAL,CAAoBI,GAApB,CAAwBW,aAAxB,CAAD,CAAhC,EAhBgD,CAkBhD;;AACA,aAAKf,cAAL,CAAoBW,GAApB,CAAwBI,aAAxB,EAAuCb,SAAvC;AACD;AACF;;AAED,SAAK,IAAIgB,UAAT,IAAuBhB,SAAS,CAACiB,eAAV,EAAvB,EAAoD,KAAKV,IAAL,CAAUP,SAAV,EAAqBgB,UAArB;AACrD;;AArDwB","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow strict-local */\n\nimport invariant from \"../invariant.js\";\nimport { FunctionValue, ObjectValue } from \"../values/index.js\";\nimport { Generator } from \"../utils/generator.js\";\n\n// This class maintains a tree containing all generators known so far,\n// and information about the most specific generator that created any\n// particular object.\n// New sub-trees are added in chunks, at the beginning for the global generator,\n// and every time the visitor handles another additional function.\nexport class GeneratorTree {\n  parents: Map<Generator, Generator | FunctionValue | \"GLOBAL\">;\n  createdObjects: Map<ObjectValue, Generator>;\n\n  constructor() {\n    this.parents = new Map();\n    this.createdObjects = new Map();\n  }\n\n  getParent(generator: Generator): Generator | FunctionValue | \"GLOBAL\" {\n    let parent = this.parents.get(generator);\n    invariant(parent !== undefined);\n    return parent;\n  }\n\n  getCreator(value: ObjectValue): Generator | void {\n    return this.createdObjects.get(value);\n  }\n\n  add(parent: FunctionValue | \"GLOBAL\", generator: Generator): void {\n    this._add(parent, generator);\n  }\n\n  _add(parent: Generator | FunctionValue | \"GLOBAL\", generator: Generator): void {\n    invariant(!this.parents.has(generator));\n    this.parents.set(generator, parent);\n    let effects = generator.effectsToApply;\n    if (effects !== undefined) {\n      invariant(parent instanceof FunctionValue);\n      for (let createdObject of effects.createdObjects) {\n        let isValidPreviousCreator = previousCreator => {\n          // It's okay if we don't know about any previous creator.\n          if (previousCreator === undefined) return true;\n\n          // If we already recorded a newly-created object, then we must have done so for our parent\n          if (previousCreator === parent) return true;\n\n          // Since we are dealing with a DAG, and not a tree, we might have already the current generator as the creator\n          if (previousCreator === generator) return true;\n\n          // TODO: There's something else going on that is not yet understood.\n          // Fix the return value once #1901 is understood and landed.\n          return true; // false\n        };\n\n        invariant(isValidPreviousCreator(this.createdObjects.get(createdObject)));\n\n        // Update the created objects mapping to the most specific generator\n        this.createdObjects.set(createdObject, generator);\n      }\n    }\n\n    for (let dependency of generator.getDependencies()) this._add(generator, dependency);\n  }\n}\n"],"file":"GeneratorTree.js"}