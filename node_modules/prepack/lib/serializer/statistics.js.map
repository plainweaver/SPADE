{"version":3,"sources":["../../src/serializer/statistics.js"],"names":["SerializerStatistics","RealmStatistics","constructor","getTime","getMemory","forcingGC","functions","delayedValues","initializedModules","acceleratedModules","delayedModules","totalModules","resetBeforePass","total","PerformanceTracker","resolveInitializedModules","modulesToInitialize","optimizeReactComponentTreeRoots","checkThatFunctionsAreIndependent","processCollectedNestedOptimizedFunctions","deepTraversal","referentialization","referenceCounts","serializePass","babelGenerate","dumpIR","objects","objectProperties","functionClones","lazyObjects","referentialized","valueIds","valuesInlined","generators","requireCalls","requireCallsReplaced","getSerializerStatistics","log","console","logSerializerPerformanceTrackers","title","note","format","undefined","logPerformanceTrackers"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow strict-local */\n\nimport { RealmStatistics, PerformanceTracker } from \"../statistics.js\";\n\nexport class SerializerStatistics extends RealmStatistics {\n  constructor(getTime: void | (() => number), getMemory: void | (() => number), forcingGC: boolean = false) {\n    super(getTime, getMemory);\n    this.forcingGC = forcingGC;\n\n    this.functions = 0;\n    this.delayedValues = 0;\n    this.initializedModules = 0;\n    this.acceleratedModules = 0;\n    this.delayedModules = 0;\n    this.totalModules = 0;\n    this.resetBeforePass();\n\n    this.total = new PerformanceTracker(getTime, getMemory);\n    this.resolveInitializedModules = new PerformanceTracker(getTime, getMemory);\n    this.modulesToInitialize = new PerformanceTracker(getTime, getMemory);\n    this.optimizeReactComponentTreeRoots = new PerformanceTracker(getTime, getMemory);\n    this.checkThatFunctionsAreIndependent = new PerformanceTracker(getTime, getMemory);\n    this.processCollectedNestedOptimizedFunctions = new PerformanceTracker(getTime, getMemory);\n    this.deepTraversal = new PerformanceTracker(getTime, getMemory);\n    this.referentialization = new PerformanceTracker(getTime, getMemory);\n    this.referenceCounts = new PerformanceTracker(getTime, getMemory);\n    this.serializePass = new PerformanceTracker(getTime, getMemory);\n    this.babelGenerate = new PerformanceTracker(getTime, getMemory);\n    this.dumpIR = new PerformanceTracker(getTime, getMemory);\n  }\n\n  resetBeforePass(): void {\n    this.objects = 0;\n    this.objectProperties = 0;\n    this.functionClones = 0;\n    this.lazyObjects = 0;\n    this.referentialized = 0;\n    this.valueIds = 0;\n    this.valuesInlined = 0;\n    this.generators = 0;\n    this.requireCalls = 0;\n    this.requireCallsReplaced = 0;\n  }\n\n  forcingGC: boolean;\n\n  objects: number;\n  objectProperties: number;\n  functions: number;\n  functionClones: number;\n  lazyObjects: number;\n  referentialized: number;\n  valueIds: number;\n  valuesInlined: number;\n  delayedValues: number;\n  initializedModules: number;\n  acceleratedModules: number;\n  delayedModules: number;\n  totalModules: number;\n  generators: number;\n  requireCalls: number;\n  requireCallsReplaced: number;\n\n  // legacy projection\n  getSerializerStatistics() {\n    return {\n      objects: this.objects,\n      objectProperties: this.objectProperties,\n      functions: this.functions,\n      functionClones: this.functionClones,\n      lazyObjects: this.lazyObjects,\n      referentialized: this.referentialized,\n      valueIds: this.valueIds,\n      valuesInlined: this.valuesInlined,\n      delayedValues: this.delayedValues,\n      initializedModules: this.initializedModules,\n      acceleratedModules: this.acceleratedModules,\n      delayedModules: this.delayedModules,\n      totalModules: this.totalModules,\n      generators: this.generators,\n      requireCalls: this.requireCalls,\n      requireCallsReplaced: this.requireCallsReplaced,\n    };\n  }\n\n  total: PerformanceTracker;\n  resolveInitializedModules: PerformanceTracker;\n  modulesToInitialize: PerformanceTracker;\n  optimizeReactComponentTreeRoots: PerformanceTracker;\n  checkThatFunctionsAreIndependent: PerformanceTracker;\n  processCollectedNestedOptimizedFunctions: PerformanceTracker;\n  deepTraversal: PerformanceTracker;\n  referenceCounts: PerformanceTracker;\n  referentialization: PerformanceTracker;\n  serializePass: PerformanceTracker;\n  babelGenerate: PerformanceTracker;\n  dumpIR: PerformanceTracker;\n\n  log(): void {\n    super.log();\n    console.log(`=== serialization statistics`);\n    console.log(`${this.objects} objects with ${this.objectProperties} properties`);\n    console.log(\n      `${this.functions} functions plus ${this.functionClones} clones due to captured variables; ${\n        this.referentialized\n      } captured mutable variables`\n    );\n    console.log(`${this.lazyObjects} objects are lazy.`);\n    console.log(\n      `${this.valueIds} eager and ${this.delayedValues} delayed value ids generated, and ${\n        this.valuesInlined\n      } values inlined.`\n    );\n    console.log(\n      `${this.initializedModules} out of ${this.totalModules} modules initialized, with ${\n        this.acceleratedModules\n      } accelerated and ${this.delayedModules} delayed.`\n    );\n    console.log(`${this.requireCallsReplaced} of ${this.requireCalls} require calls inlined.`);\n    console.log(`${this.generators} generators`);\n  }\n\n  logSerializerPerformanceTrackers(title: string, note: void | string, format: PerformanceTracker => string): void {\n    console.log(`=== ${title}: ${format(this.total)} total`);\n    if (note !== undefined) console.log(`NOTE: ${note}`);\n    this.logPerformanceTrackers(format);\n    console.log(\n      `${format(this.resolveInitializedModules)} resolving initialized modules, ${format(\n        this.modulesToInitialize\n      )} initializing more modules, ${format(\n        this.optimizeReactComponentTreeRoots\n      )} optimizing react component tree roots, ${format(\n        this.checkThatFunctionsAreIndependent\n      )} evaluating functions to optimize, ${format(this.dumpIR)} dumping IR`\n    );\n    console.log(\n      `${format(this.deepTraversal)} visiting residual heap, ${format(\n        this.referentialization\n      )} referentializing functions, ${format(this.referenceCounts)} reference counting, ${format(\n        this.serializePass\n      )} generating AST, ${format(this.babelGenerate)} generating source code`\n    );\n  }\n}\n"],"file":"statistics.js"}