{"version":3,"sources":["../src/prepack-options.js"],"names":["getRealmOptions","compatibility","debugNames","errorHandler","mathRandomSeed","invariantLevel","invariantMode","emitConcreteModel","uniqueSuffix","instantRender","reactEnabled","reactOutput","reactVerbose","reactOptimizeNestedFunctions","serialize","check","strictlyMonotonicDateNow","stripFlow","timeout","maxStackDepth","abstractValueImpliesMax","debuggerConfigArgs","debugReproArgs","arrayNestedOptimizedFunctionsEnabled","reactFailOnUnsupportedSideEffects","getSerializerOptions","lazyObjectsRuntime","heapGraphFormat","delayInitializations","internalDebug","debugScopes","debugIdentifiers","logStatistics","logModules","profile","inlineExpressions","modulesToInitialize","trace","result","undefined"],"mappings":";;;;;;;;AAAA;;;;;;;;;AASA;AA0DO,SAASA,eAAT,CAAyB;AAC9BC,EAAAA,aAAa,GAAG,SADc;AAE9BC,EAAAA,UAAU,GAAG,KAFiB;AAG9BC,EAAAA,YAH8B;AAI9BC,EAAAA,cAJ8B;AAK9BC,EAAAA,cAAc,GAAG,CALa;AAM9BC,EAAAA,aAAa,GAAG,OANc;AAO9BC,EAAAA,iBAAiB,GAAG,KAPU;AAQ9BC,EAAAA,YAR8B;AAS9BC,EAAAA,aAT8B;AAU9BC,EAAAA,YAV8B;AAW9BC,EAAAA,WAX8B;AAY9BC,EAAAA,YAZ8B;AAa9BC,EAAAA,4BAb8B;AAc9BC,EAAAA,SAAS,GAAG,IAdkB;AAe9BC,EAAAA,KAf8B;AAgB9BC,EAAAA,wBAhB8B;AAiB9BC,EAAAA,SAjB8B;AAkB9BC,EAAAA,OAlB8B;AAmB9BC,EAAAA,aAnB8B;AAoB9BC,EAAAA,uBApB8B;AAqB9BC,EAAAA,kBArB8B;AAsB9BC,EAAAA,cAtB8B;AAuB9BC,EAAAA,oCAvB8B;AAwB9BC,EAAAA;AAxB8B,CAAzB,EAyB0B;AAC/B,SAAO;AACLvB,IAAAA,aADK;AAELC,IAAAA,UAFK;AAGLC,IAAAA,YAHK;AAILC,IAAAA,cAJK;AAKLC,IAAAA,cALK;AAMLC,IAAAA,aANK;AAOLC,IAAAA,iBAPK;AAQLC,IAAAA,YARK;AASLC,IAAAA,aATK;AAULC,IAAAA,YAVK;AAWLC,IAAAA,WAXK;AAYLC,IAAAA,YAZK;AAaLC,IAAAA,4BAbK;AAcLC,IAAAA,SAdK;AAeLC,IAAAA,KAfK;AAgBLC,IAAAA,wBAhBK;AAiBLC,IAAAA,SAjBK;AAkBLC,IAAAA,OAlBK;AAmBLC,IAAAA,aAnBK;AAoBLC,IAAAA,uBApBK;AAqBLC,IAAAA,kBArBK;AAsBLC,IAAAA,cAtBK;AAuBLC,IAAAA,oCAvBK;AAwBLC,IAAAA;AAxBK,GAAP;AA0BD;;AAEM,SAASC,oBAAT,CAA8B;AACnCC,EAAAA,kBADmC;AAEnCC,EAAAA,eAFmC;AAGnCC,EAAAA,oBAAoB,GAAG,KAHY;AAInCC,EAAAA,aAAa,GAAG,KAJmB;AAKnCC,EAAAA,WAAW,GAAG,KALqB;AAMnCC,EAAAA,gBANmC;AAOnCC,EAAAA,aAAa,GAAG,KAPmB;AAQnCC,EAAAA,UAAU,GAAG,KARsB;AASnCC,EAAAA,OAAO,GAAG,KATyB;AAUnCC,EAAAA,iBAAiB,GAAG,KAVe;AAWnCC,EAAAA,mBAXmC;AAYnCC,EAAAA,KAAK,GAAG;AAZ2B,CAA9B,EAa+B;AACpC,MAAIC,MAAyB,GAAG;AAC9BV,IAAAA,oBAD8B;AAE9BQ,IAAAA,mBAF8B;AAG9BP,IAAAA,aAH8B;AAI9BC,IAAAA,WAJ8B;AAK9BC,IAAAA,gBAL8B;AAM9BC,IAAAA,aAN8B;AAO9BC,IAAAA,UAP8B;AAQ9BC,IAAAA,OAR8B;AAS9BC,IAAAA,iBAT8B;AAU9BE,IAAAA;AAV8B,GAAhC;;AAYA,MAAIX,kBAAkB,KAAKa,SAA3B,EAAsC;AACpCD,IAAAA,MAAM,CAACZ,kBAAP,GAA4BA,kBAA5B;AACD;;AACD,MAAIC,eAAe,KAAKY,SAAxB,EAAmC;AACjCD,IAAAA,MAAM,CAACX,eAAP,GAAyBA,eAAzB;AACD;;AACD,SAAOW,MAAP;AACD","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow strict-local */\n\nimport type { ErrorHandler } from \"./errors.js\";\nimport type { SerializerOptions, RealmOptions, Compatibility, ReactOutputTypes, InvariantModeTypes } from \"./options\";\nimport { type Realm } from \"./realm.js\";\nimport { type Generator } from \"./utils/generator.js\";\nimport { type FunctionValue } from \"./values/index.js\";\nimport type { DebuggerConfigArguments, DebugReproArguments } from \"./types\";\nimport type { BabelNodeFile } from \"@babel/types\";\n\nexport type PrepackOptions = {|\n  additionalGlobals?: Realm => void,\n  lazyObjectsRuntime?: string,\n  heapGraphFormat?: \"DotLanguage\" | \"VISJS\",\n  compatibility?: Compatibility,\n  debugNames?: boolean,\n  delayInitializations?: boolean,\n  inputSourceMapFilenames?: Array<string>,\n  internalDebug?: boolean,\n  debugScopes?: boolean,\n  debugIdentifiers?: Array<string>,\n  logStatistics?: boolean,\n  logModules?: boolean,\n  mathRandomSeed?: string,\n  errorHandler?: ErrorHandler,\n  invariantLevel?: number,\n  invariantMode?: InvariantModeTypes,\n  emitConcreteModel?: boolean,\n  outputFilename?: string,\n  profile?: boolean,\n  instantRender?: boolean,\n  reactEnabled?: boolean,\n  reactOutput?: ReactOutputTypes,\n  reactVerbose?: boolean,\n  reactOptimizeNestedFunctions?: boolean,\n  serialize?: boolean,\n  check?: Array<number>,\n  inlineExpressions?: boolean,\n  sourceMaps?: boolean,\n  modulesToInitialize?: Set<string> | \"ALL\",\n  statsFile?: string,\n  strictlyMonotonicDateNow?: boolean,\n  stripFlow?: boolean,\n  timeout?: number,\n  trace?: boolean,\n  uniqueSuffix?: string,\n  maxStackDepth?: number,\n  debugInFilePath?: string,\n  debugOutFilePath?: string,\n  abstractValueImpliesMax?: number,\n  debuggerConfigArgs?: DebuggerConfigArguments,\n  debugReproArgs?: DebugReproArguments,\n  onParse?: BabelNodeFile => void,\n  onExecute?: (Realm, Map<FunctionValue, Generator>) => void,\n  arrayNestedOptimizedFunctionsEnabled?: boolean,\n  reactFailOnUnsupportedSideEffects?: boolean,\n|};\n\nexport function getRealmOptions({\n  compatibility = \"browser\",\n  debugNames = false,\n  errorHandler,\n  mathRandomSeed,\n  invariantLevel = 0,\n  invariantMode = \"throw\",\n  emitConcreteModel = false,\n  uniqueSuffix,\n  instantRender,\n  reactEnabled,\n  reactOutput,\n  reactVerbose,\n  reactOptimizeNestedFunctions,\n  serialize = true,\n  check,\n  strictlyMonotonicDateNow,\n  stripFlow,\n  timeout,\n  maxStackDepth,\n  abstractValueImpliesMax,\n  debuggerConfigArgs,\n  debugReproArgs,\n  arrayNestedOptimizedFunctionsEnabled,\n  reactFailOnUnsupportedSideEffects,\n}: PrepackOptions): RealmOptions {\n  return {\n    compatibility,\n    debugNames,\n    errorHandler,\n    mathRandomSeed,\n    invariantLevel,\n    invariantMode,\n    emitConcreteModel,\n    uniqueSuffix,\n    instantRender,\n    reactEnabled,\n    reactOutput,\n    reactVerbose,\n    reactOptimizeNestedFunctions,\n    serialize,\n    check,\n    strictlyMonotonicDateNow,\n    stripFlow,\n    timeout,\n    maxStackDepth,\n    abstractValueImpliesMax,\n    debuggerConfigArgs,\n    debugReproArgs,\n    arrayNestedOptimizedFunctionsEnabled,\n    reactFailOnUnsupportedSideEffects,\n  };\n}\n\nexport function getSerializerOptions({\n  lazyObjectsRuntime,\n  heapGraphFormat,\n  delayInitializations = false,\n  internalDebug = false,\n  debugScopes = false,\n  debugIdentifiers,\n  logStatistics = false,\n  logModules = false,\n  profile = false,\n  inlineExpressions = false,\n  modulesToInitialize,\n  trace = false,\n}: PrepackOptions): SerializerOptions {\n  let result: SerializerOptions = {\n    delayInitializations,\n    modulesToInitialize,\n    internalDebug,\n    debugScopes,\n    debugIdentifiers,\n    logStatistics,\n    logModules,\n    profile,\n    inlineExpressions,\n    trace,\n  };\n  if (lazyObjectsRuntime !== undefined) {\n    result.lazyObjectsRuntime = lazyObjectsRuntime;\n  }\n  if (heapGraphFormat !== undefined) {\n    result.heapGraphFormat = heapGraphFormat;\n  }\n  return result;\n}\n"],"file":"prepack-options.js"}