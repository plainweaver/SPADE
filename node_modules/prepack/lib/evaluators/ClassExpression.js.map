{"version":3,"sources":["../../src/evaluators/ClassExpression.js"],"names":["ast","strictCode","env","realm","className","id","name","value","undefined","hasNameProperty","Functions","SetFunctionName"],"mappings":";;;;;;;AAeA;;AACA;;AACA;;AAjBA;;;;;;;;;AASA;AAUA;AACe,kBACbA,GADa,EAEbC,UAFa,EAGbC,GAHa,EAIbC,KAJa,EAKN;AACP;AACA,MAAIC,SAAJ,CAFO,CAGP;;AACA,MAAIJ,GAAG,CAACK,EAAJ,IAAU,IAAd,EAAoB;AAClBD,IAAAA,SAAS,GAAGJ,GAAG,CAACK,EAAJ,CAAOC,IAAnB;AACD,GANM,CAOP;;;AACA,MAAIC,KAAK,GAAG,iDAA0BJ,KAA1B,EAAiCH,GAAjC,EAAsCI,SAAtC,EAAiDH,UAAjD,EAA6DC,GAA7D,CAAZ,CARO,CAUP;AAEA;;AACA,MAAIE,SAAS,KAAKI,SAAlB,EAA6B;AAC3B;AACA,QAAIC,eAAe,GAAG,2BAAeN,KAAf,EAAsBI,KAAtB,EAA6B,MAA7B,CAAtB,CAF2B,CAI3B;AAEA;;AACA,QAAI,CAACE,eAAL,EAAsB;AACpB;AACAC,4BAAUC,eAAV,CAA0BR,KAA1B,EAAiCI,KAAjC,EAAwCH,SAAxC;AACD;AACF,GAxBM,CA0BP;;;AACA,SAAOG,KAAP;AACD","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow strict-local */\n\nimport type { Realm } from \"../realm.js\";\nimport type { LexicalEnvironment } from \"../environment.js\";\nimport type { Value } from \"../values/index.js\";\nimport type { BabelNodeClassExpression } from \"@babel/types\";\nimport { HasOwnProperty } from \"../methods/index.js\";\nimport { ClassDefinitionEvaluation } from \"./ClassDeclaration\";\nimport { Functions } from \"../singletons.js\";\n\n// ECMA262 14.5.16\nexport default function(\n  ast: BabelNodeClassExpression,\n  strictCode: boolean,\n  env: LexicalEnvironment,\n  realm: Realm\n): Value {\n  // 1. If BindingIdentifieropt is not present, let className be undefined.\n  let className;\n  // 2. Else, let className be StringValue of BindingIdentifier.\n  if (ast.id != null) {\n    className = ast.id.name;\n  }\n  // 3. Let value be the result of ClassDefinitionEvaluation of ClassTail with argument className.\n  let value = ClassDefinitionEvaluation(realm, ast, className, strictCode, env);\n\n  // 4. ReturnIfAbrupt(value).\n\n  // 5. If className is not undefined, then\n  if (className !== undefined) {\n    // a. Let hasNameProperty be HasOwnProperty(value, \"name\").\n    let hasNameProperty = HasOwnProperty(realm, value, \"name\");\n\n    // b. ReturnIfAbrupt(hasNameProperty).\n\n    // c. If hasNameProperty is false, then\n    if (!hasNameProperty) {\n      // i. Perform SetFunctionName(value, className).\n      Functions.SetFunctionName(realm, value, className);\n    }\n  }\n\n  // 6. Return NormalCompletion(value).\n  return value;\n}\n"],"file":"ClassExpression.js"}