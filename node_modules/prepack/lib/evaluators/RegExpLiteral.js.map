{"version":3,"sources":["../../src/evaluators/RegExpLiteral.js"],"names":["ast","strictCode","env","realm","StringValue","pattern","flags","undefined"],"mappings":";;;;;;;AAaA;;AACA;;AAdA;;;;;;;;;AASA;AAQe,kBACbA,GADa,EAEbC,UAFa,EAGbC,GAHa,EAIbC,KAJa,EAKN;AACP,SAAO,0BACLA,KADK,EAEL,IAAIC,kBAAJ,CAAgBD,KAAhB,EAAuBH,GAAG,CAACK,OAA3B,CAFK,EAGLL,GAAG,CAACM,KAAJ,KAAcC,SAAd,GAA0B,IAAIH,kBAAJ,CAAgBD,KAAhB,EAAuBH,GAAG,CAACM,KAA3B,CAA1B,GAA8DC,SAHzD,CAAP;AAKD","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow strict-local */\n\nimport type { Realm } from \"../realm.js\";\nimport type { LexicalEnvironment } from \"../environment.js\";\nimport { Value, StringValue } from \"../values/index.js\";\nimport { RegExpCreate } from \"../methods/index.js\";\nimport type { BabelNodeRegExpLiteral } from \"@babel/types\";\n\nexport default function(\n  ast: BabelNodeRegExpLiteral,\n  strictCode: boolean,\n  env: LexicalEnvironment,\n  realm: Realm\n): Value {\n  return RegExpCreate(\n    realm,\n    new StringValue(realm, ast.pattern),\n    ast.flags !== undefined ? new StringValue(realm, ast.flags) : undefined\n  );\n}\n"],"file":"RegExpLiteral.js"}