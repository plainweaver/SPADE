{"version":3,"sources":["../../src/evaluators/SuperCall.js"],"names":["GetSuperConstructor","realm","envRec","Environment","GetThisEnvironment","FunctionEnvironmentRecord","activeFunction","$FunctionObject","superConstructor","$GetPrototypeOf","createErrorThrowCompletion","intrinsics","TypeError","ObjectValue","SuperCall","Arguments","strictCode","env","newTarget","UndefinedValue","ReferenceError","func","argList","result","throwIfNotConcreteObject","thisER","BindThisValue"],"mappings":";;;;;;;AAcA;;AACA;;AACA;;AACA;;AACA;;;;AAlBA;;;;;;;;;AASA;AAWA,SAASA,mBAAT,CAA6BC,KAA7B,EAA2C;AACzC;AACA,MAAIC,MAAM,GAAGC,wBAAYC,kBAAZ,CAA+BH,KAA/B,CAAb,CAFyC,CAIzC;;;AACA,0BAAUC,MAAM,YAAYG,sCAA5B,EALyC,CAOzC;;AACA,MAAIC,cAAc,GAAGJ,MAAM,CAACK,eAA5B,CARyC,CAUzC;;AACA,MAAIC,gBAAgB,GAAGF,cAAc,CAACG,eAAf,EAAvB,CAXyC,CAazC;AAEA;;AACA,MAAI,CAAC,2BAAcR,KAAd,EAAqBO,gBAArB,CAAL,EAA6C;AAC3C,UAAMP,KAAK,CAACS,0BAAN,CAAiCT,KAAK,CAACU,UAAN,CAAiBC,SAAlD,EAA6D,qCAA7D,CAAN;AACD;;AACD,0BAAUJ,gBAAgB,YAAYK,kBAAtC,EAnByC,CAqBzC;;AACA,SAAOL,gBAAP;AACD,C,CAED;;;AACe,SAASM,SAAT,CACbC,SADa,EAEbC,UAFa,EAGbC,GAHa,EAIbhB,KAJa,EAKN;AACP;AACA,MAAIiB,SAAS,GAAG,0BAAajB,KAAb,CAAhB,CAFO,CAIP;;AACA,MAAIiB,SAAS,YAAYC,qBAAzB,EAAyC;AACvC,UAAMlB,KAAK,CAACS,0BAAN,CAAiCT,KAAK,CAACU,UAAN,CAAiBS,cAAlD,EAAkE,wBAAlE,CAAN;AACD,GAPM,CASP;;;AACA,MAAIC,IAAI,GAAGrB,mBAAmB,CAACC,KAAD,CAA9B,CAVO,CAYP;AAEA;;AACA,MAAIqB,OAAO,GAAG,oCAAuBrB,KAAvB,EAA8Be,UAA9B,EAA0CC,GAA1C,EAA+CF,SAA/C,CAAd,CAfO,CAiBP;AAEA;;AACA,MAAIQ,MAAM,GAAG,uBAAUtB,KAAV,EAAiBoB,IAAjB,EAAuBC,OAAvB,EAAgCJ,SAAhC,EAA2CM,wBAA3C,EAAb,CApBO,CAsBP;AAEA;;AACA,MAAIC,MAAM,GAAGtB,wBAAYC,kBAAZ,CAA+BH,KAA/B,CAAb,CAzBO,CA2BP;;;AACA,SAAOwB,MAAM,CAACC,aAAP,CAAqBH,MAArB,CAAP;AACD","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow strict-local */\n\nimport type { BabelNodeExpression, BabelNodeSpreadElement } from \"@babel/types\";\nimport type { Realm } from \"../realm.js\";\nimport type { LexicalEnvironment } from \"../environment.js\";\nimport { FunctionEnvironmentRecord } from \"../environment.js\";\nimport { Value, UndefinedValue, ObjectValue } from \"../values/index.js\";\nimport { GetNewTarget, ArgumentListEvaluation, Construct, IsConstructor } from \"../methods/index.js\";\nimport { Environment } from \"../singletons.js\";\nimport invariant from \"../invariant.js\";\n\nfunction GetSuperConstructor(realm: Realm) {\n  // 1. Let envRec be GetThisEnvironment( ).\n  let envRec = Environment.GetThisEnvironment(realm);\n\n  // 2. Assert: envRec is a function Environment Record.\n  invariant(envRec instanceof FunctionEnvironmentRecord);\n\n  // 3. Let activeFunction be envRec.[[FunctionObject]].\n  let activeFunction = envRec.$FunctionObject;\n\n  // 4. Let superConstructor be activeFunction.[[GetPrototypeOf]]().\n  let superConstructor = activeFunction.$GetPrototypeOf();\n\n  // 5. ReturnIfAbrupt(superConstructor).\n\n  // 6. If IsConstructor(superConstructor) is false, throw a TypeError exception.\n  if (!IsConstructor(realm, superConstructor)) {\n    throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"super called outside of constructor\");\n  }\n  invariant(superConstructor instanceof ObjectValue);\n\n  // 7. Return superConstructor.\n  return superConstructor;\n}\n\n// ECMA262 12.3.5.1\nexport default function SuperCall(\n  Arguments: Array<BabelNodeExpression | BabelNodeSpreadElement>,\n  strictCode: boolean,\n  env: LexicalEnvironment,\n  realm: Realm\n): Value {\n  // 1. Let newTarget be GetNewTarget().\n  let newTarget = GetNewTarget(realm);\n\n  // 2. If newTarget is undefined, throw a ReferenceError exception.\n  if (newTarget instanceof UndefinedValue) {\n    throw realm.createErrorThrowCompletion(realm.intrinsics.ReferenceError, \"newTarget is undefined\");\n  }\n\n  // 3. Let func be GetSuperConstructor().\n  let func = GetSuperConstructor(realm);\n\n  // 4. ReturnIfAbrupt(func).\n\n  // 5. Let argList be ArgumentListEvaluation of Arguments.\n  let argList = ArgumentListEvaluation(realm, strictCode, env, Arguments);\n\n  // 6. ReturnIfAbrupt(argList).\n\n  // 7. Let result be Construct(func, argList, newTarget).\n  let result = Construct(realm, func, argList, newTarget).throwIfNotConcreteObject();\n\n  // 8. ReturnIfAbrupt(result).\n\n  // 9. Let thisER be GetThisEnvironment( ).\n  let thisER = Environment.GetThisEnvironment(realm);\n\n  // 10. Return thisER.BindThisValue(result).\n  return thisER.BindThisValue(result);\n}\n"],"file":"SuperCall.js"}