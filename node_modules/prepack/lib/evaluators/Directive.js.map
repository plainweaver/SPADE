{"version":3,"sources":["../../src/evaluators/Directive.js"],"names":["ast","strictCode","env","realm","r","evaluate","value","Value"],"mappings":";;;;;;;AAaA;;AAEA;;;;AAfA;;;;;;;;;AASA;AAQe,kBAASA,GAAT,EAAkCC,UAAlC,EAAuDC,GAAvD,EAAgFC,KAAhF,EAAqG;AAClH,MAAIC,CAAC,GAAGF,GAAG,CAACG,QAAJ,CAAaL,GAAG,CAACM,KAAjB,EAAwBL,UAAxB,CAAR;AACA,0BAAUG,CAAC,YAAYG,YAAvB;AACA,SAAOH,CAAP;AACD","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow strict-local */\n\nimport type { Realm } from \"../realm.js\";\nimport type { LexicalEnvironment } from \"../environment.js\";\nimport { Value } from \"../values/index.js\";\nimport type { BabelNodeDirective } from \"@babel/types\";\nimport invariant from \"../invariant.js\";\n\nexport default function(ast: BabelNodeDirective, strictCode: boolean, env: LexicalEnvironment, realm: Realm): Value {\n  let r = env.evaluate(ast.value, strictCode);\n  invariant(r instanceof Value);\n  return r;\n}\n"],"file":"Directive.js"}