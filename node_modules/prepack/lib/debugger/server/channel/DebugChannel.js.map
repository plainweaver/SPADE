{"version":3,"sources":["../../../../src/debugger/server/channel/DebugChannel.js"],"names":["DebugChannel","constructor","ioWrapper","_requestReceived","_ioWrapper","_marshaller","MessageMarshaller","debuggerIsAttached","message","readInSyncOnce","parts","split","requestID","parseInt","isNaN","command","DebugMessage","DEBUGGER_ATTACHED","clearInFile","writeOut","PREPACK_READY_RESPONSE","readIn","readInSync","unmarshallRequest","contents","writeOutSync","sendBreakpointsAcknowledge","messageType","args","marshallBreakpointAcknowledge","breakpoints","sendStoppedResponse","reason","filePath","line","column","marshallStoppedResponse","sendStackframeResponse","stackframes","marshallStackFramesResponse","sendScopesResponse","scopes","marshallScopesResponse","sendVariablesResponse","variables","marshallVariablesResponse","sendEvaluateResponse","evalResult","marshallEvaluateResponse","shutdown","clearOutFile"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow strict-local */\nimport invariant from \"./../../common/invariant.js\";\nimport { FileIOWrapper } from \"./../../common/channel/FileIOWrapper.js\";\nimport { DebugMessage } from \"./../../common/channel/DebugMessage.js\";\nimport { MessageMarshaller } from \"./../../common/channel/MessageMarshaller.js\";\nimport type {\n  DebuggerRequest,\n  BreakpointsArguments,\n  Stackframe,\n  Scope,\n  Variable,\n  StoppedReason,\n  EvaluateResult,\n} from \"./../../common/types.js\";\n\n//Channel used by the DebugServer in Prepack to communicate with the debug adapter\nexport class DebugChannel {\n  constructor(ioWrapper: FileIOWrapper) {\n    this._requestReceived = false;\n    this._ioWrapper = ioWrapper;\n    this._marshaller = new MessageMarshaller();\n  }\n\n  _requestReceived: boolean;\n  _ioWrapper: FileIOWrapper;\n  _marshaller: MessageMarshaller;\n\n  /*\n  /* Only called in the beginning to check if a debugger is attached\n  */\n  debuggerIsAttached(): boolean {\n    let message = this._ioWrapper.readInSyncOnce();\n    if (message === null) return false;\n    let parts = message.split(\" \");\n    let requestID = parseInt(parts[0], 10);\n    invariant(!isNaN(requestID), \"Request ID must be a number\");\n    let command = parts[1];\n    if (command === DebugMessage.DEBUGGER_ATTACHED) {\n      this._requestReceived = true;\n      this._ioWrapper.clearInFile();\n      this.writeOut(`${requestID} ${DebugMessage.PREPACK_READY_RESPONSE}`);\n      return true;\n    }\n    return false;\n  }\n\n  /* Reads in a request from the debug adapter\n  /* The caller is responsible for sending a response with the appropriate\n  /* contents at the right time.\n  */\n  readIn(): DebuggerRequest {\n    let message = this._ioWrapper.readInSync();\n    this._requestReceived = true;\n    return this._marshaller.unmarshallRequest(message);\n  }\n\n  // Write out a response to the debug adapter\n  writeOut(contents: string): void {\n    //Prepack only writes back to the debug adapter in response to a request\n    invariant(this._requestReceived, \"Prepack writing message without being requested: \" + contents);\n    this._ioWrapper.writeOutSync(contents);\n    this._requestReceived = false;\n  }\n\n  sendBreakpointsAcknowledge(messageType: string, requestID: number, args: BreakpointsArguments): void {\n    this.writeOut(this._marshaller.marshallBreakpointAcknowledge(requestID, messageType, args.breakpoints));\n  }\n\n  sendStoppedResponse(reason: StoppedReason, filePath: string, line: number, column: number, message?: string): void {\n    this.writeOut(this._marshaller.marshallStoppedResponse(reason, filePath, line, column, message));\n  }\n\n  sendStackframeResponse(requestID: number, stackframes: Array<Stackframe>): void {\n    this.writeOut(this._marshaller.marshallStackFramesResponse(requestID, stackframes));\n  }\n\n  sendScopesResponse(requestID: number, scopes: Array<Scope>): void {\n    this.writeOut(this._marshaller.marshallScopesResponse(requestID, scopes));\n  }\n\n  sendVariablesResponse(requestID: number, variables: Array<Variable>): void {\n    this.writeOut(this._marshaller.marshallVariablesResponse(requestID, variables));\n  }\n\n  sendEvaluateResponse(requestID: number, evalResult: EvaluateResult): void {\n    this.writeOut(this._marshaller.marshallEvaluateResponse(requestID, evalResult));\n  }\n\n  shutdown(): void {\n    this._ioWrapper.clearInFile();\n    this._ioWrapper.clearOutFile();\n  }\n}\n"],"file":"DebugChannel.js"}