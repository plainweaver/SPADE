{"version":3,"sources":["../../../../src/debugger/adapter/channel/AdapterChannel.js"],"names":["AdapterChannel","constructor","inFilePath","outFilePath","_ioWrapper","FileIOWrapper","_marshaller","MessageMarshaller","_queue","Queue","_pendingRequestCallbacks","Map","_eventEmitter","EventEmitter","_handleFileReadError","err","console","error","process","exit","_processPrepackMessage","message","dbgResponse","unmarshallResponse","result","kind","emit","DebugMessage","BREAKPOINT_ADD_ACKNOWLEDGE","id","STOPPED_RESPONSE","STEPINTO_RESPONSE","_prepackWaiting","_processRequestCallback","trySendNextRequest","isEmpty","request","dequeue","listenOnFile","bind","writeOut","_addRequestCallback","requestID","callback","has","set","response","get","undefined","delete","registerChannelEvent","event","listener","addListener","launch","args","sendDebuggerStart","prepackCommand","sourceFiles","concat","prepackArguments","debugOutFilePath","debugInFilePath","runtime","prepackRuntime","length","_prepackProcess","child_process","spawn","on","kill","clean","stdout","outputCallback","exitCallback","run","enqueue","marshallContinueRequest","setBreakpoints","breakpoints","marshallSetBreakpointsRequest","getStackFrames","marshallStackFramesRequest","getScopes","frameId","marshallScopesRequest","getVariables","variablesReference","marshallVariablesRequest","stepInto","marshallStepIntoRequest","stepOver","marshallStepOverRequest","stepOut","marshallStepOutRequest","evaluate","expression","marshallEvaluateRequest","contents","writeOutSync","marshallDebuggerStart","messageProcessor","readIn","clearInFile","clearOutFile"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\nimport { FileIOWrapper } from \"./../../common/channel/FileIOWrapper.js\";\nimport { MessageMarshaller } from \"./../../common/channel/MessageMarshaller.js\";\nimport Queue from \"queue-fifo\";\nimport EventEmitter from \"events\";\nimport invariant from \"./../../common/invariant.js\";\nimport { DebugMessage } from \"./../../common/channel/DebugMessage.js\";\nimport child_process from \"child_process\";\nimport type { Breakpoint, DebuggerResponse, PrepackLaunchArguments } from \"./../../common/types.js\";\n\n//Channel used by the debug adapter to communicate with Prepack\nexport class AdapterChannel {\n  constructor(inFilePath: string, outFilePath: string) {\n    this._ioWrapper = new FileIOWrapper(true, inFilePath, outFilePath);\n    this._marshaller = new MessageMarshaller();\n    this._queue = new Queue();\n    this._pendingRequestCallbacks = new Map();\n    this._eventEmitter = new EventEmitter();\n  }\n  _ioWrapper: FileIOWrapper;\n  _marshaller: MessageMarshaller;\n  _queue: Queue;\n  _pendingRequestCallbacks: Map<number, (DebuggerResponse) => void>;\n  _prepackWaiting: boolean;\n  _eventEmitter: EventEmitter;\n  _prepackProcess: child_process.ChildProcess;\n\n  // Error handler for errors in files from the adapter channel\n  _handleFileReadError(err: ?ErrnoError): void {\n    console.error(err);\n    process.exit(1);\n  }\n\n  _processPrepackMessage(message: string): void {\n    let dbgResponse = this._marshaller.unmarshallResponse(message);\n    if (dbgResponse.result.kind === \"breakpoint-add\") {\n      this._eventEmitter.emit(DebugMessage.BREAKPOINT_ADD_ACKNOWLEDGE, dbgResponse.id, dbgResponse);\n    } else if (dbgResponse.result.kind === \"stopped\") {\n      this._eventEmitter.emit(DebugMessage.STOPPED_RESPONSE, dbgResponse);\n    } else if (dbgResponse.result.kind === \"stepInto\") {\n      this._eventEmitter.emit(DebugMessage.STEPINTO_RESPONSE, dbgResponse);\n    }\n    this._prepackWaiting = true;\n    this._processRequestCallback(dbgResponse);\n    this.trySendNextRequest();\n  }\n\n  // Check to see if the next request to Prepack can be sent and send it if so\n  trySendNextRequest(): boolean {\n    // check to see if Prepack is ready to accept another request\n    if (!this._prepackWaiting) return false;\n    // check that there is a message to send\n    if (this._queue.isEmpty()) return false;\n    let request = this._queue.dequeue();\n    this.listenOnFile(this._processPrepackMessage.bind(this));\n    this.writeOut(request);\n    this._prepackWaiting = false;\n    return true;\n  }\n\n  _addRequestCallback(requestID: number, callback: DebuggerResponse => void): void {\n    invariant(!this._pendingRequestCallbacks.has(requestID), \"Request ID already exists in pending requests\");\n    this._pendingRequestCallbacks.set(requestID, callback);\n  }\n\n  _processRequestCallback(response: DebuggerResponse): void {\n    let callback = this._pendingRequestCallbacks.get(response.id);\n    invariant(callback !== undefined, \"Request ID does not exist in pending requests: \" + response.id);\n    callback(response);\n    this._pendingRequestCallbacks.delete(response.id);\n  }\n\n  registerChannelEvent(event: string, listener: (response: DebuggerResponse) => void): void {\n    this._eventEmitter.addListener(event, listener);\n  }\n\n  launch(requestID: number, args: PrepackLaunchArguments, callback: DebuggerResponse => void): void {\n    this.sendDebuggerStart(requestID);\n    this.listenOnFile(this._processPrepackMessage.bind(this));\n    let prepackCommand = args.sourceFiles.concat(args.prepackArguments);\n    // Note: here the input file for the adapter is the output file for Prepack, and vice versa.\n    prepackCommand = prepackCommand.concat([\n      \"--debugInFilePath\",\n      args.debugOutFilePath,\n      \"--debugOutFilePath\",\n      args.debugInFilePath,\n    ]);\n\n    let runtime = \"prepack\";\n    if (args.prepackRuntime.length > 0) {\n      // user specified a Prepack path\n      runtime = \"node\";\n      // Increase node's memory allowance so Prepack can handle large inputs\n      prepackCommand = [\"--max_old_space_size=8192\", \"--stack_size=10000\"]\n        .concat([args.prepackRuntime])\n        .concat(prepackCommand);\n    }\n    this._prepackProcess = child_process.spawn(runtime, prepackCommand);\n\n    process.on(\"exit\", () => {\n      this._prepackProcess.kill();\n      this.clean();\n      process.exit();\n    });\n\n    process.on(\"SIGINT\", () => {\n      this._prepackProcess.kill();\n      process.exit();\n    });\n\n    this._prepackProcess.stdout.on(\"data\", args.outputCallback);\n\n    this._prepackProcess.on(\"exit\", args.exitCallback);\n    this._addRequestCallback(requestID, callback);\n  }\n\n  run(requestID: number, callback: DebuggerResponse => void): void {\n    this._queue.enqueue(this._marshaller.marshallContinueRequest(requestID));\n    this.trySendNextRequest();\n    this._addRequestCallback(requestID, callback);\n  }\n\n  setBreakpoints(requestID: number, breakpoints: Array<Breakpoint>, callback: DebuggerResponse => void): void {\n    this._queue.enqueue(this._marshaller.marshallSetBreakpointsRequest(requestID, breakpoints));\n    this.trySendNextRequest();\n    this._addRequestCallback(requestID, callback);\n  }\n\n  getStackFrames(requestID: number, callback: DebuggerResponse => void): void {\n    this._queue.enqueue(this._marshaller.marshallStackFramesRequest(requestID));\n    this.trySendNextRequest();\n    this._addRequestCallback(requestID, callback);\n  }\n\n  getScopes(requestID: number, frameId: number, callback: DebuggerResponse => void): void {\n    this._queue.enqueue(this._marshaller.marshallScopesRequest(requestID, frameId));\n    this.trySendNextRequest();\n    this._addRequestCallback(requestID, callback);\n  }\n\n  getVariables(requestID: number, variablesReference: number, callback: DebuggerResponse => void): void {\n    this._queue.enqueue(this._marshaller.marshallVariablesRequest(requestID, variablesReference));\n    this.trySendNextRequest();\n    this._addRequestCallback(requestID, callback);\n  }\n\n  stepInto(requestID: number, callback: DebuggerResponse => void): void {\n    this._queue.enqueue(this._marshaller.marshallStepIntoRequest(requestID));\n    this.trySendNextRequest();\n    this._addRequestCallback(requestID, callback);\n  }\n\n  stepOver(requestID: number, callback: DebuggerResponse => void): void {\n    this._queue.enqueue(this._marshaller.marshallStepOverRequest(requestID));\n    this.trySendNextRequest();\n    this._addRequestCallback(requestID, callback);\n  }\n\n  stepOut(requestID: number, callback: DebuggerResponse => void): void {\n    this._queue.enqueue(this._marshaller.marshallStepOutRequest(requestID));\n    this.trySendNextRequest();\n    this._addRequestCallback(requestID, callback);\n  }\n\n  evaluate(requestID: number, frameId: void | number, expression: string, callback: DebuggerResponse => void): void {\n    this._queue.enqueue(this._marshaller.marshallEvaluateRequest(requestID, frameId, expression));\n    this.trySendNextRequest();\n    this._addRequestCallback(requestID, callback);\n  }\n\n  writeOut(contents: string): void {\n    this._ioWrapper.writeOutSync(contents);\n  }\n\n  sendDebuggerStart(requestID: number): void {\n    this.writeOut(this._marshaller.marshallDebuggerStart(requestID));\n  }\n\n  listenOnFile(messageProcessor: (message: string) => void): void {\n    this._ioWrapper.readIn(this._handleFileReadError.bind(this), messageProcessor);\n  }\n\n  clean(): void {\n    this._ioWrapper.clearInFile();\n    this._ioWrapper.clearOutFile();\n  }\n}\n"],"file":"AdapterChannel.js"}