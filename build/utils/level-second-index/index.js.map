{"version":3,"sources":["../../../src/utils/level-second-index/index.js"],"names":["prefix","LevelIndex","db","options","store","main","valueEncoding","index","delRecursive","primaryIndex","reuseId","idGenerator","IdGenerator","prototype","putIndexedObject","indexedObject","key","promises","Object","keys","map","keyForIndexStore","mains","get","e","name","push","put","Promise","all","getAll","callback","iterator","err","result","x","value","getByPrimaryValue","indexedValue","length","Error","getByIndexedValue","indexName","id","getByQueryObject","queryObject","mainIds","_","intersection","mainId","delByPrimaryValue","del","delByIndexedValue","each","mainPK","newMains","splice","indexOf","delByQueryObject","_getAllObjects","_getAllIndices"],"mappings":";;;;;;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAXA;AACA;AAYA;AACA,MAAMA,MAAM,GAAG,4BAAO,GAAP,CAAf;AAEA;;;;;;AAKA,SAASC,UAAT,CAAoBC,EAApB,EAAwBC,OAAO,GAAG,EAAlC,EAAsC;AACpC,MAAI,EAAE,gBAAgBF,UAAlB,CAAJ,EAAmC;AACjC,WAAO,IAAIA,UAAJ,CAAeC,EAAf,EAAmBC,OAAnB,CAAP;AACD;;AAED,OAAKC,KAAL,GAAa,EAAb,CALoC,CAMpC;;AACA,OAAKA,KAAL,CAAWC,IAAX,GAAkB,2BAASH,EAAT,EAAa,MAAb,EAAqB;AAAEI,IAAAA,aAAa,EAAE;AAAjB,GAArB,CAAlB,CAPoC,CAQpC;;AACA,OAAKF,KAAL,CAAWG,KAAX,GAAmB,2BAASL,EAAT,EAAa,OAAb,EAAsB;AAAEI,IAAAA,aAAa,EAAE;AAAjB,GAAtB,CAAnB;AAEA,OAAKE,YAAL,GAAoBL,OAAO,CAACK,YAA5B;AACA,OAAKC,YAAL,GAAoBN,OAAO,CAACM,YAA5B;AACA,OAAKC,OAAL,GAAeP,OAAO,CAACO,OAAR,IAAmB,IAAlC,CAboC,CAaI;;AACxC,OAAKC,WAAL,GAAmB,IAAIC,oBAAJ,CAAgB,IAAhB,CAAnB;AACD;;AAEDX,UAAU,CAACY,SAAX,CAAqBC,gBAArB,GAAwC,uCAAe,gBAAeC,aAAf,EAA8B;AACnF,QAAMC,GAAG,GAAG,MAAM,KAAKL,WAAL,CAAiBI,aAAjB,CAAlB,CADmF,CAGnF;;AACA,QAAME,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYJ,aAAZ,EAA2BK,GAA3B,CAA+Bb,KAAK,IAAI;AACvD,WAAO,CAAC,YAAY;AAClB,YAAMc,gBAAgB,GAAGrB,MAAM,CAACO,KAAD,EAAQQ,aAAa,CAACR,KAAD,CAArB,CAA/B,CADkB,CAGlB;;AACA,UAAIe,KAAJ;;AACA,UAAI;AACFA,QAAAA,KAAK,GAAG,MAAM,KAAKlB,KAAL,CAAWG,KAAX,CAAiBgB,GAAjB,CAAqBF,gBAArB,CAAd;AACD,OAFD,CAEE,OAAOG,CAAP,EAAU;AACV,YAAIA,CAAC,CAACC,IAAF,KAAW,eAAf,EAAgC,MAAMD,CAAN,CAAhC,KACKF,KAAK,GAAG,EAAR;AACN,OAViB,CAYlB;;;AACAA,MAAAA,KAAK,CAACI,IAAN,CAAWV,GAAX;AACA,YAAM,KAAKZ,KAAL,CAAWG,KAAX,CAAiBoB,GAAjB,CAAqBN,gBAArB,EAAuCC,KAAvC,CAAN;AACD,KAfM,GAAP;AAgBD,GAjBgB,CAAjB;AAmBA,QAAMM,kBAAQC,GAAR,CAAYZ,QAAZ,CAAN;AACA,QAAM,KAAKb,KAAL,CAAWC,IAAX,CAAgBsB,GAAhB,CAAoBX,GAApB,EAAyBD,aAAzB,CAAN;AACA,SAAOC,GAAP;AACD,CA1BuC,CAAxC,C,CA4BA;;AACAf,UAAU,CAACY,SAAX,CAAqBiB,MAArB,GAA8B,sCAAc,CAAd,EAAiB,UAASC,QAAT,EAAmB;AAChE,oCAAO,KAAK3B,KAAL,CAAWC,IAAX,CAAgB2B,QAAhB,EAAP,EAAmC,CAACC,GAAD,EAAMC,MAAN,KAAiBH,QAAQ,CAACE,GAAD,EAAMC,MAAM,CAACd,GAAP,CAAWe,CAAC,IAAIA,CAAC,CAACC,KAAlB,CAAN,CAA5D;AACD,CAF6B,CAA9B;AAIAnC,UAAU,CAACY,SAAX,CAAqBwB,iBAArB,GAAyC,uCAAe,gBAAeC,YAAf,EAA6B;AACnF,QAAMhB,KAAK,GAAG,MAAM,KAAKlB,KAAL,CAAWG,KAAX,CAAiBgB,GAAjB,CAAqBvB,MAAM,CAAC,KAAKS,YAAN,EAAoB6B,YAApB,CAA3B,CAApB;AACA,MAAIhB,KAAK,CAACiB,MAAN,GAAe,CAAnB,EAAsB,MAAM,IAAIC,KAAJ,CAC1B,8FAD0B,CAAN;AAGtB,SAAO,MAAM,KAAKpC,KAAL,CAAWC,IAAX,CAAgBkB,GAAhB,CAAoBD,KAAK,CAAC,CAAD,CAAzB,CAAb;AACD,CANwC,CAAzC;AAQArB,UAAU,CAACY,SAAX,CAAqB4B,iBAArB,GAAyC,uCAAe,gBAAeC,SAAf,EAA0BJ,YAA1B,EAAwC;AAC9F,QAAMhB,KAAK,GAAG,MAAM,KAAKlB,KAAL,CAAWG,KAAX,CAAiBgB,GAAjB,CAAqBvB,MAAM,CAAC0C,SAAD,EAAYJ,YAAZ,CAA3B,CAApB;AAEA,SAAO,MAAMV,kBAAQC,GAAR,CAAYP,KAAK,CAACF,GAAN,CAAUuB,EAAE,IAAI,KAAKvC,KAAL,CAAWC,IAAX,CAAgBkB,GAAhB,CAAoBoB,EAApB,CAAhB,CAAZ,CAAb;AACD,CAJwC,CAAzC;AAMA1C,UAAU,CAACY,SAAX,CAAqB+B,gBAArB,GAAwC,uCAAe,gBAAeC,WAAf,EAA4B;AACjF,QAAMC,OAAO,GAAG,MAAMlB,kBAAQR,GAAR,CAAYF,MAAM,CAACC,IAAP,CAAY0B,WAAZ,CAAZ,EAAsCH,SAAS,IAAI;AACvE,WAAO,KAAKtC,KAAL,CAAWG,KAAX,CAAiBgB,GAAjB,CAAqBvB,MAAM,CAAC0C,SAAD,EAAYG,WAAW,CAACH,SAAD,CAAvB,CAA3B,CAAP;AACD,GAFqB,CAAtB;AAIA,SAAO,MAAMd,kBAAQR,GAAR,CAAY2B,gBAAEC,YAAF,CAAe,GAAGF,OAAlB,CAAZ,EAAwCG,MAAM,IAAI;AAC7D,WAAO,KAAK7C,KAAL,CAAWC,IAAX,CAAgBkB,GAAhB,CAAoB0B,MAApB,CAAP;AACD,GAFY,CAAb;AAGD,CARuC,CAAxC;AAUAhD,UAAU,CAACY,SAAX,CAAqBqC,iBAArB,GAAyC,uCAAe,gBAAeZ,YAAf,EAA6B;AACnF,QAAMhB,KAAK,GAAG,MAAM,KAAKlB,KAAL,CAAWG,KAAX,CAAiBgB,GAAjB,CAAqBvB,MAAM,CAAC,KAAKS,YAAN,EAAoB6B,YAApB,CAA3B,CAApB;AACA,MAAIhB,KAAK,CAACiB,MAAN,GAAe,CAAnB,EAAsB,MAAM,IAAIC,KAAJ,CAC1B,8FAD0B,CAAN;AAGtB,QAAM,KAAKpC,KAAL,CAAWC,IAAX,CAAgB8C,GAAhB,CAAoB7B,KAAK,CAAC,CAAD,CAAzB,CAAN;AACA,QAAM,KAAKlB,KAAL,CAAWG,KAAX,CAAiB4C,GAAjB,CAAqBnD,MAAM,CAAC,KAAKS,YAAN,EAAoB6B,YAApB,CAA3B,CAAN;AACD,CAPwC,CAAzC;AASArC,UAAU,CAACY,SAAX,CAAqBuC,iBAArB,GAAyC,uCAAe,gBAAeV,SAAf,EAA0BJ,YAA1B,EAAwC;AAC9F;AACA,QAAMhB,KAAK,GAAG,MAAM,KAAKlB,KAAL,CAAWG,KAAX,CAAiBgB,GAAjB,CAAqBvB,MAAM,CAAC0C,SAAD,EAAYJ,YAAZ,CAA3B,CAApB;AACA,MAAI,CAAChB,KAAL,EACE,MAAM,IAAIkB,KAAJ,CAAU,gEAAV,CAAN;AACF,MAAIlB,KAAK,CAACiB,MAAN,GAAe,CAAf,IAAoB,CAAC,KAAK/B,YAA9B,EACE,MAAM,IAAIgC,KAAJ,CAAU,kHAAV,CAAN,CAN4F,CAQ9F;;AACAZ,oBAAQyB,IAAR,CAAa/B,KAAb,EAAoB,MAAMgC,MAAN,IAAgB;AAClC;AACA,UAAMvC,aAAa,GAAG,MAAM,KAAKX,KAAL,CAAWC,IAAX,CAAgBkB,GAAhB,CAAoB+B,MAApB,CAA5B;AACA,UAAM1B,kBAAQyB,IAAR,CAAanC,MAAM,CAACC,IAAP,CAAYJ,aAAZ,CAAb,EAAyC,MAAM2B,SAAN,IAAmB;AAChE;AACA,YAAMrB,gBAAgB,GAAGrB,MAAM,CAAC0C,SAAD,EAAY3B,aAAa,CAAC2B,SAAD,CAAzB,CAA/B;AACA,YAAMpB,KAAK,GAAG,MAAM,KAAKlB,KAAL,CAAWG,KAAX,CAAiBgB,GAAjB,CAAqBF,gBAArB,CAApB;AACA,YAAMkC,QAAQ,GAAGjC,KAAK,CAACkC,MAAN,CAAalC,KAAK,CAACmC,OAAN,CAAcH,MAAd,CAAb,EAAoC,CAApC,CAAjB;AACA,YAAM,KAAKlD,KAAL,CAAWG,KAAX,CAAiB4C,GAAjB,CAAqB9B,gBAArB,CAAN;AACA,YAAM,KAAKjB,KAAL,CAAWG,KAAX,CAAiBoB,GAAjB,CAAqBN,gBAArB,EAAuCkC,QAAvC,CAAN;AACD,KAPK,CAAN;AAQA,UAAM,KAAKnD,KAAL,CAAWC,IAAX,CAAgB8C,GAAhB,CAAoBG,MAApB,CAAN;AACD,GAZD;;AAcA,SAAOhC,KAAP;AACD,CAxBwC,CAAzC;AA0BArB,UAAU,CAACY,SAAX,CAAqB6C,gBAArB,GAAwC,uCAAe,gBAAeb,WAAf,EAA4B;AACjF,QAAMC,OAAO,GAAG,MAAMlB,kBAAQR,GAAR,CAAYF,MAAM,CAACC,IAAP,CAAY0B,WAAZ,CAAZ,EAAsCH,SAAS,IAAI;AACvE,WAAO,KAAKtC,KAAL,CAAWG,KAAX,CAAiBgB,GAAjB,CAAqBvB,MAAM,CAAC0C,SAAD,EAAYG,WAAW,CAACH,SAAD,CAAvB,CAA3B,CAAP;AACD,GAFqB,CAAtB;AAIA,SAAO,MAAMd,kBAAQR,GAAR,CAAY2B,gBAAEC,YAAF,CAAe,GAAGF,OAAlB,CAAZ,EAAwCG,MAAM,IAAI;AAC7D,WAAO,KAAK7C,KAAL,CAAWC,IAAX,CAAgB8C,GAAhB,CAAoBF,MAApB,CAAP;AACD,GAFY,CAAb;AAGD,CARuC,CAAxC,C,CAUA;;AAEAhD,UAAU,CAACY,SAAX,CAAqB8C,cAArB,GAAsC,YAAW,CAAE,CAAnD;;AAEA1D,UAAU,CAACY,SAAX,CAAqB+C,cAArB,GAAsC,YAAW,CAAE,CAAnD;;eAEe3D,U","sourcesContent":["// storage.putObject(object, callback)\n// storage.getObjectsByIndex(propertyKeyString, value) returns array of items\n\nimport _ from 'lodash';\nimport Promise from 'bluebird';\nimport sublevel from 'subleveldown';\nimport concat from 'level-concat-iterator';\nimport { appendCallback, returnPromise } from '../versatile-function';\nimport autoinc from '../level-auto-inc';\nimport Prefix from '../level-prefixer';\nimport fixedkey from '../level-fixed-key';\nimport IdGenerator from './IdGenerator';\n\n// for keys of IndexStore\nconst prefix = Prefix('!');\n\n/**\n * When putting, each key of given object will be treated as an index.\n * @param db abstract-leveldown compatible store.\n * @param options delRecursive: Boolean, primaryIndex: String\n */\nfunction LevelIndex(db, options = {}) {\n  if (!(this instanceof LevelIndex)) {\n    return new LevelIndex(db, options);\n  }\n\n  this.store = {};\n  // stores object consists of keys locating parts in indexed store\n  this.store.main = sublevel(db, 'main', { valueEncoding: 'json' });\n  // reverse lookup store. (key: indexName + indexedValue, value: array of id of indexedObject)\n  this.store.index = sublevel(db, 'index', { valueEncoding: 'json'});\n\n  this.delRecursive = options.delRecursive;\n  this.primaryIndex = options.primaryIndex;\n  this.reuseId = options.reuseId || true; // overwrite & insert between order\n  this.idGenerator = new IdGenerator(this);\n}\n\nLevelIndex.prototype.putIndexedObject = appendCallback(async function(indexedObject) {\n  const key = await this.idGenerator(indexedObject);\n\n  // chunk out the object by indices and store them\n  const promises = Object.keys(indexedObject).map(index => {\n    return (async () => {\n      const keyForIndexStore = prefix(index, indexedObject[index]);\n\n      // find objects stored with same index\n      let mains;\n      try {\n        mains = await this.store.index.get(keyForIndexStore);\n      } catch (e) {\n        if (e.name !== 'NotFoundError') throw e;\n        else mains = [];\n      }\n\n      // put new ids array to reverse lookup store.\n      mains.push(key);\n      await this.store.index.put(keyForIndexStore, mains);\n    })();\n  });\n\n  await Promise.all(promises);\n  await this.store.main.put(key, indexedObject);\n  return key;\n});\n\n// returns all of indexedObject\nLevelIndex.prototype.getAll = returnPromise(0, function(callback) {\n  concat(this.store.main.iterator(), (err, result) => callback(err, result.map(x => x.value)));\n});\n\nLevelIndex.prototype.getByPrimaryValue = appendCallback(async function(indexedValue) {\n  const mains = await this.store.index.get(prefix(this.primaryIndex, indexedValue));\n  if (mains.length > 1) throw new Error(\n    'Multiple values have found with primary index. Unique value must be stored in primary index.'\n  );\n  return await this.store.main.get(mains[0]);\n});\n\nLevelIndex.prototype.getByIndexedValue = appendCallback(async function(indexName, indexedValue) {\n  const mains = await this.store.index.get(prefix(indexName, indexedValue));\n\n  return await Promise.all(mains.map(id => this.store.main.get(id)));\n});\n\nLevelIndex.prototype.getByQueryObject = appendCallback(async function(queryObject) {\n  const mainIds = await Promise.map(Object.keys(queryObject), indexName => {\n    return this.store.index.get(prefix(indexName, queryObject[indexName]));\n  });\n\n  return await Promise.map(_.intersection(...mainIds), mainId => {\n    return this.store.main.get(mainId);\n  });\n});\n\nLevelIndex.prototype.delByPrimaryValue = appendCallback(async function(indexedValue) {\n  const mains = await this.store.index.get(prefix(this.primaryIndex, indexedValue));\n  if (mains.length > 1) throw new Error(\n    'Multiple values have found with primary index. Unique value must be stored in primary index.'\n  );\n  await this.store.main.del(mains[0]);\n  await this.store.index.del(prefix(this.primaryIndex, indexedValue));\n});\n\nLevelIndex.prototype.delByIndexedValue = appendCallback(async function(indexName, indexedValue) {\n  // primary keys of objects to be removed\n  const mains = await this.store.index.get(prefix(indexName, indexedValue));\n  if (!mains)\n    throw new Error(\"[level-second-index] No indexedObjects found with given value.\");\n  if (mains.length > 1 && !this.delRecursive)\n    throw new Error(\"[level-second-index] Cannot delete multiple indexedObject at once because option 'delRecursive' is set to false.\");\n\n  // deletes every indexedObjects\n  Promise.each(mains, async mainPK => {\n    // deletes one indexedObject\n    const indexedObject = await this.store.main.get(mainPK);\n    await Promise.each(Object.keys(indexedObject), async indexName => {\n      // deletes from reverse index lookup store\n      const keyForIndexStore = prefix(indexName, indexedObject[indexName]);\n      const mains = await this.store.index.get(keyForIndexStore);\n      const newMains = mains.splice(mains.indexOf(mainPK), 1);\n      await this.store.index.del(keyForIndexStore);\n      await this.store.index.put(keyForIndexStore, newMains);\n    });\n    await this.store.main.del(mainPK);\n  });\n\n  return mains;\n});\n\nLevelIndex.prototype.delByQueryObject = appendCallback(async function(queryObject) {\n  const mainIds = await Promise.map(Object.keys(queryObject), indexName => {\n    return this.store.index.get(prefix(indexName, queryObject[indexName]));\n  });\n\n  return await Promise.map(_.intersection(...mainIds), mainId => {\n    return this.store.main.del(mainId);\n  });\n});\n\n// -- experimental methods --\n\nLevelIndex.prototype._getAllObjects = function() {};\n\nLevelIndex.prototype._getAllIndices = function() {};\n\nexport default LevelIndex;\n"],"file":"index.js"}