{"version":3,"sources":["../../../../src/utils/level-domain/lib/findModuleExports.js"],"names":["findModuleExports","ast","exportingPaths","find","js","ExportDefaultDeclaration","each","p","push","ExpressionStatement","expression","left","object","name","property","processAssignment","forEach","path","parent","node","type","Error","sortedExports","map","index","range","sort","a","b","reduce","result","default","expressionStatement","value","declaration"],"mappings":";;;;;;;AAAA;;;;AAEA;;;;;;;;;;;AAYe,SAASA,iBAAT,CAA2BC,GAA3B,EAAgC;AAC7C,QAAMC,cAAc,GAAG,EAAvB;AAEA;;AACAD,EAAAA,GAAG,CAACE,IAAJ,CAASC,qBAAGC,wBAAZ,EAAsCC,IAAtC,CAA2CC,CAAC,IAAI;AAAEL,IAAAA,cAAc,CAACM,IAAf,CAAoBD,CAApB;AAAyB,GAA3E;AAEA;;AACAN,EAAAA,GAAG,CAACE,IAAJ,CAASC,qBAAGK,mBAAZ,EAAiC;AAC/BC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAE;AACNC,UAAAA,IAAI,EAAE;AADA,SADJ;AAIJC,QAAAA,QAAQ,EAAE;AACRD,UAAAA,IAAI,EAAE;AADE;AAJN;AADI;AADmB,GAAjC,EAWGP,IAXH,CAWQC,CAAC,IAAI;AAAEL,IAAAA,cAAc,CAACM,IAAf,CAAoBD,CAApB;AAAyB,GAXxC;;AAaA,WAASQ,iBAAT,GAA6B,CAE5B;;AAAA,GAtB4C,CAwB7C;;AACAb,EAAAA,cAAc,CAACc,OAAf,CAAuBC,IAAI,IAAI;AAC7B,QAAIA,IAAI,CAACC,MAAL,CAAYC,IAAZ,CAAiBC,IAAjB,KAA0B,SAA9B,EAAyC;AACvC,YAAM,IAAIC,KAAJ,CAAU,+DAAV,CAAN;AACD;AACF,GAJD,EAzB6C,CA+B7C;;AACA,QAAMC,aAAa,GAAGpB,cAAc,CACjCqB,GADmB,CACf,CAACN,IAAD,EAAOO,KAAP,MAAkB;AAAEA,IAAAA,KAAF;AAASC,IAAAA,KAAK,EAAER,IAAI,CAACQ;AAArB,GAAlB,CADe,EAEnBC,IAFmB,CAEd,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACF,KAAF,CAAQ,CAAR,IAAaG,CAAC,CAACH,KAAF,CAAQ,CAAR,CAAb,GAA0B,CAAC,CAA3B,GAA+B,CAF3B,EAGnBF,GAHmB,CAGf,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAetB,cAAc,CAACsB,KAAD,CAHd,CAAtB;AAKA,SAAOF,aAAa,CAACO,MAAd,CAAqB,CAACC,MAAD,EAASb,IAAT,KAAkB;AAC5C,QAAIA,IAAI,CAACG,IAAL,KAAc,0BAAlB,EAA8C;AAC5CU,MAAAA,MAAM,CAACC,OAAP,GAAiB3B,qBAAG4B,mBAAH,CAAuBf,IAAI,CAACgB,KAAL,CAAWC,WAAlC,CAAjB;AACD;;AAED,WAAOJ,MAAP;AACD,GANM,EAMJ,EANI,CAAP;AAOD","sourcesContent":["import js from 'jscodeshift';\n\n/*\n * supported) export default\n * supported) module.exports =\n * todo) module['exports'] =\n * todo) module = { exports: {}, ...module }\n * todo) exports =\n * todo) exports.property\n * todo) exports['property']\n *\n * does not allow middle\n */\n\nexport default function findModuleExports(ast) {\n  const exportingPaths = [];\n\n  /* export default */\n  ast.find(js.ExportDefaultDeclaration).each(p => { exportingPaths.push(p); });\n\n  /* module.exports = */\n  ast.find(js.ExpressionStatement, {\n    expression: {\n      left: {\n        object: {\n          name: 'module'\n        },\n        property: {\n          name: 'exports'\n        }\n      }\n    }\n  }).each(p => { exportingPaths.push(p); });\n\n  function processAssignment() {\n\n  };\n\n  // prevents defining exports dynamically in function body\n  exportingPaths.forEach(path => {\n    if (path.parent.node.type !== 'Program') {\n      throw new Error('exporting statement must not be placed in middle of function.');\n    }\n  });\n\n  // sorts from the front range to latest range\n  const sortedExports = exportingPaths\n    .map((path, index) => ({ index, range: path.range }))\n    .sort((a, b) => a.range[0] < b.range[0] ? -1 : 1 )\n    .map(({ index }) => exportingPaths[index]);\n\n  return sortedExports.reduce((result, path) => {\n    if (path.type === 'ExportDefaultDeclaration') {\n      result.default = js.expressionStatement(path.value.declaration);\n    }\n\n    return result;\n  }, {});\n}\n"],"file":"findModuleExports.js"}