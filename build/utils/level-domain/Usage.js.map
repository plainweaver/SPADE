{"version":3,"sources":["../../../src/utils/level-domain/Usage.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","exports","value","Op","objToStr","toString","hasOwn","BaseType","assert","deep","check","str","shallowStringify","Error","arrayOf","elemType","ArrayType","_super","_this","call","kind","isArray","every","elem","IdentityType","String","result","ObjectType","fields","join","field","type","name","OrType","types","some","PredicateType","predicate","Def","typeName","baseNames","ownFields","allSupertypes","supertypeList","allFields","fieldNames","finalized","buildable","buildParams","isSupertypeOf","that","checkAllFields","checkFieldByName","child","getValue","keys","bases","supertypeNames","_i","arguments","length","i","forEach","baseName","indexOf","push","Field","defaultFn","hidden","JSON","stringify","obj","map","key","typesPlugin","_fork","Type","or","from","isObject","bicfIndex","builtInCtorFns","builtInCtorTypes","def","defCache","DefImpl","hasDef","builtInTypes","defBuiltInType","example","objStr","isString","isFunction","isRegExp","isDate","Date","isNumber","isBoolean","isNull","isUndefined","defFromValue","vDef","build","addParam","built","param","arg","isArgAvailable","all","message","builder","args","argc","nodePrototype","builders","getBuilderName","enumerable","console","error","finalize","extend","fieldName","namedTypes","populateSupertypeList","lastIndexOf","wrapExpressionBuilderWithStatement","getSupertypeNames","slice","computeSupertypeLookupTable","candidates","table","typeNames","typeNameCount","j","superTypeName","defineMethod","func","old","configurable","replace","upperCasePrefix","len","toLowerCase","charAt","getStatementBuilderName","getFieldNames","object","getFieldValue","eachField","callback","context","someField","wrapperName","wrapped","expressionStatement","apply","list","lastSeen","pos","to","into","default"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      }) ||\n      function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n    return extendStatics(d, b);\n  }\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Op = Object.prototype;\nvar objToStr = Op.toString;\nvar hasOwn = Op.hasOwnProperty;\nvar BaseType = /** @class */ (function () {\n  function BaseType() {\n  }\n\n  BaseType.prototype.assert = function (value, deep) {\n    if (!this.check(value, deep)) {\n      var str = shallowStringify(value);\n      throw new Error(str + \" does not match type \" + this);\n    }\n    return true;\n  };\n  BaseType.prototype.arrayOf = function () {\n    var elemType = this;\n    return new ArrayType(elemType);\n  };\n  return BaseType;\n}());\nvar ArrayType = /** @class */ (function (_super) {\n  __extends(ArrayType, _super);\n\n  function ArrayType(elemType) {\n    var _this = _super.call(this) || this;\n    _this.elemType = elemType;\n    _this.kind = \"ArrayType\";\n    return _this;\n  }\n\n  ArrayType.prototype.toString = function () {\n    return \"[\" + this.elemType + \"]\";\n  };\n  ArrayType.prototype.check = function (value, deep) {\n    var _this = this;\n    return Array.isArray(value) && value.every(function (elem) {\n      return _this.elemType.check(elem, deep);\n    });\n  };\n  return ArrayType;\n}(BaseType));\nvar IdentityType = /** @class */ (function (_super) {\n  __extends(IdentityType, _super);\n\n  function IdentityType(value) {\n    var _this = _super.call(this) || this;\n    _this.value = value;\n    _this.kind = \"IdentityType\";\n    return _this;\n  }\n\n  IdentityType.prototype.toString = function () {\n    return String(this.value);\n  };\n  IdentityType.prototype.check = function (value, deep) {\n    var result = value === this.value;\n    if (!result && typeof deep === \"function\") {\n      deep(this, value);\n    }\n    return result;\n  };\n  return IdentityType;\n}(BaseType));\nvar ObjectType = /** @class */ (function (_super) {\n  __extends(ObjectType, _super);\n\n  function ObjectType(fields) {\n    var _this = _super.call(this) || this;\n    _this.fields = fields;\n    _this.kind = \"ObjectType\";\n    return _this;\n  }\n\n  ObjectType.prototype.toString = function () {\n    return \"{ \" + this.fields.join(\", \") + \" }\";\n  };\n  ObjectType.prototype.check = function (value, deep) {\n    return (objToStr.call(value) === objToStr.call({}) &&\n      this.fields.every(function (field) {\n        return field.type.check(value[field.name], deep);\n      }));\n  };\n  return ObjectType;\n}(BaseType));\nvar OrType = /** @class */ (function (_super) {\n  __extends(OrType, _super);\n\n  function OrType(types) {\n    var _this = _super.call(this) || this;\n    _this.types = types;\n    _this.kind = \"OrType\";\n    return _this;\n  }\n\n  OrType.prototype.toString = function () {\n    return this.types.join(\" | \");\n  };\n  OrType.prototype.check = function (value, deep) {\n    return this.types.some(function (type) {\n      return type.check(value, deep);\n    });\n  };\n  return OrType;\n}(BaseType));\nvar PredicateType = /** @class */ (function (_super) {\n  __extends(PredicateType, _super);\n\n  function PredicateType(name, predicate) {\n    var _this = _super.call(this) || this;\n    _this.name = name;\n    _this.predicate = predicate;\n    _this.kind = \"PredicateType\";\n    return _this;\n  }\n\n  PredicateType.prototype.toString = function () {\n    return this.name;\n  };\n  PredicateType.prototype.check = function (value, deep) {\n    var result = this.predicate(value, deep);\n    if (!result && typeof deep === \"function\") {\n      deep(this, value);\n    }\n    return result;\n  };\n  return PredicateType;\n}(BaseType));\nvar Def = /** @class */ (function () {\n  function Def(type, typeName) {\n    this.type = type;\n    this.typeName = typeName;\n    this.baseNames = [];\n    this.ownFields = Object.create(null);\n    // Includes own typeName. Populated during finalization.\n    this.allSupertypes = Object.create(null);\n    // Linear inheritance hierarchy. Populated during finalization.\n    this.supertypeList = [];\n    // Includes inherited fields.\n    this.allFields = Object.create(null);\n    // Non-hidden keys of allFields.\n    this.fieldNames = [];\n    // This property will be overridden as true by individual Def instances\n    // when they are finalized.\n    this.finalized = false;\n    // False by default until .build(...) is called on an instance.\n    this.buildable = false;\n    this.buildParams = [];\n  }\n\n  Def.prototype.isSupertypeOf = function (that) {\n    if (that instanceof Def) {\n      if (this.finalized !== true ||\n        that.finalized !== true) {\n        throw new Error(\"\");\n      }\n      return hasOwn.call(that.allSupertypes, this.typeName);\n    }\n    else {\n      throw new Error(that + \" is not a Def\");\n    }\n  };\n  Def.prototype.checkAllFields = function (value, deep) {\n    var allFields = this.allFields;\n    if (this.finalized !== true) {\n      throw new Error(\"\" + this.typeName);\n    }\n\n    function checkFieldByName(name) {\n      var field = allFields[name];\n      var type = field.type;\n      var child = field.getValue(value);\n      return type.check(child, deep);\n    }\n\n    return value !== null &&\n      typeof value === \"object\" &&\n      Object.keys(allFields).every(checkFieldByName);\n  };\n  Def.prototype.bases = function () {\n    var supertypeNames = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      supertypeNames[_i] = arguments[_i];\n    }\n    var bases = this.baseNames;\n    if (this.finalized) {\n      if (supertypeNames.length !== bases.length) {\n        throw new Error(\"\");\n      }\n      for (var i = 0; i < supertypeNames.length; i++) {\n        if (supertypeNames[i] !== bases[i]) {\n          throw new Error(\"\");\n        }\n      }\n      return this;\n    }\n    supertypeNames.forEach(function (baseName) {\n      // This indexOf lookup may be O(n), but the typical number of base\n      // names is very small, and indexOf is a native Array method.\n      if (bases.indexOf(baseName) < 0) {\n        bases.push(baseName);\n      }\n    });\n    return this; // For chaining.\n  };\n  return Def;\n}());\nexports.Def = Def;\nvar Field = /** @class */ (function () {\n  function Field(name, type, defaultFn, hidden) {\n    this.name = name;\n    this.type = type;\n    this.defaultFn = defaultFn;\n    this.hidden = !!hidden;\n  }\n\n  Field.prototype.toString = function () {\n    return JSON.stringify(this.name) + \": \" + this.type;\n  };\n  Field.prototype.getValue = function (obj) {\n    var value = obj[this.name];\n    if (typeof value !== \"undefined\") {\n      return value;\n    }\n    if (typeof this.defaultFn === \"function\") {\n      value = this.defaultFn.call(obj);\n    }\n    return value;\n  };\n  return Field;\n}());\n\nfunction shallowStringify(value) {\n  if (Array.isArray(value)) {\n    return \"[\" + value.map(shallowStringify).join(\", \") + \"]\";\n  }\n  if (value && typeof value === \"object\") {\n    return \"{ \" + Object.keys(value).map(function (key) {\n      return key + \": \" + value[key];\n    }).join(\", \") + \" }\";\n  }\n  return JSON.stringify(value);\n}\n\nfunction typesPlugin(_fork) {\n  var Type = {\n    or: function () {\n      var types = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        types[_i] = arguments[_i];\n      }\n      return new OrType(types.map(function (type) {\n        return Type.from(type);\n      }));\n    },\n    from: function (value, name) {\n      if (value instanceof ArrayType ||\n        value instanceof IdentityType ||\n        value instanceof ObjectType ||\n        value instanceof OrType ||\n        value instanceof PredicateType) {\n        return value;\n      }\n      // The Def type is used as a helper for constructing compound\n      // interface types for AST nodes.\n      if (value instanceof Def) {\n        return value.type;\n      }\n      // Support [ElemType] syntax.\n      if (isArray.check(value)) {\n        if (value.length !== 1) {\n          throw new Error(\"only one element type is permitted for typed arrays\");\n        }\n        return new ArrayType(Type.from(value[0]));\n      }\n      // Support { someField: FieldType, ... } syntax.\n      if (isObject.check(value)) {\n        return new ObjectType(Object.keys(value).map(function (name) {\n          return new Field(name, Type.from(value[name], name));\n        }));\n      }\n      if (typeof value === \"function\") {\n        var bicfIndex = builtInCtorFns.indexOf(value);\n        if (bicfIndex >= 0) {\n          return builtInCtorTypes[bicfIndex];\n        }\n        if (typeof name !== \"string\") {\n          throw new Error(\"missing name\");\n        }\n        return new PredicateType(name, value);\n      }\n      // As a last resort, toType returns a type that matches any value that\n      // is === from. This is primarily useful for literal values like\n      // toType(null), but it has the additional advantage of allowing\n      // toType to be a total function.\n      return new IdentityType(value);\n    },\n    // Define a type whose name is registered in a namespace (the defCache) so\n    // that future definitions will return the same type given the same name.\n    // In particular, this system allows for circular and forward definitions.\n    // The Def object d returned from Type.def may be used to configure the\n    // type d.type by calling methods such as d.bases, d.build, and d.field.\n    def: function (typeName) {\n      return hasOwn.call(defCache, typeName)\n        ? defCache[typeName]\n        : defCache[typeName] = new DefImpl(typeName);\n    },\n    hasDef: function (typeName) {\n      return hasOwn.call(defCache, typeName);\n    }\n  };\n  var builtInCtorFns = [];\n  var builtInCtorTypes = [];\n  var builtInTypes = {};\n\n  function defBuiltInType(example, name) {\n    var objStr = objToStr.call(example);\n    var type = new PredicateType(name, function (value) {\n      return objToStr.call(value) === objStr;\n    });\n    builtInTypes[name] = type;\n    if (example && typeof example.constructor === \"function\") {\n      builtInCtorFns.push(example.constructor);\n      builtInCtorTypes.push(type);\n    }\n    return type;\n  }\n\n  // These types check the underlying [[Class]] attribute of the given\n  // value, rather than using the problematic typeof operator. Note however\n  // that no subtyping is considered; so, for instance, isObject.check\n  // returns false for [], /./, new Date, and null.\n  var isString = defBuiltInType(\"truthy\", \"string\");\n  var isFunction = defBuiltInType(function () {\n  }, \"function\");\n  var isArray = defBuiltInType([], \"array\");\n  var isObject = defBuiltInType({}, \"object\");\n  var isRegExp = defBuiltInType(/./, \"RegExp\");\n  var isDate = defBuiltInType(new Date, \"Date\");\n  var isNumber = defBuiltInType(3, \"number\");\n  var isBoolean = defBuiltInType(true, \"boolean\");\n  var isNull = defBuiltInType(null, \"null\");\n  var isUndefined = defBuiltInType(void 0, \"undefined\");\n  // In order to return the same Def instance every time Type.def is called\n  // with a particular name, those instances need to be stored in a cache.\n  var defCache = Object.create(null);\n\n  function defFromValue(value) {\n    if (value && typeof value === \"object\") {\n      var type = value.type;\n      if (typeof type === \"string\" &&\n        hasOwn.call(defCache, type)) {\n        var d = defCache[type];\n        if (d.finalized) {\n          return d;\n        }\n      }\n    }\n    return null;\n  }\n\n  var DefImpl = /** @class */ (function (_super) {\n    __extends(DefImpl, _super);\n\n    function DefImpl(typeName) {\n      var _this = _super.call(this, new PredicateType(typeName, function (value, deep) {\n        return _this.check(value, deep);\n      }), typeName) || this;\n      return _this;\n    }\n\n    DefImpl.prototype.check = function (value, deep) {\n      if (this.finalized !== true) {\n        throw new Error(\"prematurely checking unfinalized type \" + this.typeName);\n      }\n      // A Def type can only match an object value.\n      if (value === null || typeof value !== \"object\") {\n        return false;\n      }\n      var vDef = defFromValue(value);\n      if (!vDef) {\n        // If we couldn't infer the Def associated with the given value,\n        // and we expected it to be a SourceLocation or a Position, it was\n        // probably just missing a \"type\" field (because Esprima does not\n        // assign a type property to such nodes). Be optimistic and let\n        // this.checkAllFields make the final decision.\n        if (this.typeName === \"SourceLocation\" ||\n          this.typeName === \"Position\") {\n          return this.checkAllFields(value, deep);\n        }\n        // Calling this.checkAllFields for any other type of node is both\n        // bad for performance and way too forgiving.\n        return false;\n      }\n      // If checking deeply and vDef === this, then we only need to call\n      // checkAllFields once. Calling checkAllFields is too strict when deep\n      // is false, because then we only care about this.isSupertypeOf(vDef).\n      if (deep && vDef === this) {\n        return this.checkAllFields(value, deep);\n      }\n      // In most cases we rely exclusively on isSupertypeOf to make O(1)\n      // subtyping determinations. This suffices in most situations outside\n      // of unit tests, since interface conformance is checked whenever new\n      // instances are created using builder functions.\n      if (!this.isSupertypeOf(vDef)) {\n        return false;\n      }\n      // The exception is when deep is true; then, we recursively check all\n      // fields.\n      if (!deep) {\n        return true;\n      }\n      // Use the more specific Def (vDef) to perform the deep check, but\n      // shallow-check fields defined by the less specific Def (this).\n      return vDef.checkAllFields(value, deep)\n        && this.checkAllFields(value, false);\n    };\n    DefImpl.prototype.build = function () {\n      var _this = this;\n      var buildParams = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        buildParams[_i] = arguments[_i];\n      }\n      // Calling Def.prototype.build multiple times has the effect of merely\n      // redefining this property.\n      this.buildParams = buildParams;\n      if (this.buildable) {\n        // If this Def is already buildable, update self.buildParams and\n        // continue using the old builder function.\n        return this;\n      }\n      // Every buildable type will have its \"type\" field filled in\n      // automatically. This includes types that are not subtypes of Node,\n      // like SourceLocation, but that seems harmless (TODO?).\n      this.field(\"type\", String, function () {\n        return _this.typeName;\n      });\n      // Override Dp.buildable for this Def instance.\n      this.buildable = true;\n      var addParam = function (built, param, arg, isArgAvailable) {\n        if (hasOwn.call(built, param))\n          return;\n        var all = _this.allFields;\n        if (!hasOwn.call(all, param)) {\n          throw new Error(\"\" + param);\n        }\n        var field = all[param];\n        var type = field.type;\n        var value;\n        if (isArgAvailable) {\n          value = arg;\n        }\n        else if (field.defaultFn) {\n          // Expose the partially-built object to the default\n          // function as its `this` object.\n          value = field.defaultFn.call(built);\n        }\n        else {\n          var message = \"no value or default function given for field \" +\n            JSON.stringify(param) + \" of \" + _this.typeName + \"(\" +\n            _this.buildParams.map(function (name) {\n              return all[name];\n            }).join(\", \") + \")\";\n          throw new Error(message);\n        }\n        if (!type.check(value)) {\n          throw new Error(shallowStringify(value) +\n            \" does not match field \" + field +\n            \" of type \" + _this.typeName);\n        }\n        built[param] = value;\n      };\n      // Calling the builder function will construct an instance of the Def,\n      // with positional arguments mapped to the fields original passed to .build.\n      // If not enough arguments are provided, the default value for the remaining fields\n      // will be used.\n      var builder = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        var argc = args.length;\n        if (!_this.finalized) {\n          throw new Error(\"attempting to instantiate unfinalized type \" +\n            _this.typeName);\n        }\n        var built = Object.create(nodePrototype);\n        _this.buildParams.forEach(function (param, i) {\n          if (i < argc) {\n            addParam(built, param, args[i], true);\n          }\n          else {\n            addParam(built, param, null, false);\n          }\n        });\n        Object.keys(_this.allFields).forEach(function (param) {\n          // Use the default value.\n          addParam(built, param, null, false);\n        });\n        // Make sure that the \"type\" field was filled automatically.\n        if (built.type !== _this.typeName) {\n          throw new Error(\"\");\n        }\n        return built;\n      };\n      // Calling .from on the builder function will construct an instance of the Def,\n      // using field values from the passed object. For fields missing from the passed object,\n      // their default value will be used.\n      builder.from = function (obj) {\n        if (!_this.finalized) {\n          throw new Error(\"attempting to instantiate unfinalized type \" +\n            _this.typeName);\n        }\n        var built = Object.create(nodePrototype);\n        Object.keys(_this.allFields).forEach(function (param) {\n          if (hasOwn.call(obj, param)) {\n            addParam(built, param, obj[param], true);\n          }\n          else {\n            addParam(built, param, null, false);\n          }\n        });\n        // Make sure that the \"type\" field was filled automatically.\n        if (built.type !== _this.typeName) {\n          throw new Error(\"\");\n        }\n        return built;\n      };\n      Object.defineProperty(builders, getBuilderName(this.typeName), {\n        enumerable: true,\n        value: builder\n      });\n      return this;\n    };\n    // The reason fields are specified using .field(...) instead of an object\n    // literal syntax is somewhat subtle: the object literal syntax would\n    // support only one key and one value, but with .field(...) we can pass\n    // any number of arguments to specify the field.\n    DefImpl.prototype.field = function (name, type, defaultFn, hidden) {\n      if (this.finalized) {\n        console.error(\"Ignoring attempt to redefine field \" +\n          JSON.stringify(name) + \" of finalized type \" +\n          JSON.stringify(this.typeName));\n        return this;\n      }\n      this.ownFields[name] = new Field(name, Type.from(type), defaultFn, hidden);\n      return this; // For chaining.\n    };\n    DefImpl.prototype.finalize = function () {\n      var _this = this;\n      // It's not an error to finalize a type more than once, but only the\n      // first call to .finalize does anything.\n      if (!this.finalized) {\n        var allFields = this.allFields;\n        var allSupertypes = this.allSupertypes;\n        this.baseNames.forEach(function (name) {\n          var def = defCache[name];\n          if (def instanceof Def) {\n            def.finalize();\n            extend(allFields, def.allFields);\n            extend(allSupertypes, def.allSupertypes);\n          }\n          else {\n            var message = \"unknown supertype name \" +\n              JSON.stringify(name) +\n              \" for subtype \" +\n              JSON.stringify(_this.typeName);\n            throw new Error(message);\n          }\n        });\n        // TODO Warn if fields are overridden with incompatible types.\n        extend(allFields, this.ownFields);\n        allSupertypes[this.typeName] = this;\n        this.fieldNames.length = 0;\n        for (var fieldName in allFields) {\n          if (hasOwn.call(allFields, fieldName) &&\n            !allFields[fieldName].hidden) {\n            this.fieldNames.push(fieldName);\n          }\n        }\n        // Types are exported only once they have been finalized.\n        Object.defineProperty(namedTypes, this.typeName, {\n          enumerable: true,\n          value: this.type\n        });\n        this.finalized = true;\n        // A linearization of the inheritance hierarchy.\n        populateSupertypeList(this.typeName, this.supertypeList);\n        if (this.buildable &&\n          this.supertypeList.lastIndexOf(\"Expression\") >= 0) {\n          wrapExpressionBuilderWithStatement(this.typeName);\n        }\n      }\n    };\n    return DefImpl;\n  }(Def));\n  // Note that the list returned by this function is a copy of the internal\n  // supertypeList, *without* the typeName itself as the first element.\n  function getSupertypeNames(typeName) {\n    if (!hasOwn.call(defCache, typeName)) {\n      throw new Error(\"\");\n    }\n    var d = defCache[typeName];\n    if (d.finalized !== true) {\n      throw new Error(\"\");\n    }\n    return d.supertypeList.slice(1);\n  }\n\n  // Returns an object mapping from every known type in the defCache to the\n  // most specific supertype whose name is an own property of the candidates\n  // object.\n  function computeSupertypeLookupTable(candidates) {\n    var table = {};\n    var typeNames = Object.keys(defCache);\n    var typeNameCount = typeNames.length;\n    for (var i = 0; i < typeNameCount; ++i) {\n      var typeName = typeNames[i];\n      var d = defCache[typeName];\n      if (d.finalized !== true) {\n        throw new Error(\"\" + typeName);\n      }\n      for (var j = 0; j < d.supertypeList.length; ++j) {\n        var superTypeName = d.supertypeList[j];\n        if (hasOwn.call(candidates, superTypeName)) {\n          table[typeName] = superTypeName;\n          break;\n        }\n      }\n    }\n    return table;\n  }\n\n  var builders = Object.create(null);\n  // This object is used as prototype for any node created by a builder.\n  var nodePrototype = {};\n  // Call this function to define a new method to be shared by all AST\n  // nodes. The replaced method (if any) is returned for easy wrapping.\n  function defineMethod(name, func) {\n    var old = nodePrototype[name];\n    // Pass undefined as func to delete nodePrototype[name].\n    if (isUndefined.check(func)) {\n      delete nodePrototype[name];\n    }\n    else {\n      isFunction.assert(func);\n      Object.defineProperty(nodePrototype, name, {\n        enumerable: true,\n        configurable: true,\n        value: func\n      });\n    }\n    return old;\n  }\n\n  function getBuilderName(typeName) {\n    return typeName.replace(/^[A-Z]+/, function (upperCasePrefix) {\n      var len = upperCasePrefix.length;\n      switch (len) {\n        case 0:\n          return \"\";\n        // If there's only one initial capital letter, just lower-case it.\n        case 1:\n          return upperCasePrefix.toLowerCase();\n        default:\n          // If there's more than one initial capital letter, lower-case\n          // all but the last one, so that XMLDefaultDeclaration (for\n          // example) becomes xmlDefaultDeclaration.\n          return upperCasePrefix.slice(0, len - 1).toLowerCase() +\n            upperCasePrefix.charAt(len - 1);\n      }\n    });\n  }\n\n  function getStatementBuilderName(typeName) {\n    typeName = getBuilderName(typeName);\n    return typeName.replace(/(Expression)?$/, \"Statement\");\n  }\n\n  var namedTypes = {};\n\n  // Like Object.keys, but aware of what fields each AST type should have.\n  function getFieldNames(object) {\n    var d = defFromValue(object);\n    if (d) {\n      return d.fieldNames.slice(0);\n    }\n    if (\"type\" in object) {\n      throw new Error(\"did not recognize object of type \" +\n        JSON.stringify(object.type));\n    }\n    return Object.keys(object);\n  }\n\n  // Get the value of an object property, taking object.type and default\n  // functions into account.\n  function getFieldValue(object, fieldName) {\n    var d = defFromValue(object);\n    if (d) {\n      var field = d.allFields[fieldName];\n      if (field) {\n        return field.getValue(object);\n      }\n    }\n    return object && object[fieldName];\n  }\n\n  // Iterate over all defined fields of an object, including those missing\n  // or undefined, passing each field name and effective value (as returned\n  // by getFieldValue) to the callback. If the object has no corresponding\n  // Def, the callback will never be called.\n  function eachField(object, callback, context) {\n    getFieldNames(object).forEach(function (name) {\n      callback.call(this, name, getFieldValue(object, name));\n    }, context);\n  }\n\n  // Similar to eachField, except that iteration stops as soon as the\n  // callback returns a truthy value. Like Array.prototype.some, the final\n  // result is either true or false to indicates whether the callback\n  // returned true for any element or not.\n  function someField(object, callback, context) {\n    return getFieldNames(object).some(function (name) {\n      return callback.call(this, name, getFieldValue(object, name));\n    }, context);\n  }\n\n  // Adds an additional builder for Expression subtypes\n  // that wraps the built Expression in an ExpressionStatements.\n  function wrapExpressionBuilderWithStatement(typeName) {\n    var wrapperName = getStatementBuilderName(typeName);\n    // skip if the builder already exists\n    if (builders[wrapperName])\n      return;\n    // the builder function to wrap with builders.ExpressionStatement\n    var wrapped = builders[getBuilderName(typeName)];\n    // skip if there is nothing to wrap\n    if (!wrapped)\n      return;\n    var builder = function () {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      return builders.expressionStatement(wrapped.apply(builders, args));\n    };\n    builder.from = function () {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      return builders.expressionStatement(wrapped.from.apply(builders, args));\n    };\n    builders[wrapperName] = builder;\n  }\n\n  function populateSupertypeList(typeName, list) {\n    list.length = 0;\n    list.push(typeName);\n    var lastSeen = Object.create(null);\n    for (var pos = 0; pos < list.length; ++pos) {\n      typeName = list[pos];\n      var d = defCache[typeName];\n      if (d.finalized !== true) {\n        throw new Error(\"\");\n      }\n      // If we saw typeName earlier in the breadth-first traversal,\n      // delete the last-seen occurrence.\n      if (hasOwn.call(lastSeen, typeName)) {\n        delete list[lastSeen[typeName]];\n      }\n      // Record the new index of the last-seen occurrence of typeName.\n      lastSeen[typeName] = pos;\n      // Enqueue the base names of this type.\n      list.push.apply(list, d.baseNames);\n    }\n    // Compaction loop to remove array holes.\n    for (var to = 0, from = to, len = list.length; from < len; ++from) {\n      if (hasOwn.call(list, from)) {\n        list[to++] = list[from];\n      }\n    }\n    list.length = to;\n  }\n\n  function extend(into, from) {\n    Object.keys(from).forEach(function (name) {\n      into[name] = from[name];\n    });\n    return into;\n  }\n\n  function finalize() {\n    Object.keys(defCache).forEach(function (name) {\n      defCache[name].finalize();\n    });\n  }\n\n  return {\n    Type: Type,\n    builtInTypes: builtInTypes,\n    getSupertypeNames: getSupertypeNames,\n    computeSupertypeLookupTable: computeSupertypeLookupTable,\n    builders: builders,\n    defineMethod: defineMethod,\n    getBuilderName: getBuilderName,\n    getStatementBuilderName: getStatementBuilderName,\n    namedTypes: namedTypes,\n    getFieldNames: getFieldNames,\n    getFieldValue: getFieldValue,\n    eachField: eachField,\n    someField: someField,\n    finalize: finalize,\n  };\n}\n\nexports.default = typesPlugin;\n;\n"],"file":"Usage.js"}