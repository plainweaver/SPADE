{"version":3,"sources":["../../../src/utils/level-sync-cache/index.test.js"],"names":["describe","it","hardStorage","put","cachedStorage","result","get","assert","exists","del","e","equal","name"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;;;AAEAA,QAAQ,CAAC,iBAAD,EAAoB,MAAM;AAChCC,EAAAA,EAAE,CAAC,KAAD,EAAQ,YAAY;AACpB,UAAMC,WAAW,GAAG,sBAAQ,uBAAR,CAApB;AACA,UAAMA,WAAW,CAACC,GAAZ,CAAgB,GAAhB,EAAqB,GAArB,CAAN;AACA,UAAMC,aAAa,GAAG,oBAAMF,WAAN,CAAtB;AACA,UAAMG,MAAM,GAAG,MAAMD,aAAa,CAACE,GAAd,CAAkB,GAAlB,CAArB;;AACAC,iBAAOC,MAAP,CAAcH,MAAd;AACD,GANC,CAAF;AAOD,CARO,CAAR;AAUAL,QAAQ,CAAC,uBAAD,EAA0B,MAAM;AACtCC,EAAAA,EAAE,CAAC,SAAD,EAAY,YAAY;AACxB,UAAMC,WAAW,GAAG,sBAAQ,uBAAR,CAApB;AACA,UAAME,aAAa,GAAG,oBAAMF,WAAN,CAAtB;AACA,UAAME,aAAa,CAACD,GAAd,CAAkB,GAAlB,EAAuB,GAAvB,CAAN;AACA,UAAME,MAAM,GAAG,MAAMH,WAAW,CAACI,GAAZ,CAAgB,GAAhB,CAArB;;AACAC,iBAAOC,MAAP,CAAcH,MAAd;AACD,GANC,CAAF;AAQAJ,EAAAA,EAAE,CAAC,oBAAD,EAAuB,YAAY;AACnC,UAAMC,WAAW,GAAG,sBAAQ,uBAAR,CAApB;AACA,UAAME,aAAa,GAAG,oBAAMF,WAAN,CAAtB;AACA,UAAME,aAAa,CAACD,GAAd,CAAkB,GAAlB,EAAuB,GAAvB,CAAN;AACA,UAAMC,aAAa,CAACK,GAAd,CAAkB,GAAlB,CAAN;;AACA,QAAI;AACF,YAAMP,WAAW,CAACI,GAAZ,CAAgB,GAAhB,CAAN;AACD,KAFD,CAEE,OAAOI,CAAP,EAAU;AACVH,mBAAOI,KAAP,CAAaD,CAAC,CAACE,IAAf,EAAqB,eAArB;AACD;AACF,GAVC,CAAF;AAWD,CApBO,CAAR","sourcesContent":["import levelup from 'levelup';\nimport memdown from 'memdown';\nimport { assert } from 'chai';\nimport cache from './index';\n\ndescribe('setup loads all', () => {\n  it('get', async () => {\n    const hardStorage = levelup(memdown());\n    await hardStorage.put('1', '1');\n    const cachedStorage = cache(hardStorage);\n    const result = await cachedStorage.get('1');\n    assert.exists(result);\n  });\n});\n\ndescribe('data should be synced', () => {\n  it('put-get', async () => {\n    const hardStorage = levelup(memdown());\n    const cachedStorage = cache(hardStorage);\n    await cachedStorage.put('1', '1');\n    const result = await hardStorage.get('1');\n    assert.exists(result);\n  });\n\n  it('put-del-get throws', async () => {\n    const hardStorage = levelup(memdown());\n    const cachedStorage = cache(hardStorage);\n    await cachedStorage.put('1', '1');\n    await cachedStorage.del('1');\n    try {\n      await hardStorage.get('1');\n    } catch (e) {\n      assert.equal(e.name, 'NotFoundError');\n    }\n  })\n});\n"],"file":"index.test.js"}