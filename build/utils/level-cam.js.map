{"version":3,"sources":["../../src/utils/level-cam.js"],"names":["createHash","data","info","Buffer","byteLength","key","from","value","crypto","update","digest","LevelCAM","storage","prototype","get","callback","promise","Promise","resolve","then","catch","e","put","Error","console","log","del","has","name"],"mappings":"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","sourcesContent":["import crypto from 'crypto';\nimport promisify from './promisify';\nimport transform from './level-transform';\nimport { transformBefore as hashKeyFromValue, transformAfter as placeValueToKey } from './transform-hashed-key';\n\n// return utf-8 string, object\nfunction createHash(data, info = {}) {\n  if (Buffer.byteLength(data) < 32) {\n    return {\n      key: Buffer.from(data),\n      value: { ...info },\n    };\n  } else {\n    return {\n      key: crypto.createHash('sha256').update(data).digest(),\n      value: {\n        ...info,\n        value: data,\n      },\n    }\n  }\n}\n\n// todo v1 - simple key generation\n// todo v2 - fixed radix\n// todo v3 - dynamic recursive radix\n// todo v4 - use different storages by layers, each scoped.\n\nexport default function LevelCAM(storage) {\n  if (!(this instanceof LevelCAM)) {\n    return new LevelCAM(storage)\n  }\n\n  this.storage = storage;\n}\n\nLevelCAM.prototype.get = function(data, callback) {\n  let promise;\n\n  if (!callback) {\n    callback = promisify();\n    promise = callback.promise;\n  }\n\n  Promise.resolve()\n    .then(() => {\n      return this.storage.get(createHash(data).key);\n    })\n    .then(value => {\n      callback(null, value);\n    })\n    .catch(e => {\n      callback(e);\n    });\n\n  return promise;\n};\n\nLevelCAM.prototype.put = function(data, info, callback) {\n  let promise;\n\n  if (info && info.value) {\n    throw new Error('Argument info cannot have property named value.')\n  }\n\n  if (typeof info === 'function') {\n    callback = info;\n  }\n\n  if (!callback) {\n    callback = promisify();\n    promise = callback.promise;\n  }\n\n  console.log(data);\n  const { key, value } = createHash(data, info);\n\n  Promise.resolve()\n    .then(() => {\n      return this.storage.put(key, value);\n    })\n    .then(() => {\n      callback(null, key);\n    })\n    .catch(e => {\n      callback(e);\n    });\n\n  return promise;\n};\n\nLevelCAM.prototype.del = async function(data, callback) {\n  let promise;\n\n  if (!callback) {\n    callback = promisify();\n    promise = callback.promise;\n  }\n\n  const { key } = createHash(data);\n\n  Promise.resolve()\n    .then(() => {\n      return this.storage.del(key);\n    })\n    .then(() => {\n      callback();\n    })\n    .catch(e => {\n      callback(e);\n    });\n\n  return promise;\n};\n\nLevelCAM.prototype.has = function(data, callback) {\n  let promise;\n\n  if (!callback) {\n    callback = promisify();\n    promise = callback.promise;\n  }\n\n  const { key } = createHash(data);\n\n  this.storage.get(key)\n    .then(key => {\n      callback(null, !!key);\n    })\n    .catch(e => {\n      if (e.name !== 'NotFoundError') {\n        callback(e);\n      }\n    });\n\n  return promise;\n};\n\n// LevelCAM.prototype.createReadStream = function(...args) {\n//   return this.storage.createReadStream({\n//     key:\n//   })\n// };\n//\n// LevelCAM.prototype.createKeyStream = function(...args) {\n//   return this.storage.rangedSearch.createKeyStream(...args);\n// };\n//\n// LevelCAM.prototype.createValueStream = function(...args) {\n//   return this.storage.rangedSearch.createValueStream(...args);\n// };\n//\n// LevelCAM.prototype.iterator = function(...args) {\n//   return this.storage.rangedSearch.iterator(...args);\n// };\n"],"file":"level-cam.js"}