{"version":3,"sources":["../../src/utils/generateId.js"],"names":["length","generateId","checkIdExists","filePath","config","gen_id_file_path","minLength","gen_id_min_length","Error","parseInt","fs","readFileSync","e","code","writeFileSync","generate","id","Math","floor","random","pow","exist","name"],"mappings":";;;;;;;AAAA;;;;AAEA,IAAIA,MAAJ;;AAEe,eAAeC,UAAf,CAA0BC,aAA1B,EAAyC;AACtD,QAAMC,QAAQ,GAAG,KAAKC,MAAL,CAAYC,gBAA7B;AACA,QAAMC,SAAS,GAAG,KAAKF,MAAL,CAAYG,iBAAZ,IAAiC,CAAnD;;AAEA,MAAI,CAACJ,QAAL,EAAe;AACb,UAAM,IAAIK,KAAJ,CAAU,sCAAV,CAAN;AACD;;AAED,MAAI,CAACR,MAAL,EAAa;AACX,QAAI;AACFA,MAAAA,MAAM,GAAGS,QAAQ,CAACC,YAAGC,YAAH,CAAgBR,QAAhB,CAAD,CAAjB;AACD,KAFD,CAEE,OAAOS,CAAP,EAAU;AACV,UAAIA,CAAC,CAACC,IAAF,IAAUD,CAAC,CAACC,IAAF,KAAW,QAAzB,EAAmC;AAAE;AACnCH,oBAAGI,aAAH,CAAiBX,QAAjB,EAA2BG,SAA3B;;AACAN,QAAAA,MAAM,GAAGM,SAAT;AACD,OAHD,MAGO;AACL,cAAMM,CAAN;AACD;AACF;AACF;;AAED,QAAMG,QAAQ,GAAG,YAAY;AAC3B,UAAMC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACG,GAAL,CAAS,EAAT,EAAapB,MAAb,CAA3B,CAAX;;AACA,QAAI;AACF,YAAMqB,KAAK,GAAG,MAAMnB,aAApB;;AACA,UAAImB,KAAJ,EAAW;AACTX,oBAAGI,aAAH,CAAiBX,QAAjB,EAA2BH,MAAM,GAAG,CAApC;;AACAA,QAAAA,MAAM,IAAI,CAAV;AACA,eAAO,MAAMe,QAAQ,EAArB;AACD;AACF,KAPD,CAOE,OAAOH,CAAP,EAAU;AACV,UAAIA,CAAC,CAACU,IAAF,KAAW,eAAf,EAAgC;AAC9B,eAAON,EAAP;AACD,OAFD,MAEO;AACL,cAAMJ,CAAN;AACD;AACF;AACF,GAhBD;;AAkBA,SAAO,MAAMG,QAAQ,EAArB;AACD;;AAAA","sourcesContent":["import fs from 'fs';\n\nlet length;\n\nexport default async function generateId(checkIdExists) {\n  const filePath = this.config.gen_id_file_path;\n  const minLength = this.config.gen_id_min_length || 4;\n\n  if (!filePath) {\n    throw new Error('this.config.gen_id_file_path missing');\n  }\n\n  if (!length) {\n    try {\n      length = parseInt(fs.readFileSync(filePath));\n    } catch (e) {\n      if (e.code && e.code === 'ENOENT') { // file not found\n        fs.writeFileSync(filePath, minLength);\n        length = minLength;\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  const generate = async () => {\n    const id = Math.floor(Math.random() * Math.pow(10, length));\n    try {\n      const exist = await checkIdExists;\n      if (exist) {\n        fs.writeFileSync(filePath, length + 1);\n        length += 1;\n        return await generate();\n      }\n    } catch (e) {\n      if (e.name === 'NotFoundError') {\n        return id;\n      } else {\n        throw e;\n      }\n    }\n  };\n\n  return await generate();\n};\n"],"file":"generateId.js"}