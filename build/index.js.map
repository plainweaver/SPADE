{"version":3,"sources":["../src/index.js"],"names":["System","require","default","system","receptor","receiver","use","recursion","tcpServer","port","main","shard","listen"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEO,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAP,CAAoBC,OAAnC;AAEP;;;;;;;;;;;eAOgB,kBAAkB;AAChC,QAAMC,MAAM,GAAG,IAAIH,MAAJ,EAAf;AAEA,QAAMG,MAAM,CAACC,QAAP,CAAgBC,QAAQ,IAAI;AAChCA,IAAAA,QAAQ,CACLC,GADH,CACOC,0BADP;AAGAF,IAAAA,QAAQ,CACLC,GADH,CACOE,0BADP,EACkB;AADlB,KAEGF,GAFH,CAEO,kCAAY;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAAZ,CAFP,EAGGH,GAHH,CAGO,iCAAW;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAAX,CAHP;AAKAJ,IAAAA,QAAQ,CAACK,IAAT,GAAgBP,MAAM,CAACQ,KAAP,CAAaC,MAA7B;AACD,GAVK,CAAN;AAYA,SAAO,MAAMT,MAAM,EAAnB;AACD,CAhBc,E","sourcesContent":["import recursion from './overlays/name_tag:recursion';\nimport tcpServer from './overlays/name_tag:tcp-server';\nimport tcpAnalyzer from './overlays/name_tag:tcp-analyzer';\nimport tcpUtility from './overlays/name_tag:tcp-utility';\n\nexport const System = require('./System').default;\n\n/**\n * A shape of system recommended as default.\n * If you are a system builder, please modify as you want by importing from './System'.\n *\n * Hardcoded in (sub)system mean it's standardized.\n * Written here means it's in level of proposal or free to change.\n */\nexport default (async function () {\n  const system = new System();\n\n  await system.receptor(receiver => {\n    receiver\n      .use(recursion);\n\n    receiver\n      .use(tcpServer) // â‰ˆ system.shard.createProtocol(...)\n      .use(tcpAnalyzer({ port: 8000 }))\n      .use(tcpUtility({ port: 9000 }));\n\n    receiver.main = system.shard.listen;\n  });\n\n  return await system();\n})();\n"],"file":"index.js"}