{"version":3,"sources":["../../src/methods/init.js"],"names":["DirCorruptedError","Error","createDirsIfNotExist","dirs","Object","values","alreadyExists","filter","dir","fs","existsSync","length","map","mkdirSync","recursive","createMinLengthForId","storage","config","createDomainsForNames","createDomain","name","momentary","createSubDomain","permanent","unique","shared","disableComplement","leaveIntersectionOnly","createCounters","Promise","all","counterName","createCounter","setActionsOfDomains","getDomainIdsByName","createSimpleDiscriminator","typeName","data","info","Array","isArray","type","includes","console","log","setDomainDiscriminator","createBootstrapAdmin","self","init","location","storageForEtc","storages","forEtc","storageForParticles","forParticles","storageForDomains","forDomains","storageForLogs","forLogs","res","rej","get","err","value","put"],"mappings":"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","sourcesContent":["import fs from 'fs';\nimport storages from './storages';\nimport autokey from '../../utils/level-auto-inc/autokey';\n\nconst DirCorruptedError = new Error('Your directory has been corrupted. You might have terminated unexpectedly during an initialization.');\n\nfunction createDirsIfNotExist(dirs) {\n  if (typeof dirs === 'object') {\n    dirs = Object.values(dirs);\n  }\n\n  const alreadyExists = dirs.filter(dir => fs.existsSync(dir));\n\n  if (alreadyExists.length > 0) {\n    if (alreadyExists.length < dirs.length) {\n      throw DirCorruptedError;\n    }\n\n    return alreadyExists;\n  }\n\n  return dirs.map(dir => fs.mkdirSync(dir, { recursive: true }));\n}\n\n\nasync function createMinLengthForId(storage, config) {\n  // await storage.put('minLengthForId', config.idGenerator.minLength);\n}\n\nasync function createDomainsForNames(storage) {\n  await storage.createDomain({ name: 'identity' });\n  const name = await storage.createDomain({ name: 'name' });\n\n  const momentary = await storage.createSubDomain({ name: 'momentary' }, name);\n  const permanent = await storage.createSubDomain({ name: 'permanent' }, name);\n  const unique = await storage.createSubDomain({ name: 'unique' }, name);\n  const shared = await storage.createSubDomain({ name: 'shared' }, name);\n\n  // await storage.disableSymmetricDifference(momentary, unique);\n  // await storage.disableSymmetricDifference(momentary, shared);\n  // await storage.disableSymmetricDifference(permanent, unique);\n  // await storage.disableSymmetricDifference(permanent, shared);\n  // await storage.enableIntersection(momentary, unique);\n  // await storage.enableIntersection(momentary, shared);\n  // await storage.enableIntersection(permanent, unique);\n  // await storage.enableIntersection(permanent, shared);\n\n  await storage.disableComplement(name);\n\n  await storage.leaveIntersectionOnly(momentary, unique);\n  await storage.leaveIntersectionOnly(momentary, shared);\n  await storage.leaveIntersectionOnly(permanent, unique);\n  await storage.leaveIntersectionOnly(permanent, shared);\n}\n\nasync function createCounters(storage) {\n  return Promise.all([\n    autokey(storage, { counterName: 'counterForCell' }).createCounter(),\n    autokey(storage, { counterName: 'counterForType' }).createCounter(),\n    autokey(storage, { counterName: 'counterForEmission' }).createCounter(),\n    autokey(storage, { counterName: 'counterForResolution' }).createCounter(),\n    autokey(storage, { counterName: 'counterForRejection' }).createCounter(),\n  ]);\n}\n\nasync function setActionsOfDomains(storage) {\n  const permanent = await storage.getDomainIdsByName('permanent');\n  const momentary = await storage.getDomainIdsByName('momentary');\n  const unique = await storage.getDomainIdsByName('unique');\n  const shared = await storage.getDomainIdsByName('shared');\n\n  function createSimpleDiscriminator(typeName) {\n    return function({ data, info }) {\n      if (!Array.isArray(info.type)) info.type = [ info.type ];\n      return info.type.includes(typeName);\n    }\n  }\n\n  console.log(permanent);\n  await storage.setDomainDiscriminator(permanent, createSimpleDiscriminator('permanent'));\n  await storage.setDomainDiscriminator(momentary, createSimpleDiscriminator('momentary'));\n  await storage.setDomainDiscriminator(unique, createSimpleDiscriminator('unique'));\n  await storage.setDomainDiscriminator(shared, createSimpleDiscriminator('shared'));\n}\n\nasync function createBootstrapAdmin(self) {\n  // return await self.emit('register_identity', self.config.identity_admin);\n}\n\nexport default async function init() {\n  const self = this;\n\n  createDirsIfNotExist(self.config.storage.location);\n\n  this.storageForEtc = storages.forEtc(this);\n  this.storageForParticles = storages.forParticles(this);\n  this.storageForDomains = storages.forDomains(this);\n  this.storageForLogs = storages.forLogs(this);\n\n  await new Promise((res, rej) => {\n    const { storageForEtc, storageForDomains } = self;\n\n    storageForEtc.get('initialized', async (err, value) => { // Can be removed. Just making sure initialization was successful.\n      if (err && err.name !== 'NotFoundError') rej(err);\n\n      if (!value) {\n        console.log('Initializing for the first time.');\n        await createCounters(storageForEtc);\n        await createMinLengthForId(storageForEtc, self.config.storage);\n        await createDomainsForNames(storageForDomains);\n        await setActionsOfDomains(storageForDomains);\n        await createBootstrapAdmin(self);\n        await storageForEtc.put('initialized', true);\n      }\n\n      res();\n    });\n  })\n}\n"],"file":"init.js"}