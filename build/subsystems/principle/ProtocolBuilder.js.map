{"version":3,"sources":["../../../src/subsystems/principle/ProtocolBuilder.js"],"names":["Protocol","Transform","constructor","source","options","sheath","methods","_write","_read","size","Designer","createMethod","protocol","name","func","args","call","removeMethod","enablePubSub","enableDial","Manager","protocols","createProtocol","action","push","updateProtocol","id","removeProtocol","listProtocols"],"mappings":";;;;;;;AAAA;;AAEA,MAAMA,QAAN,SAAuBC,iBAAvB,CAAiC;AAC/BC,EAAAA,WAAW,CAACC,MAAD,EAASC,OAAT,EAAkB;AAC3B,UAAMA,OAAN;AACA,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKE,MAAL,GAAc,EAAd;AACA,SAAKC,OAAL,GAAe,EAAf;AACD;;AAEDC,EAAAA,MAAM,GAAG,CAER;;AAEDC,EAAAA,KAAK,CAACC,IAAD,EAAO,CAEX;;AAd8B;;AAiBjC,MAAMC,QAAN,CAAe;AACbC,EAAAA,YAAY,CAACC,QAAD,EAAWC,IAAX,EAAiBC,IAAjB,EAAuB;AACjCF,IAAAA,QAAQ,CAACN,OAAT,CAAiBO,IAAjB,IAAyB,UAAU,GAAGE,IAAb,EAAmB;AAAED,MAAAA,IAAI,CAACE,IAAL,CAAUJ,QAAV,EAAoB,GAAGG,IAAvB;AAA+B,KAA7E;AACD;;AAEDE,EAAAA,YAAY,CAACL,QAAD,EAAWC,IAAX,EAAiB;AAC3B,WAAOD,QAAQ,CAACN,OAAT,CAAiBO,IAAjB,CAAP;AACD;;AAEDK,EAAAA,YAAY,GAAG,CAEd;;AAEDC,EAAAA,UAAU,GAAG,CAEZ;;AAfY;;AAkBf,MAAMC,OAAN,SAAsBV,QAAtB,CAA+B;AAC7BR,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKmB,SAAL,GAAiB,EAAjB;AACD;;AAEDC,EAAAA,cAAc,CAACC,MAAD,EAASnB,OAAT,EAAkB;AAC9B,UAAMQ,QAAQ,GAAG,IAAIZ,QAAJ,EAAjB;AACA,WAAO,KAAKqB,SAAL,CAAeG,IAAf,CAAoBZ,QAApB,CAAP;AACD;;AAEDa,EAAAA,cAAc,CAACC,EAAD,EAAKH,MAAL,EAAanB,OAAb,EAAsB,CAEnC;;AAEDuB,EAAAA,cAAc,CAACD,EAAD,EAAK,CAElB;;AAEDE,EAAAA,aAAa,GAAG,CAEf;;AArB4B;;eAwBhBR,O","sourcesContent":["import { Transform } from 'stream';\n\nclass Protocol extends Transform {\n  constructor(source, options) {\n    super(options);\n    this.source = source;\n    this.sheath = [];\n    this.methods = {};\n  }\n\n  _write() {\n\n  }\n\n  _read(size) {\n\n  }\n}\n\nclass Designer {\n  createMethod(protocol, name, func) {\n    protocol.methods[name] = function (...args) { func.call(protocol, ...args); }\n  }\n\n  removeMethod(protocol, name) {\n    delete protocol.methods[name];\n  }\n\n  enablePubSub() {\n\n  }\n\n  enableDial() {\n\n  }\n}\n\nclass Manager extends Designer {\n  constructor() {\n    super();\n    this.protocols = [];\n  }\n\n  createProtocol(action, options) {\n    const protocol = new Protocol();\n    return this.protocols.push(protocol);\n  }\n\n  updateProtocol(id, action, options) {\n\n  }\n\n  removeProtocol(id) {\n\n  }\n\n  listProtocols() {\n\n  }\n}\n\nexport default Manager;\n"],"file":"ProtocolBuilder.js"}