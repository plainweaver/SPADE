{"version":3,"sources":["../../../src/subsystems/principle/CategorySystem.js"],"names":["CategorySystemCore","constructor","self","namespace","storage","particle","grantStorage","category","item","listCategories","getAll","createCategory","name","metadata","putIndexedObject","queryCategories","queryObject","getByQueryObject","getItemsByCategory","categoryId","relations","map","rel","itemId","getCategoriesByItem","Promise","each","getByPrimaryValue","createItem","CategorySystem"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,MAAMA,kBAAN,CAAyB;AACvBC,EAAAA,WAAW,CAACC,IAAD,EAAOC,SAAP,EAAkB;AAC3B,UAAMC,OAAO,GAAGF,IAAI,CAACG,QAAL,CAAcC,YAAd,CAA2B,UAA3B,CAAhB;AACA,SAAKC,QAAL,GAAgB,oBAAQ,2BAASH,OAAT,EAAkBD,SAAS,GAAG,WAA9B,CAAR,CAAhB;AACA,SAAKK,IAAL,GAAY,oBAAQ,2BAASJ,OAAT,EAAkBD,SAAS,GAAG,OAA9B,CAAR,CAAZ;AACD;;AAED,QAAMM,cAAN,GAAuB;AACrB,WAAO,MAAM,KAAKF,QAAL,CAAcG,MAAd,EAAb;AACD;;AAED,QAAMC,cAAN,CAAqBC,IAArB,EAA2BC,QAA3B,EAAqC;AACnC,UAAM,KAAKN,QAAL,CAAcO,gBAAd,CAA+B;AAAEF,MAAAA,IAAF;AAAQ,SAAGC;AAAX,KAA/B,CAAN;AACD;;AAED,QAAME,eAAN,CAAsBC,WAAtB,EAAmC;AACjC,WAAO,MAAM,KAAKT,QAAL,CAAcU,gBAAd,CAA+BD,WAA/B,CAAb;AACD;;AAED,QAAME,kBAAN,CAAyBC,UAAzB,EAAqC;AACnC,UAAMC,SAAS,GAAG,MAAM,KAAKZ,IAAL,CAAUS,gBAAV,CAA2B;AAAEE,MAAAA;AAAF,KAA3B,CAAxB;AACA,WAAOC,SAAS,CAACC,GAAV,CAAcC,GAAG,IAAIA,GAAG,CAACC,MAAzB,CAAP;AACD;;AAED,QAAMC,mBAAN,CAA0BD,MAA1B,EAAkC;AAChC,UAAMH,SAAS,GAAG,MAAM,KAAKZ,IAAL,CAAUS,gBAAV,CAA2B;AAAEM,MAAAA;AAAF,KAA3B,CAAxB;AACA,WAAOE,kBAAQC,IAAR,CAAaN,SAAb,EAAwBE,GAAG,IAAI,KAAKf,QAAL,CAAcoB,iBAAd,CAAgCL,GAAG,CAACH,UAApC,CAA/B,CAAP;AACD;;AAED,QAAMS,UAAN,CAAiBT,UAAjB,EAA6BI,MAA7B,EAAqC;AACnC,UAAM,KAAKf,IAAL,CAAUM,gBAAV,CAA2B;AAAEK,MAAAA,UAAF;AAAcI,MAAAA;AAAd,KAA3B,CAAN;AACD;;AA/BsB;AAkCzB;;;;;AAGe,kBAAUpB,SAAV,EAAqB;AAClC,QAAM0B,cAAN,SAA6B7B,kBAA7B,CAAgD;AAC9CC,IAAAA,WAAW,CAACC,IAAD,EAAO;AAChB,YAAMA,IAAN,EAAYC,SAAZ;AACD;;AAH6C;;AAMhD,SAAO0B,cAAP;AACD","sourcesContent":["import indexed from '../../../utils/level-second-index/index';\nimport sublevel from 'subleveldown';\nimport Promise from 'bluebird';\n\nclass CategorySystemCore {\n  constructor(self, namespace) {\n    const storage = self.particle.grantStorage('abstract');\n    this.category = indexed(sublevel(storage, namespace + '/category'));\n    this.item = indexed(sublevel(storage, namespace + '/item'));\n  }\n\n  async listCategories() {\n    return await this.category.getAll();\n  }\n\n  async createCategory(name, metadata) {\n    await this.category.putIndexedObject({ name, ...metadata });\n  }\n\n  async queryCategories(queryObject) {\n    return await this.category.getByQueryObject(queryObject);\n  }\n\n  async getItemsByCategory(categoryId) {\n    const relations = await this.item.getByQueryObject({ categoryId });\n    return relations.map(rel => rel.itemId);\n  }\n\n  async getCategoriesByItem(itemId) {\n    const relations = await this.item.getByQueryObject({ itemId });\n    return Promise.each(relations, rel => this.category.getByPrimaryValue(rel.categoryId));\n  }\n\n  async createItem(categoryId, itemId) {\n    await this.item.putIndexedObject({ categoryId, itemId });\n  }\n}\n\n/**\n * Set namespace to distinguish between multiple subsystems.\n */\nexport default function (namespace) {\n  class CategorySystem extends CategorySystemCore {\n    constructor(self) {\n      super(self, namespace)\n    }\n  }\n\n  return CategorySystem;\n}\n"],"file":"CategorySystem.js"}