{"version":3,"sources":["../../src/subsystems/ParticleSystem.js"],"names":["ParticleSystem","EventEmitter","constructor","self","lightStore","heavyStore","sequence","processor","execution","abstract","shape","process","nextTick","shard","particle","action","domain","listPriorities","getStorages","createStorage","removeStorage","putInClosure","delFromClosure","buffer","grantStorage","usageInfo","simpleGrant"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEe,MAAMA,cAAN,SAA6BC,oBAA7B,CAA0C;AACvDC,EAAAA,WAAW,CAACC,IAAD,EAAO;AAChB,YADgB,CAGhB;;AACA,SAAKC,UAAL,GAAkB,sBAAQ,uBAAR,CAAlB,CAJgB,CAKhB;;AACA,SAAKC,UAAL,GAAkB,sBAAQ,sBAAQ,IAAR,CAAR,CAAlB,CANgB,CAQhB;;AACA,SAAKC,QAAL,GAAgB,yBAAM,2BAAS,KAAKF,UAAd,EAA0B,CAA1B,CAAN,CAAhB,CATgB,CAUhB;;AACA,SAAKG,SAAL,GAAiB,2BAAS,KAAKH,UAAd,EAA0B,CAA1B,CAAjB,CAXgB,CAYhB;;AACA,SAAKI,SAAL,GAAiB,6BAAM,KAAKJ,UAAX,EAAuB,KAAKC,UAA5B,EAAwC,CAAxC,CAAjB,CAbgB,CAehB;;AACA,SAAKI,QAAL,GAAgB,2BAAS,KAAKJ,UAAd,EAA0B,CAA1B,CAAhB,CAhBgB,CAiBhB;;AACA,SAAKK,KAAL,GAAa,6BAAM,2BAAS,KAAKL,UAAd,EAA0B,CAA1B,CAAN,CAAb;AAEAM,IAAAA,OAAO,CAACC,QAAR,CAAiB,MAAM;AACrB,WAAKC,KAAL,GAAaV,IAAI,CAACU,KAAlB;AACA,WAAKC,QAAL,GAAgBX,IAAI,CAACW,QAArB;AACA,WAAKC,MAAL,GAAcZ,IAAI,CAACY,MAAnB;AACA,WAAKC,MAAL,GAAcb,IAAI,CAACa,MAAnB;AACD,KALD;AAMD;;AAEDC,EAAAA,cAAc,GAAG,CAEhB;;AAEDC,EAAAA,WAAW,GAAG,CAEb;;AAEDC,EAAAA,aAAa,GAAG,CAEf;;AAEDC,EAAAA,aAAa,GAAG,CAEf;;AAEDC,EAAAA,YAAY,GAAG,CAEd;;AAEDC,EAAAA,cAAc,GAAG,CAEhB;;AAEDX,EAAAA,OAAO,CAACY,MAAD,EAAS,CAEf;;AAEDC,EAAAA,YAAY,CAACC,SAAD,EAAY;AACtB,UAAMC,WAAW,GAAG,MAAM;AACxB,aAAO,KAAKD,SAAL,CAAP;AACD,KAFD;;AAIA,WAAOC,WAAW,CAACD,SAAD,CAAlB;AACD;;AA/DsD","sourcesContent":["import { EventEmitter } from 'events';\nimport levelup from 'levelup';\nimport memdown from 'memdown';\nimport rocksdb from 'rocksdb';\nimport sublevel from 'subleveldown';\nimport array from '../../utils/level-array';\nimport cache from '../../utils/level-sync-cache';\n\nexport default class ParticleSystem extends EventEmitter {\n  constructor(self) {\n    super();\n\n    // all the temporal values to be pointed\n    this.lightStore = levelup(memdown());\n    // all the persistent values to be pointed\n    this.heavyStore = levelup(rocksdb('./'));\n\n    // waiting list of processes\n    this.sequence = array(sublevel(this.lightStore, 0));\n    // marked variables used in current process\n    this.processor = sublevel(this.lightStore, 1);\n    // marked variables used in action execution\n    this.execution = cache(this.lightStore, this.heavyStore, 2);\n\n    // for action, domain, event system.\n    this.abstract = sublevel(this.heavyStore, 3);\n    // for event system.\n    this.shape = cache(sublevel(this.heavyStore, 4));\n\n    process.nextTick(() => {\n      this.shard = self.shard;\n      this.particle = self.particle;\n      this.action = self.action;\n      this.domain = self.domain;\n    });\n  }\n\n  listPriorities() {\n\n  }\n\n  getStorages() {\n\n  }\n\n  createStorage() {\n\n  }\n\n  removeStorage() {\n\n  }\n\n  putInClosure() {\n\n  }\n\n  delFromClosure() {\n\n  }\n\n  process(buffer) {\n\n  }\n\n  grantStorage(usageInfo) {\n    const simpleGrant = () => {\n      return this[usageInfo];\n    };\n\n    return simpleGrant(usageInfo);\n  }\n}\n"],"file":"ParticleSystem.js"}