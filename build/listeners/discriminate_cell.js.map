{"version":3,"sources":["../../src/listeners/discriminate_cell.js"],"names":["process_types_and_relate","cell","types","typeDiscriminators","reduce","dscr","typeIds","Promise","all","map","type","subject","storageForTypes","get","operations","id","info","predicate","object","storageForRelations","put"],"mappings":";;;;;;;AAAe,eAAeA,wBAAf,CAAwCC,IAAxC,EAA8C;AAC3D,QAAMC,KAAK,GAAG,KAAKC,kBAAL,CAAwBC,MAAxB,CAA+B,CAACH,IAAD,EAAOI,IAAP,KAAgB;AAC3D,WAAOA,IAAI,CAACJ,IAAD,CAAX;AACD,GAFa,EAEXA,IAFW,CAAd;AAIA,QAAMK,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,GAAN,CAAUC,IAAI,IAAI;AAClD,QAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8BA,IAAI,GAAG;AAAEC,MAAAA,OAAO,EAAED;AAAX,KAAP;AAC9B,WAAO,KAAKE,eAAL,CAAqBC,GAArB,CAAyBH,IAAzB,CAAP;AACD,GAHiC,CAAZ,CAAtB;AAKA,QAAMI,UAAU,GAAGR,OAAO,CAACG,GAAR,CAAYM,EAAE,KAAK;AAAEJ,IAAAA,OAAO,EAAEV,IAAI,CAACe,IAAL,CAAUD,EAArB;AAAyBE,IAAAA,SAAS,EAAE,UAApC;AAAgDC,IAAAA,MAAM,EAAEH;AAAxD,GAAL,CAAd,CAAnB;AAEA,QAAM,KAAKI,mBAAL,CAAyBC,GAAzB,CAA6BN,UAA7B,CAAN;AAEA,SAAOA,UAAP;AACD","sourcesContent":["export default async function process_types_and_relate(cell) {\n  const types = this.typeDiscriminators.reduce((cell, dscr) => {\n    return dscr(cell);\n  }, cell);\n\n  const typeIds = await Promise.all(types.map(type => {\n    if (typeof type === 'string') type = { subject: type };\n    return this.storageForTypes.get(type);\n  }));\n\n  const operations = typeIds.map(id => ({ subject: cell.info.id, predicate: 'isTypeOf', object: id }));\n\n  await this.storageForRelations.put(operations);\n\n  return operations;\n}\n"],"file":"discriminate_cell.js"}