{"version":3,"sources":["../src/System.js"],"names":["System","constructor","config","shard","Shard","particle","Particle","action","Action","domain","Domain","event","Event","original","Object","freeze","recorder","Recorder","overlays","Overlays","receptor","Receptor","use","main","method"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;;AAGA,MAAMA,MAAN,CAAa;AACXC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,SAAKA,MAAL,GAAcA,MAAd;AAEA,SAAKC,KAAL,GAAa,IAAIC,oBAAJ,CAAU,IAAV,CAAb;AACA,SAAKC,QAAL,GAAgB,IAAIC,uBAAJ,CAAa,IAAb,CAAhB;AACA,SAAKC,MAAL,GAAc,IAAIC,qBAAJ,CAAW,IAAX,CAAd;AACA,SAAKC,MAAL,GAAc,IAAIC,qBAAJ,CAAW,IAAX,CAAd;AACA,SAAKC,KAAL,GAAa,IAAIC,oBAAJ,CAAU,IAAV,CAAb;AAEA,SAAKC,QAAL,GAAgBC,MAAM,CAACC,MAAP,CAAc,EAAE,GAAG;AAAL,KAAd,CAAhB;AACA,SAAKC,QAAL,GAAgB,IAAIC,iBAAJ,CAAa,IAAb,CAAhB;AACA,SAAKC,QAAL,GAAgB,IAAIC,iBAAJ,CAAa,IAAb,CAAhB;AACA,SAAKC,QAAL,GAAgB,IAAIC,iBAAJ,CAAa,IAAb,CAAhB;AACD;AAED;;AAEA;;;;;AAGAC,EAAAA,GAAG,CAAC,GAAGJ,QAAJ,EAAc;AACf,WAAO,KAAKA,QAAL,CAAcI,GAAd,CAAkB,GAAGJ,QAArB,CAAP;AACD;AAED;;;;;AAGA,MAAIK,IAAJ,CAASC,MAAT,EAAiB;AACf,QAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;AAChC,WAAKJ,QAAL,CAAcG,IAAd,GAAqBC,MAArB;AACD;AACF;;AAhCU;;eAmCExB,M","sourcesContent":["import Shard from './subsystems/ShardSystem';\nimport Particle from './subsystems/ParticleSystem';\nimport Action from './subsystems/ActionSystem';\nimport Domain from './subsystems/DomainSystem';\nimport Event from './subsystems/EventSystem';\nimport Recorder from './Recorder';\nimport Overlays from './Overlays';\nimport Receptor from './Receptor';\n\n/**\n * to execute: emit from event system\n */\nclass System {\n  constructor(config) {\n    this.config = config;\n\n    this.shard = new Shard(this);\n    this.particle = new Particle(this);\n    this.action = new Action(this);\n    this.domain = new Domain(this);\n    this.event = new Event(this);\n\n    this.original = Object.freeze({ ...this });\n    this.recorder = new Recorder(this);\n    this.overlays = new Overlays(this);\n    this.receptor = new Receptor(this);\n  }\n\n  /* -- shortcuts below -- */\n\n  /**\n   * Applies overlays on the system.\n   */\n  use(...overlays) {\n    return this.overlays.use(...overlays);\n  }\n\n  /**\n   * Sets main function of the system.\n   */\n  set main(method) {\n    if (typeof method === 'function') {\n      this.receptor.main = method;\n    }\n  }\n}\n\nexport default System;\n"],"file":"System.js"}