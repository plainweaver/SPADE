{"version":3,"sources":["../../src/overlays/name_tag:recursion.js"],"names":["rSeal","obj","Object","keys","forEach","key","seal","Focus","constructor","systemName","data","origin","freeze","system","result","shard","processed","particle","register","action","evaluate","analyze","domain","qualify","event","recursion","original","layers","receiver","on","process"],"mappings":";;;;;;;AAAA;;;AAGA,SAASA,KAAT,CAAeC,GAAf,EAAoB;AAClBC,EAAAA,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiBG,OAAjB,CAAyBC,GAAG,IAAI;AAC9B,QAAI,OAAOJ,GAAG,CAACI,GAAD,CAAV,KAAoB,QAAxB,EAAkC;AAChCJ,MAAAA,GAAG,CAACI,GAAD,CAAH,GAAWL,KAAK,CAACC,GAAG,CAACI,GAAD,CAAJ,CAAhB;AACD;AACF,GAJD;AAMA,SAAOH,MAAM,CAACI,IAAP,CAAYL,GAAZ,CAAP;AACD;;AAGD,MAAMM,KAAN,CAAY;AACVC,EAAAA,WAAW,CAACC,UAAD,EAAaC,IAAb,EAAmB;AAC5B,SAAKC,MAAL,GAAcT,MAAM,CAACU,MAAP,CAAc;AAC1BC,MAAAA,MAAM,EAAEJ,UADkB;AAE1BC,MAAAA,IAAI,EAAEA;AAFoB,KAAd,CAAd;AAKA,SAAKI,MAAL,GAAcd,KAAK,CAAC;AAClBe,MAAAA,KAAK,EAAE;AACLC,QAAAA,SAAS,EAAE;AADN,OADW;AAIlBC,MAAAA,QAAQ,EAAE;AACRD,QAAAA,SAAS,EAAE,KADH;AAERE,QAAAA,QAAQ,EAAE;AAFF,OAJQ;AAQlBC,MAAAA,MAAM,EAAE;AACNH,QAAAA,SAAS,EAAE,KADL;AAENI,QAAAA,QAAQ,EAAE,IAFJ;AAGNC,QAAAA,OAAO,EAAE;AAHH,OARU;AAalBC,MAAAA,MAAM,EAAE;AACNN,QAAAA,SAAS,EAAE,KADL;AAENO,QAAAA,OAAO,EAAE;AAFH,OAbU;AAiBlBC,MAAAA,KAAK,EAAE;AACLR,QAAAA,SAAS,EAAE;AADN;AAjBW,KAAD,CAAnB;AAsBA,WAAOd,MAAM,CAACI,IAAP,CAAY,IAAZ,CAAP;AACD;;AA9BS;;AAiCG,SAASmB,SAAT,CAAoBC,QAApB,EAA8BC,MAA9B,EAAsCC,QAAtC,EAAgD;AAC7DA,EAAAA,QAAQ,CAACX,QAAT,CAAkBY,EAAlB,CAAqB,UAArB,EAAiCH,QAAQ,CAACP,MAAT,CAAgBW,OAAjD;AACAF,EAAAA,QAAQ,CAACX,QAAT,CAAkBY,EAAlB,CAAqB,UAArB,EAAiCH,QAAQ,CAACJ,MAAT,CAAgBQ,OAAjD;AACAF,EAAAA,QAAQ,CAACT,MAAT,CAAgBU,EAAhB,CAAmB,UAAnB,EAA+BH,QAAQ,CAACF,KAAT,CAAeM,OAA9C;AACAF,EAAAA,QAAQ,CAACT,MAAT,CAAgBU,EAAhB,CAAmB,SAAnB,EAA8BH,QAAQ,CAACF,KAAT,CAAeM,OAA7C;AACAF,EAAAA,QAAQ,CAACN,MAAT,CAAgBO,EAAhB,CAAmB,SAAnB,EAA8BH,QAAQ,CAACF,KAAT,CAAeM,OAA7C;AACAF,EAAAA,QAAQ,CAACJ,KAAT,CAAeK,EAAf,CAAkB,UAAlB,EAA8BH,QAAQ,CAACT,QAAT,CAAkBa,OAAhD,EAN6D,CAQ7D;AACD","sourcesContent":["/**\n * Recursive sealing. Seals deeply for nested object.\n */\nfunction rSeal(obj) {\n  Object.keys(obj).forEach(key => {\n    if (typeof obj[key] === 'object') {\n      obj[key] = rSeal(obj[key]);\n    }\n  });\n\n  return Object.seal(obj);\n}\n\n\nclass Focus {\n  constructor(systemName, data) {\n    this.origin = Object.freeze({\n      system: systemName,\n      data: data,\n    });\n\n    this.result = rSeal({\n      shard: {\n        processed: false,\n      },\n      particle: {\n        processed: false,\n        register: null,\n      },\n      action: {\n        processed: false,\n        evaluate: null,\n        analyze: null,\n      },\n      domain: {\n        processed: false,\n        qualify: null,\n      },\n      event: {\n        processed: false,\n      },\n    });\n\n    return Object.seal(this);\n  }\n}\n\nexport default function recursion (original, layers, receiver) {\n  receiver.particle.on('register', original.action.process);\n  receiver.particle.on('register', original.domain.process);\n  receiver.action.on('evaluate', original.event.process);\n  receiver.action.on('analyze', original.event.process);\n  receiver.domain.on('qualify', original.event.process);\n  receiver.event.on('emission', original.particle.process);\n\n  // this.overlays.layers.recursion = this;\n}\n"],"file":"name_tag:recursion.js"}